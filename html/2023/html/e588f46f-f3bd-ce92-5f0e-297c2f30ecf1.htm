<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>ConnectDuctPlaceholdersAtElbow Method (Document, Connector, Connector)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.DB.Mechanical.MechanicalUtils.ConnectDuctPlaceholdersAtElbow(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.Connector,Autodesk.Revit.DB.Connector)" /><meta name="Description" content="Connects a pair of placeholders that can intersect in an Elbow connection." /><meta name="Microsoft.Help.ContentType" content="Reference" /><link rel="stylesheet" type="text/css" href="../styles/Presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/Dropdown.js"> </script><script type="text/javascript" src="../scripts/script_manifold.js"> </script><script type="text/javascript" src="../scripts/script_feedBack.js"> </script><script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script><script type="text/javascript" src="../scripts/CommonUtilities.js"> </script><meta name="container" content="Autodesk.Revit.DB.Mechanical" /><meta name="file" content="e588f46f-f3bd-ce92-5f0e-297c2f30ecf1" /><meta name="guid" content="e588f46f-f3bd-ce92-5f0e-297c2f30ecf1" /><xml><MSHelp:Attr Name="AssetID" Value="M:Autodesk.Revit.DB.Mechanical.MechanicalUtils.ConnectDuctPlaceholdersAtElbow(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.Connector,Autodesk.Revit.DB.Connector)" /><MSHelp:TOCTitle Title="ConnectDuctPlaceholdersAtElbow Method (Document, Connector, Connector)" /><MSHelp:RLTitle Title="MechanicalUtils.ConnectDuctPlaceholdersAtElbow Method (Document, Connector, Connector) (Autodesk.Revit.DB.Mechanical)" /><MSHelp:Keyword Index="A" Term="M:Autodesk.Revit.DB.Mechanical.MechanicalUtils.ConnectDuctPlaceholdersAtElbow(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.Connector,Autodesk.Revit.DB.Connector)" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="RevitAPI.dll" /><MSHelp:Attr Name="APIName" Value="Autodesk.Revit.DB.Mechanical.MechanicalUtils.ConnectDuctPlaceholdersAtElbow" /><MSHelp:Attr Name="DevLang" Value="CSharp" /><MSHelp:Attr Name="DevLang" Value="VB" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="Abstract" Value="Connects a pair of placeholders that can intersect in an Elbow connection." /><MSHelp:Attr Name="AssemblyVersion" Value="23.0.0.0" /></xml><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script></head><body><input type="hidden" id="userDataCache" class="userDataStyle" /><input type="hidden" id="hiddenScrollOffset" /><img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" /><img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" /><img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" /><img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" /><img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" /><img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" /><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" /><div id="header"><table id="topTable" cellspacing="0" cellpadding="0"><tr><td><span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0"><img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span><span>    </span><span id="devlangsDropdown" class="filter" tabindex="0"><img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: All </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Multiple </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: C# </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual Basic </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual C++ </nobr></label></span></td></tr></table><div id="devlangsMenu"><input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="CSharpCheckbox">C#</label><br /><input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label><br /><input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label><br /></div><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2023 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">MechanicalUtils<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ConnectDuctPlaceholdersAtElbow Method (Document, Connector, Connector)</span></td></tr><tr id="headerTableRow3"><td align="left"><a href="f7cbd23a-1b69-d9bf-88b4-df10a8c4be0b.htm">MechanicalUtils Class</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2023 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" /><span style="color: DarkGray"></span><div class="summary">
   Connects a pair of placeholders that can intersect in an Elbow connection.
</div><p /><b>Namespace:</b> <a href="0eafd899-5912-56fd-94b1-d286156e26fc.htm">Autodesk.Revit.DB.Mechanical</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 23.0.0.0 (23.1.0.0)<br /><b>Since:</b> 
   2012
<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="nolink">bool</span> <span class="identifier">ConnectDuctPlaceholdersAtElbow</span>(
	<a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a> <span class="parameter">document</span>,
	<a href="11e07082-b3f2-26a1-de79-16535f44716c.htm">Connector</a> <span class="parameter">connector1</span>,
	<a href="11e07082-b3f2-26a1-de79-16535f44716c.htm">Connector</a> <span class="parameter">connector2</span>
)</pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">ConnectDuctPlaceholdersAtElbow</span> ( _
	<span class="parameter">document</span> <span class="keyword">As</span> <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a>, _
	<span class="parameter">connector1</span> <span class="keyword">As</span> <a href="11e07082-b3f2-26a1-de79-16535f44716c.htm">Connector</a>, _
	<span class="parameter">connector2</span> <span class="keyword">As</span> <a href="11e07082-b3f2-26a1-de79-16535f44716c.htm">Connector</a> _
) <span class="keyword">As</span> <span class="nolink">Boolean</span></pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="nolink">bool</span> <span class="identifier">ConnectDuctPlaceholdersAtElbow</span>(
	<a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a>^ <span class="parameter">document</span>, 
	<a href="11e07082-b3f2-26a1-de79-16535f44716c.htm">Connector</a>^ <span class="parameter">connector1</span>, 
	<a href="11e07082-b3f2-26a1-de79-16535f44716c.htm">Connector</a>^ <span class="parameter">connector2</span>
)</pre></td></tr></table></span></div><div id="parameters"><h4 class="subHeading">Parameters</h4><dl paramName="document"><dt><span class="parameter">document</span></dt><dd>Type: <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Document</a><br />
   The document.
</dd></dl><dl paramName="connector1"><dt><span class="parameter">connector1</span></dt><dd>Type: <a href="11e07082-b3f2-26a1-de79-16535f44716c.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Connector</a><br />
   The end connector of the first placeholder.
</dd></dl><dl paramName="connector2"><dt><span class="parameter">connector2</span></dt><dd>Type: <a href="11e07082-b3f2-26a1-de79-16535f44716c.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Connector</a><br />
   The end connector of the second placeholder.
</dd></dl></div><h4 class="subHeading">Return Value</h4>
   True if connection succeeds, false otherwise.
</div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle, event)" tabindex="0"><img id="remarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style="">
   The placeholders may have a physical intersection but this is not required.
   If they are not intersecting the connectors must be coplanar and able to be moved to
   intersect each other.
   If connection fails, the placeholders cannot be physically connected.
</div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-comment">//Create a point to be the connection point of two ductPlaceholders</span>
XYZ connectionPoint = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">150</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>);

<span class="highlight-comment">//Create two new ductPlaceholders, duct1 and duct2, each ductPlaceholder has connectionPoint as its parameter</span>
Duct duct1 = Duct.CreatePlaceholder(document, systemTypeId, ductTypeId, levelId, <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>), connectionPoint);
Duct duct2 = Duct.CreatePlaceholder(document, systemTypeId, ductTypeId, levelId, connectionPoint, <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">150</span>, <span class="highlight-number">50</span>, <span class="highlight-number">0</span>));

<span class="highlight-comment">//Get Connectors of duct1 and duct2's ConnectorManager and change their type to IEnumerable&lt;Connector&gt;</span>
<span class="highlight-comment">//Get the first connector from the IEnumerable where the origin of the connector is almost equal to connectionPoint</span>
Connector connector1 = duct1.ConnectorManager.Connectors.Cast&lt;Connector&gt;().Where(c =&gt; c.Origin.IsAlmostEqualTo(connectionPoint)).First();
Connector connector2 = duct2.ConnectorManager.Connectors.Cast&lt;Connector&gt;().Where(c =&gt; c.Origin.IsAlmostEqualTo(connectionPoint)).First();

<span class="highlight-comment">//Connect duct1 and duct2 with elbow fitting by their intersecting connectors(whose origin is almost equal to connectionPoint)</span>
<span class="highlight-keyword">bool</span> connectResult = MechanicalUtils.ConnectDuctPlaceholdersAtElbow(document, connector1, connector2);

<span class="highlight-comment">//Convert duct1 and duct2 to real ducts</span>
ICollection&lt;ElementId&gt; convertedElementsId = MechanicalUtils.ConvertDuctPlaceholders(document, <span class="highlight-keyword">new</span> ElementId[] { duct1.Id, duct2.Id });</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-comment">'Create a point to be the connection point of two ductPlaceholders</span>
<span class="highlight-keyword">Dim</span> connectionPoint <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">150</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>)

<span class="highlight-comment">'Create two new ductPlaceholders, duct1 and duct2, each ductPlaceholder has connectionPoint as its parameter</span>
<span class="highlight-keyword">Dim</span> duct1 <span class="highlight-keyword">As</span> Duct = Duct.CreatePlaceholder(document, systemTypeId, ductTypeId, levelId, <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>), connectionPoint)
<span class="highlight-keyword">Dim</span> duct2 <span class="highlight-keyword">As</span> Duct = Duct.CreatePlaceholder(document, systemTypeId, ductTypeId, levelId, connectionPoint, <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">150</span>, <span class="highlight-number">50</span>, <span class="highlight-number">0</span>))

<span class="highlight-comment">'Get Connectors of duct1 and duct2's ConnectorManager and change their type to IEnumerable&lt;Connector&gt;</span>
<span class="highlight-comment">'Get the first connector from the IEnumerable where the origin of the connector is almost equal to connectionPoint</span>
<span class="highlight-keyword">Dim</span> connector1 <span class="highlight-keyword">As</span> Connector = duct1.ConnectorManager.Connectors.Cast(<span class="highlight-keyword">Of</span> Connector)().Where(<span class="highlight-keyword">Function</span>(c) c.Origin.IsAlmostEqualTo(connectionPoint)).First()
<span class="highlight-keyword">Dim</span> connector2 <span class="highlight-keyword">As</span> Connector = duct2.ConnectorManager.Connectors.Cast(<span class="highlight-keyword">Of</span> Connector)().Where(<span class="highlight-keyword">Function</span>(c) c.Origin.IsAlmostEqualTo(connectionPoint)).First()

<span class="highlight-comment">'Connect duct1 and duct2 with elbow fitting by their intersecting connectors(whose origin is almost equal to connectionPoint)</span>
<span class="highlight-keyword">Dim</span> connectResult <span class="highlight-keyword">As</span> <span class="highlight-keyword">Boolean</span> = MechanicalUtils.ConnectDuctPlaceholdersAtElbow(document, connector1, connector2)

<span class="highlight-comment">'Convert duct1 and duct2 to real ducts</span>
<span class="highlight-keyword">Dim</span> convertedElementsId <span class="highlight-keyword">As</span> ICollection(<span class="highlight-keyword">Of</span> ElementId) = MechanicalUtils.ConvertDuctPlaceholders(document, <span class="highlight-keyword">New</span> ElementId() {duct1.Id, duct2.Id})</pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(exceptionsToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exceptionsToggle, event)" tabindex="0"><img id="exceptionsToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Exceptions</span></h1><div id="exceptionsSection" class="section" name="collapseableSection" style=""><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th class="exceptionNameColumn">Exception</th><th class="exceptionConditionColumn">Condition</th></tr><tr><td><a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">Autodesk.Revit.Exceptions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ArgumentException</a></td><td>
   The owner of connector is not duct placeholder.
   -or-
   The owners of connectors belong to different types of system.
</td></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">Autodesk.Revit.Exceptions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ArgumentNullException</a></td><td>
   A non-optional argument was null
</td></tr></table></div></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="f7cbd23a-1b69-d9bf-88b4-df10a8c4be0b.htm">MechanicalUtils Class</a></div><div class="seeAlsoStyle"><a href="7b82eb6f-4daf-cc0b-0ae6-9468c95a7245.htm">ConnectDuctPlaceholdersAtElbow Overload</a></div><div class="seeAlsoStyle"><a href="0eafd899-5912-56fd-94b1-d286156e26fc.htm">Autodesk.Revit.DB.Mechanical Namespace</a></div></div></div><div id="footer"><div class="footerLine"><img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" /></div><A NAME="feedback"></A><span id="fb" class="feedbackcss"></span><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:revitapifeedback%40autodesk.com?Subject=Revit 2023 API">Autodesk</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></div></body></html>
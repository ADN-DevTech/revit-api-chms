<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>ParameterFilterElement Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="ParameterFilterElement class" /><meta name="System.Keywords" content="Autodesk.Revit.DB.ParameterFilterElement class" /><meta name="System.Keywords" content="ParameterFilterElement class, about ParameterFilterElement class" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.ParameterFilterElement" /><meta name="Microsoft.Help.Id" content="T:Autodesk.Revit.DB.ParameterFilterElement" /><meta name="Description" content="Admits elements that satisfy two conditions: The element's category must be one of a certain set of allowed categories.The element must pass a series of filter rules." /><meta name="Microsoft.Help.ContentType" content="Reference" /><link rel="stylesheet" type="text/css" href="../styles/Presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/Dropdown.js"> </script><script type="text/javascript" src="../scripts/script_manifold.js"> </script><script type="text/javascript" src="../scripts/script_feedBack.js"> </script><script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script><script type="text/javascript" src="../scripts/CommonUtilities.js"> </script><meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="b231dc85-516a-5e75-c634-c6cd81b43fc5" /><meta name="guid" content="b231dc85-516a-5e75-c634-c6cd81b43fc5" /><xml><MSHelp:Attr Name="AssetID" Value="T:Autodesk.Revit.DB.ParameterFilterElement" /><MSHelp:TOCTitle Title="ParameterFilterElement Class" /><MSHelp:RLTitle Title="ParameterFilterElement Class (Autodesk.Revit.DB)" /><MSHelp:Keyword Index="A" Term="T:Autodesk.Revit.DB.ParameterFilterElement" /><MSHelp:Keyword Index="A" Term="frlrfAutodeskRevitDBParameterFilterElementClassTopic" /><MSHelp:Keyword Index="K" Term="ParameterFilterElement class" /><MSHelp:Keyword Index="K" Term="Autodesk.Revit.DB.ParameterFilterElement class" /><MSHelp:Keyword Index="K" Term="ParameterFilterElement class, about ParameterFilterElement class" /><MSHelp:Keyword Index="F" Term="Autodesk.Revit.DB.ParameterFilterElement" /><MSHelp:Attr Name="HelpPriority" Value="2" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="RevitAPI.dll" /><MSHelp:Attr Name="APIName" Value="Autodesk.Revit.DB.ParameterFilterElement" /><MSHelp:Attr Name="DevLang" Value="CSharp" /><MSHelp:Attr Name="DevLang" Value="VB" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="Abstract" Value="Admits elements that satisfy two conditions: The element's category must be one of a certain set of allowed categories.The element must pass a series of filter rules." /><MSHelp:Attr Name="AssemblyVersion" Value="23.0.0.0" /></xml><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script></head><body><input type="hidden" id="userDataCache" class="userDataStyle" /><input type="hidden" id="hiddenScrollOffset" /><img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" /><img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" /><img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" /><img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" /><img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" /><img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" /><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" /><div id="header"><table id="topTable" cellspacing="0" cellpadding="0"><tr><td><span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0"><img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span><span>    </span><span id="devlangsDropdown" class="filter" tabindex="0"><img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: All </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Multiple </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: C# </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual Basic </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual C++ </nobr></label></span></td></tr></table><div id="devlangsMenu"><input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="CSharpCheckbox">C#</label><br /><input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label><br /><input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label><br /></div><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2023 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">ParameterFilterElement Class</span></td></tr><tr id="headerTableRow3"><td align="left"><a href="e8cb5c2b-b8ca-cbbf-819b-6956e0fd0760.htm">Members</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2023 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" /><span style="color: DarkGray"></span><div class="summary">
   Admits elements that satisfy two conditions:
   <ol><li>The element's category must be one of a certain set of allowed categories.</li><li>The element must pass a series of filter rules.</li></ol></div><p /><b>Namespace:</b> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 23.0.0.0 (23.1.0.0)<br /><b>Since:</b> 
   2011
<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">ParameterFilterElement</span> : <a href="909615cd-8abd-044a-cff2-f21fd95b8ee7.htm">FilterElement</a></pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">ParameterFilterElement</span> _
	<span class="keyword">Inherits</span> <a href="909615cd-8abd-044a-cff2-f21fd95b8ee7.htm">FilterElement</a></pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">ParameterFilterElement</span> : <span class="keyword">public</span> <a href="909615cd-8abd-044a-cff2-f21fd95b8ee7.htm">FilterElement</a></pre></td></tr></table></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// Create an ElementFilter representing a conjunction ("ANDing together") of FilterRules.</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-comment">/// &lt;param name="filterRules"&gt;A list of FilterRules&lt;/param&gt;</span>
<span class="highlight-comment">/// &lt;returns&gt;The ElementFilter.&lt;/returns&gt;</span>
<span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> ElementFilter CreateElementFilterFromFilterRules(IList&lt;FilterRule&gt; filterRules)
{
   <span class="highlight-comment">// We use a LogicalAndFilter containing one ElementParameterFilter</span>
   <span class="highlight-comment">// for each FilterRule. We could alternatively create a single</span>
   <span class="highlight-comment">// ElementParameterFilter containing the entire list of FilterRules.</span>
   IList&lt;ElementFilter&gt; elemFilters = <span class="highlight-keyword">new</span> List&lt;ElementFilter&gt;();
   <span class="highlight-keyword">foreach</span> (FilterRule filterRule <span class="highlight-keyword">in</span> filterRules)
   {
      ElementParameterFilter elemParamFilter = <span class="highlight-keyword">new</span> ElementParameterFilter(filterRule);
      elemFilters.Add(elemParamFilter);
   }
   LogicalAndFilter elemFilter = <span class="highlight-keyword">new</span> LogicalAndFilter(elemFilters);

   <span class="highlight-keyword">return</span> elemFilter;
} 


<span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// Creates a new view filter matching multiple criteria.</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-comment">/// &lt;param name="doc"&gt;&lt;/param&gt;</span>
<span class="highlight-comment">/// &lt;param name="view"&gt;&lt;/param&gt;</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> CreateViewFilter(Document doc, View view)
  {
      List&lt;ElementId&gt; categories = <span class="highlight-keyword">new</span> List&lt;ElementId&gt;();
      categories.Add(<span class="highlight-keyword">new</span> ElementId(BuiltInCategory.OST_Walls));
      List&lt;FilterRule&gt; filterRules = <span class="highlight-keyword">new</span> List&lt;FilterRule&gt;();

      <span class="highlight-keyword">using</span> (Transaction t = <span class="highlight-keyword">new</span> Transaction(doc, <span class="highlight-literal">"Add view filter"</span>))
      {
          t.Start();

          <span class="highlight-comment">// Create filter element assocated to the input categories</span>
          ParameterFilterElement parameterFilterElement = ParameterFilterElement.Create(doc, <span class="highlight-literal">"Example view filter"</span>, categories);

          <span class="highlight-comment">// Criterion 1 - wall type Function is "Exterior"</span>
          ElementId exteriorParamId = <span class="highlight-keyword">new</span> ElementId(BuiltInParameter.FUNCTION_PARAM);
          filterRules.Add(ParameterFilterRuleFactory.CreateEqualsRule(exteriorParamId, (<span class="highlight-keyword">int</span>)WallFunction.Exterior));

          <span class="highlight-comment">// Criterion 2 - wall height &gt; some number</span>
          ElementId lengthId = <span class="highlight-keyword">new</span> ElementId(BuiltInParameter.CURVE_ELEM_LENGTH);
          filterRules.Add(ParameterFilterRuleFactory.CreateGreaterOrEqualRule(lengthId, <span class="highlight-number">28.0</span>, <span class="highlight-number">0.0001</span>));

          <span class="highlight-comment">// Criterion 3 - custom shared parameter value matches string pattern</span>
          <span class="highlight-comment">// Get the id for the shared parameter - the ElementId is not hardcoded, so we need to get an instance of this type to find it</span>
          Guid spGuid = <span class="highlight-keyword">new</span> Guid(<span class="highlight-literal">"96b00b61-7f5a-4f36-a828-5cd07890a02a"</span>);
          FilteredElementCollector collector = <span class="highlight-keyword">new</span> FilteredElementCollector(doc);
          collector.OfClass(<span class="highlight-keyword">typeof</span>(Wall));
          Wall wall = collector.FirstElement() <span class="highlight-keyword">as</span> Wall;

          <span class="highlight-keyword">if</span> (wall != <span class="highlight-keyword">null</span>)
          {
              Parameter sharedParam = wall.get_Parameter(spGuid);
              ElementId sharedParamId = sharedParam.Id;

              filterRules.Add(ParameterFilterRuleFactory.CreateBeginsWithRule(sharedParamId, <span class="highlight-literal">"15."</span>));
          }

          ElementFilter elemFilter = CreateElementFilterFromFilterRules(filterRules);
          parameterFilterElement.SetElementFilter(elemFilter);

          <span class="highlight-comment">// Apply filter to view</span>
          view.AddFilter(parameterFilterElement.Id);
          view.SetFilterVisibility(parameterFilterElement.Id, <span class="highlight-keyword">false</span>);
          t.Commit();
      }
  }</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Sub</span> CreateViewFilter(doc <span class="highlight-keyword">As</span> Document, view <span class="highlight-keyword">As</span> View)
      <span class="highlight-keyword">Dim</span> categories <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> ElementId)()
      categories.Add(<span class="highlight-keyword">New</span> ElementId(BuiltInCategory.OST_Walls))
      <span class="highlight-keyword">Dim</span> filterRules <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> FilterRule)()

      <span class="highlight-keyword">Using</span> t <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Transaction(doc, <span class="highlight-literal">"Add view filter"</span>)
          t.Start()

          <span class="highlight-comment">' Create filter element assocated to the input categories</span>
          <span class="highlight-keyword">Dim</span> parameterFilterElement__1 <span class="highlight-keyword">As</span> ParameterFilterElement = ParameterFilterElement.Create(doc, <span class="highlight-literal">"Example view filter"</span>, categories)

          <span class="highlight-comment">' Criterion 1 - wall type Function is "Exterior"</span>
          <span class="highlight-keyword">Dim</span> exteriorParamId <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> ElementId(BuiltInParameter.FUNCTION_PARAM)
          filterRules.Add(ParameterFilterRuleFactory.CreateEqualsRule(exteriorParamId, <span class="highlight-keyword">CInt</span>(WallFunction.Exterior)))

          <span class="highlight-comment">' Criterion 2 - wall height &gt; some number</span>
          <span class="highlight-keyword">Dim</span> lengthId <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> ElementId(BuiltInParameter.CURVE_ELEM_LENGTH)
          filterRules.Add(ParameterFilterRuleFactory.CreateGreaterOrEqualRule(lengthId, <span class="highlight-number">28.0</span>, <span class="highlight-number">0.0001</span>))

          <span class="highlight-comment">' Criterion 3 - custom shared parameter value matches string pattern</span>
          <span class="highlight-comment">' Get the id for the shared parameter - the ElementId is not hardcoded, so we need to get an instance of this type to find it</span>
          <span class="highlight-keyword">Dim</span> spGuid <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Guid(<span class="highlight-literal">"96b00b61-7f5a-4f36-a828-5cd07890a02a"</span>)
          <span class="highlight-keyword">Dim</span> collector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(doc)
          collector.OfClass(<span class="highlight-keyword">GetType</span>(Wall))
          <span class="highlight-keyword">Dim</span> wall <span class="highlight-keyword">As</span> Wall = <span class="highlight-keyword">TryCast</span>(collector.FirstElement(), Wall)

          <span class="highlight-keyword">If</span> wall <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
              <span class="highlight-keyword">Dim</span> sharedParam <span class="highlight-keyword">As</span> Parameter = wall.Parameter(spGuid)
              <span class="highlight-keyword">Dim</span> sharedParamId <span class="highlight-keyword">As</span> ElementId = sharedParam.Id

              filterRules.Add(ParameterFilterRuleFactory.CreateBeginsWithRule(sharedParamId, <span class="highlight-literal">"15."</span>))
          <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-comment">' We use a LogicalAndFilter containing one ElementParameterFilter</span>
      <span class="highlight-comment">' for each FilterRule. We could alternatively create a single</span>
      <span class="highlight-comment">' ElementParameterFilter containing the entire list of FilterRules.</span>
      <span class="highlight-keyword">Dim</span> elemFilters <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> ElementFilter)()
      <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> filterRule <span class="highlight-keyword">As</span> FilterRule <span class="highlight-keyword">In</span> filterRules
         <span class="highlight-keyword">Dim</span> elemParamFilter <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> ElementParameterFilter(filterRule)
         elemFilters.Add(elemParamFilter)
      <span class="highlight-keyword">Next</span>
      <span class="highlight-keyword">Dim</span> elemFilter <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> LogicalAndFilter(elemFilters)
      parameterFilterElement__1.SetElementFilter(elemFilter)

      <span class="highlight-comment">' Apply filter to view</span>
      view.AddFilter(parameterFilterElement__1.Id)
          view.SetFilterVisibility(parameterFilterElement__1.Id, <span class="highlight-keyword">False</span>)
          t.Commit()
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(familyToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(familyToggle, event)" tabindex="0"><img id="familyToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Inheritance Hierarchy</span></h1><div id="familySection" class="section" name="collapseableSection" style=""><span class="nolink">System<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Object</span><br />  <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Element</a><br />    <a href="909615cd-8abd-044a-cff2-f21fd95b8ee7.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>FilterElement</a><br />      <span class="selflink">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ParameterFilterElement</span><br /></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="e8cb5c2b-b8ca-cbbf-819b-6956e0fd0760.htm">ParameterFilterElement Members</a></div><div class="seeAlsoStyle"><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div><div id="footer"><div class="footerLine"><img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" /></div><A NAME="feedback"></A><span id="fb" class="feedbackcss"></span><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:revitapifeedback%40autodesk.com?Subject=Revit 2023 API">Autodesk</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></div></body></html>
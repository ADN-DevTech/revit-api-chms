<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>BRepBuilder Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="BRepBuilder class" /><meta name="System.Keywords" content="Autodesk.Revit.DB.BRepBuilder class" /><meta name="System.Keywords" content="BRepBuilder class, about BRepBuilder class" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.BRepBuilder" /><meta name="Microsoft.Help.Id" content="T:Autodesk.Revit.DB.BRepBuilder" /><meta name="Description" content="A class that allows direct construction of geometry objects (solids, open shells, etc.)." /><meta name="Microsoft.Help.ContentType" content="Reference" /><link rel="stylesheet" type="text/css" href="../styles/Presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/Dropdown.js"> </script><script type="text/javascript" src="../scripts/script_manifold.js"> </script><script type="text/javascript" src="../scripts/script_feedBack.js"> </script><script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script><script type="text/javascript" src="../scripts/CommonUtilities.js"> </script><meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="94c1fef4-2933-ce67-9c2d-361cbf8a42b4" /><meta name="guid" content="94c1fef4-2933-ce67-9c2d-361cbf8a42b4" /><xml><MSHelp:Attr Name="AssetID" Value="T:Autodesk.Revit.DB.BRepBuilder" /><MSHelp:TOCTitle Title="BRepBuilder Class" /><MSHelp:RLTitle Title="BRepBuilder Class (Autodesk.Revit.DB)" /><MSHelp:Keyword Index="A" Term="T:Autodesk.Revit.DB.BRepBuilder" /><MSHelp:Keyword Index="A" Term="frlrfAutodeskRevitDBBRepBuilderClassTopic" /><MSHelp:Keyword Index="K" Term="BRepBuilder class" /><MSHelp:Keyword Index="K" Term="Autodesk.Revit.DB.BRepBuilder class" /><MSHelp:Keyword Index="K" Term="BRepBuilder class, about BRepBuilder class" /><MSHelp:Keyword Index="F" Term="Autodesk.Revit.DB.BRepBuilder" /><MSHelp:Attr Name="HelpPriority" Value="2" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="RevitAPI.dll" /><MSHelp:Attr Name="APIName" Value="Autodesk.Revit.DB.BRepBuilder" /><MSHelp:Attr Name="DevLang" Value="CSharp" /><MSHelp:Attr Name="DevLang" Value="VB" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="Abstract" Value="A class that allows direct construction of geometry objects (solids, open shells, etc.)." /><MSHelp:Attr Name="AssemblyVersion" Value="23.0.0.0" /></xml><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script></head><body><input type="hidden" id="userDataCache" class="userDataStyle" /><input type="hidden" id="hiddenScrollOffset" /><img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" /><img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" /><img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" /><img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" /><img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" /><img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" /><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" /><div id="header"><table id="topTable" cellspacing="0" cellpadding="0"><tr><td><span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0"><img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span><span>    </span><span id="devlangsDropdown" class="filter" tabindex="0"><img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: All </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Multiple </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: C# </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual Basic </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual C++ </nobr></label></span></td></tr></table><div id="devlangsMenu"><input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="CSharpCheckbox">C#</label><br /><input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label><br /><input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label><br /></div><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2023 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">BRepBuilder Class</span></td></tr><tr id="headerTableRow3"><td align="left"><a href="fa227e06-2aa0-066e-03ac-08fed51023fb.htm">Members</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2023 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" /><span style="color: DarkGray"></span><div class="summary">
   A class that allows direct construction of geometry objects (solids, open shells, etc.).
</div><p /><b>Namespace:</b> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 23.0.0.0 (23.1.0.0)<br /><b>Since:</b> 
   2016
<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">BRepBuilder</span> : <a href="66c1678c-2e01-e0de-1386-5a0e1eb3ccff.htm">ShapeBuilder</a></pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">BRepBuilder</span> _
	<span class="keyword">Inherits</span> <a href="66c1678c-2e01-e0de-1386-5a0e1eb3ccff.htm">ShapeBuilder</a></pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">BRepBuilder</span> : <span class="keyword">public</span> <a href="66c1678c-2e01-e0de-1386-5a0e1eb3ccff.htm">ShapeBuilder</a></pre></td></tr></table></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> CreateDirectShapeFromCylinder(Document doc)
{
    <span class="highlight-comment">// Naming convention for faces and edges: we assume that x is to the left and pointing down, y is horizontal and pointing to the right, z is up</span>
    BRepBuilder brepBuilder = <span class="highlight-keyword">new</span> BRepBuilder(BRepType.Solid);

    <span class="highlight-comment">// The surfaces of the four faces.</span>
    Frame basis = <span class="highlight-keyword">new</span> Frame(<span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">50</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">-1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>));
    CylindricalSurface cylSurf = CylindricalSurface.Create(basis, <span class="highlight-number">50</span>);
    Plane top = Plane.CreateByNormalAndOrigin(<span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>), <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">100</span>));  <span class="highlight-comment">// normal points outside the cylinder</span>
    Plane bottom = Plane.CreateByNormalAndOrigin(<span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>), <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>)); <span class="highlight-comment">// normal points inside the cylinder</span>

    <span class="highlight-comment">// Add the four faces</span>
    BRepBuilderGeometryId frontCylFaceId = brepBuilder.AddFace(BRepBuilderSurfaceGeometry.Create(cylSurf, <span class="highlight-keyword">null</span>), <span class="highlight-keyword">false</span>);
    BRepBuilderGeometryId backCylFaceId = brepBuilder.AddFace(BRepBuilderSurfaceGeometry.Create(cylSurf, <span class="highlight-keyword">null</span>), <span class="highlight-keyword">false</span>);
    BRepBuilderGeometryId topFaceId = brepBuilder.AddFace(BRepBuilderSurfaceGeometry.Create(top, <span class="highlight-keyword">null</span>), <span class="highlight-keyword">false</span>);
    BRepBuilderGeometryId bottomFaceId = brepBuilder.AddFace(BRepBuilderSurfaceGeometry.Create(bottom, <span class="highlight-keyword">null</span>), <span class="highlight-keyword">true</span>);

    <span class="highlight-comment">// Geometry for the four semi-circular edges and two vertical linear edges</span>
    BRepBuilderEdgeGeometry frontEdgeBottom = BRepBuilderEdgeGeometry.Create(Arc.Create(<span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">50</span>, <span class="highlight-number">-50</span>, <span class="highlight-number">0</span>)));
    BRepBuilderEdgeGeometry backEdgeBottom = BRepBuilderEdgeGeometry.Create(Arc.Create(<span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">50</span>, <span class="highlight-number">-150</span>, <span class="highlight-number">0</span>)));

    BRepBuilderEdgeGeometry frontEdgeTop = BRepBuilderEdgeGeometry.Create(Arc.Create(<span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">100</span>), <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">100</span>), <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">50</span>, <span class="highlight-number">-50</span>, <span class="highlight-number">100</span>)));
    BRepBuilderEdgeGeometry backEdgeTop = BRepBuilderEdgeGeometry.Create(Arc.Create(<span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">100</span>), <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">100</span>), <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">50</span>, <span class="highlight-number">-150</span>, <span class="highlight-number">100</span>)));

    BRepBuilderEdgeGeometry linearEdgeFront = BRepBuilderEdgeGeometry.Create(<span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">100</span>));
    BRepBuilderEdgeGeometry linearEdgeBack = BRepBuilderEdgeGeometry.Create(<span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">100</span>));

    <span class="highlight-comment">// Add the six edges</span>
    BRepBuilderGeometryId frontEdgeBottomId = brepBuilder.AddEdge(frontEdgeBottom);
    BRepBuilderGeometryId frontEdgeTopId = brepBuilder.AddEdge(frontEdgeTop);
    BRepBuilderGeometryId linearEdgeFrontId = brepBuilder.AddEdge(linearEdgeFront);
    BRepBuilderGeometryId linearEdgeBackId = brepBuilder.AddEdge(linearEdgeBack);
    BRepBuilderGeometryId backEdgeBottomId = brepBuilder.AddEdge(backEdgeBottom);
    BRepBuilderGeometryId backEdgeTopId = brepBuilder.AddEdge(backEdgeTop);

    <span class="highlight-comment">// Loops of the four faces</span>
    BRepBuilderGeometryId loopId_Top = brepBuilder.AddLoop(topFaceId);
    BRepBuilderGeometryId loopId_Bottom = brepBuilder.AddLoop(bottomFaceId);
    BRepBuilderGeometryId loopId_Front = brepBuilder.AddLoop(frontCylFaceId);
    BRepBuilderGeometryId loopId_Back = brepBuilder.AddLoop(backCylFaceId);

    <span class="highlight-comment">// Add coedges for the loop of the front face</span>
    brepBuilder.AddCoEdge(loopId_Front, linearEdgeBackId, <span class="highlight-keyword">false</span>);
    brepBuilder.AddCoEdge(loopId_Front, frontEdgeTopId, <span class="highlight-keyword">false</span>);
    brepBuilder.AddCoEdge(loopId_Front, linearEdgeFrontId, <span class="highlight-keyword">true</span>);
    brepBuilder.AddCoEdge(loopId_Front, frontEdgeBottomId, <span class="highlight-keyword">true</span>);
    brepBuilder.FinishLoop(loopId_Front);
    brepBuilder.FinishFace(frontCylFaceId);

    <span class="highlight-comment">// Add coedges for the loop of the back face</span>
    brepBuilder.AddCoEdge(loopId_Back, linearEdgeBackId, <span class="highlight-keyword">true</span>);
    brepBuilder.AddCoEdge(loopId_Back, backEdgeBottomId, <span class="highlight-keyword">true</span>);
    brepBuilder.AddCoEdge(loopId_Back, linearEdgeFrontId, <span class="highlight-keyword">false</span>);
    brepBuilder.AddCoEdge(loopId_Back, backEdgeTopId, <span class="highlight-keyword">true</span>);
    brepBuilder.FinishLoop(loopId_Back);
    brepBuilder.FinishFace(backCylFaceId);

    <span class="highlight-comment">// Add coedges for the loop of the top face</span>
    brepBuilder.AddCoEdge(loopId_Top, backEdgeTopId, <span class="highlight-keyword">false</span>);
    brepBuilder.AddCoEdge(loopId_Top, frontEdgeTopId, <span class="highlight-keyword">true</span>);
    brepBuilder.FinishLoop(loopId_Top);
    brepBuilder.FinishFace(topFaceId);

    <span class="highlight-comment">// Add coedges for the loop of the bottom face</span>
    brepBuilder.AddCoEdge(loopId_Bottom, frontEdgeBottomId, <span class="highlight-keyword">false</span>);
    brepBuilder.AddCoEdge(loopId_Bottom, backEdgeBottomId, <span class="highlight-keyword">false</span>);
    brepBuilder.FinishLoop(loopId_Bottom);
    brepBuilder.FinishFace(bottomFaceId);

    brepBuilder.Finish();

    <span class="highlight-keyword">using</span> (Transaction tr = <span class="highlight-keyword">new</span> Transaction(doc, <span class="highlight-literal">"Create a DirectShape"</span>))
    {
        tr.Start();
        DirectShape ds = DirectShape.CreateElement(doc, <span class="highlight-keyword">new</span> ElementId(BuiltInCategory.OST_GenericModel));
        ds.SetShape(brepBuilder);
        tr.Commit();
    }
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> CreateDirectShapeFromCylinder(doc <span class="highlight-keyword">As</span> Document)
    <span class="highlight-comment">' Naming convention for faces and edges: we assume that x is to the left and pointing down, y is horizontal and pointing to the right, z is up</span>
    <span class="highlight-keyword">Dim</span> brepBuilder <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> BRepBuilder(BRepType.Solid)

    <span class="highlight-comment">' The surfaces of the four faces.</span>
    <span class="highlight-keyword">Dim</span> basis <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Frame(<span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">50</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">-1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>))
    <span class="highlight-keyword">Dim</span> cylSurf <span class="highlight-keyword">As</span> CylindricalSurface = CylindricalSurface.Create(basis, <span class="highlight-number">50</span>)
    <span class="highlight-keyword">Dim</span> top <span class="highlight-keyword">As</span> Plane = Plane.CreateByNormalAndOrigin(<span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>), <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">100</span>))
    <span class="highlight-comment">' normal points outside the cylinder</span>
    <span class="highlight-keyword">Dim</span> bottom <span class="highlight-keyword">As</span> Plane = Plane.CreateByNormalAndOrigin(<span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>), <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>))
    <span class="highlight-comment">' normal points inside the cylinder</span>
    <span class="highlight-comment">' Add the four faces</span>
    <span class="highlight-keyword">Dim</span> frontCylFaceId <span class="highlight-keyword">As</span> BRepBuilderGeometryId = brepBuilder.AddFace(BRepBuilderSurfaceGeometry.Create(cylSurf, <span class="highlight-keyword">Nothing</span>), <span class="highlight-keyword">False</span>)
    <span class="highlight-keyword">Dim</span> backCylFaceId <span class="highlight-keyword">As</span> BRepBuilderGeometryId = brepBuilder.AddFace(BRepBuilderSurfaceGeometry.Create(cylSurf, <span class="highlight-keyword">Nothing</span>), <span class="highlight-keyword">False</span>)
    <span class="highlight-keyword">Dim</span> topFaceId <span class="highlight-keyword">As</span> BRepBuilderGeometryId = brepBuilder.AddFace(BRepBuilderSurfaceGeometry.Create(top, <span class="highlight-keyword">Nothing</span>), <span class="highlight-keyword">False</span>)
    <span class="highlight-keyword">Dim</span> bottomFaceId <span class="highlight-keyword">As</span> BRepBuilderGeometryId = brepBuilder.AddFace(BRepBuilderSurfaceGeometry.Create(bottom, <span class="highlight-keyword">Nothing</span>), <span class="highlight-keyword">True</span>)

    <span class="highlight-comment">' Geometry for the four semi-circular edges and two vertical linear edges</span>
    <span class="highlight-keyword">Dim</span> frontEdgeBottom <span class="highlight-keyword">As</span> BRepBuilderEdgeGeometry = BRepBuilderEdgeGeometry.Create(Arc.Create(<span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">50</span>, <span class="highlight-number">-50</span>, <span class="highlight-number">0</span>)))
    <span class="highlight-keyword">Dim</span> backEdgeBottom <span class="highlight-keyword">As</span> BRepBuilderEdgeGeometry = BRepBuilderEdgeGeometry.Create(Arc.Create(<span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">50</span>, <span class="highlight-number">-150</span>, <span class="highlight-number">0</span>)))

    <span class="highlight-keyword">Dim</span> frontEdgeTop <span class="highlight-keyword">As</span> BRepBuilderEdgeGeometry = BRepBuilderEdgeGeometry.Create(Arc.Create(<span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">100</span>), <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">100</span>), <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">50</span>, <span class="highlight-number">-50</span>, <span class="highlight-number">100</span>)))
    <span class="highlight-keyword">Dim</span> backEdgeTop <span class="highlight-keyword">As</span> BRepBuilderEdgeGeometry = BRepBuilderEdgeGeometry.Create(Arc.Create(<span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">100</span>), <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">100</span>), <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">50</span>, <span class="highlight-number">-150</span>, <span class="highlight-number">100</span>)))

    <span class="highlight-keyword">Dim</span> linearEdgeFront <span class="highlight-keyword">As</span> BRepBuilderEdgeGeometry = BRepBuilderEdgeGeometry.Create(<span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">100</span>))
    <span class="highlight-keyword">Dim</span> linearEdgeBack <span class="highlight-keyword">As</span> BRepBuilderEdgeGeometry = BRepBuilderEdgeGeometry.Create(<span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">-100</span>, <span class="highlight-number">100</span>))

    <span class="highlight-comment">' Add the six edges</span>
    <span class="highlight-keyword">Dim</span> frontEdgeBottomId <span class="highlight-keyword">As</span> BRepBuilderGeometryId = brepBuilder.AddEdge(frontEdgeBottom)
    <span class="highlight-keyword">Dim</span> frontEdgeTopId <span class="highlight-keyword">As</span> BRepBuilderGeometryId = brepBuilder.AddEdge(frontEdgeTop)
    <span class="highlight-keyword">Dim</span> linearEdgeFrontId <span class="highlight-keyword">As</span> BRepBuilderGeometryId = brepBuilder.AddEdge(linearEdgeFront)
    <span class="highlight-keyword">Dim</span> linearEdgeBackId <span class="highlight-keyword">As</span> BRepBuilderGeometryId = brepBuilder.AddEdge(linearEdgeBack)
    <span class="highlight-keyword">Dim</span> backEdgeBottomId <span class="highlight-keyword">As</span> BRepBuilderGeometryId = brepBuilder.AddEdge(backEdgeBottom)
    <span class="highlight-keyword">Dim</span> backEdgeTopId <span class="highlight-keyword">As</span> BRepBuilderGeometryId = brepBuilder.AddEdge(backEdgeTop)

    <span class="highlight-comment">' Loops of the four faces</span>
    <span class="highlight-keyword">Dim</span> loopId_Top <span class="highlight-keyword">As</span> BRepBuilderGeometryId = brepBuilder.AddLoop(topFaceId)
    <span class="highlight-keyword">Dim</span> loopId_Bottom <span class="highlight-keyword">As</span> BRepBuilderGeometryId = brepBuilder.AddLoop(bottomFaceId)
    <span class="highlight-keyword">Dim</span> loopId_Front <span class="highlight-keyword">As</span> BRepBuilderGeometryId = brepBuilder.AddLoop(frontCylFaceId)
    <span class="highlight-keyword">Dim</span> loopId_Back <span class="highlight-keyword">As</span> BRepBuilderGeometryId = brepBuilder.AddLoop(backCylFaceId)

    <span class="highlight-comment">' Add coedges for the loop of the front face</span>
    brepBuilder.AddCoEdge(loopId_Front, linearEdgeBackId, <span class="highlight-keyword">False</span>)
    brepBuilder.AddCoEdge(loopId_Front, frontEdgeTopId, <span class="highlight-keyword">False</span>)
    brepBuilder.AddCoEdge(loopId_Front, linearEdgeFrontId, <span class="highlight-keyword">True</span>)
    brepBuilder.AddCoEdge(loopId_Front, frontEdgeBottomId, <span class="highlight-keyword">True</span>)
    brepBuilder.FinishLoop(loopId_Front)
    brepBuilder.FinishFace(frontCylFaceId)

    <span class="highlight-comment">' Add coedges for the loop of the back face</span>
    brepBuilder.AddCoEdge(loopId_Back, linearEdgeBackId, <span class="highlight-keyword">True</span>)
    brepBuilder.AddCoEdge(loopId_Back, backEdgeBottomId, <span class="highlight-keyword">True</span>)
    brepBuilder.AddCoEdge(loopId_Back, linearEdgeFrontId, <span class="highlight-keyword">False</span>)
    brepBuilder.AddCoEdge(loopId_Back, backEdgeTopId, <span class="highlight-keyword">True</span>)
    brepBuilder.FinishLoop(loopId_Back)
    brepBuilder.FinishFace(backCylFaceId)

    <span class="highlight-comment">' Add coedges for the loop of the top face</span>
    brepBuilder.AddCoEdge(loopId_Top, backEdgeTopId, <span class="highlight-keyword">False</span>)
    brepBuilder.AddCoEdge(loopId_Top, frontEdgeTopId, <span class="highlight-keyword">True</span>)
    brepBuilder.FinishLoop(loopId_Top)
    brepBuilder.FinishFace(topFaceId)

    <span class="highlight-comment">' Add coedges for the loop of the bottom face</span>
    brepBuilder.AddCoEdge(loopId_Bottom, frontEdgeBottomId, <span class="highlight-keyword">False</span>)
    brepBuilder.AddCoEdge(loopId_Bottom, backEdgeBottomId, <span class="highlight-keyword">False</span>)
    brepBuilder.FinishLoop(loopId_Bottom)
    brepBuilder.FinishFace(bottomFaceId)

    brepBuilder.Finish()

    <span class="highlight-keyword">Using</span> tr <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Transaction(doc, <span class="highlight-literal">"Create a DirectShape"</span>)
        tr.Start()
        <span class="highlight-keyword">Dim</span> ds <span class="highlight-keyword">As</span> DirectShape = DirectShape.CreateElement(doc, <span class="highlight-keyword">New</span> ElementId(BuiltInCategory.OST_GenericModel))
        ds.SetShape(brepBuilder)
        tr.Commit()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(familyToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(familyToggle, event)" tabindex="0"><img id="familyToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Inheritance Hierarchy</span></h1><div id="familySection" class="section" name="collapseableSection" style=""><span class="nolink">System<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Object</span><br />  <a href="66c1678c-2e01-e0de-1386-5a0e1eb3ccff.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ShapeBuilder</a><br />    <span class="selflink">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>BRepBuilder</span><br /></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="fa227e06-2aa0-066e-03ac-08fed51023fb.htm">BRepBuilder Members</a></div><div class="seeAlsoStyle"><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div><div id="footer"><div class="footerLine"><img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" /></div><A NAME="feedback"></A><span id="fb" class="feedbackcss"></span><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:revitapifeedback%40autodesk.com?Subject=Revit 2023 API">Autodesk</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></div></body></html>
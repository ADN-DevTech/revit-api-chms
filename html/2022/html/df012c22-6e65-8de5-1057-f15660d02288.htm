<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>SetValue Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="SetValue method" /><meta name="System.Keywords" content="GlobalParameter.SetValue method" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.GlobalParameter.SetValue" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.DB.GlobalParameter.SetValue(Autodesk.Revit.DB.ParameterValue)" /><meta name="Description" content="Sets a new value of the global parameter." /><meta name="Microsoft.Help.ContentType" content="Reference" /><link rel="stylesheet" type="text/css" href="../styles/Presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/Dropdown.js"> </script><script type="text/javascript" src="../scripts/script_manifold.js"> </script><script type="text/javascript" src="../scripts/script_feedBack.js"> </script><script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script><script type="text/javascript" src="../scripts/CommonUtilities.js"> </script><meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="df012c22-6e65-8de5-1057-f15660d02288" /><meta name="guid" content="df012c22-6e65-8de5-1057-f15660d02288" /><xml><MSHelp:Attr Name="AssetID" Value="M:Autodesk.Revit.DB.GlobalParameter.SetValue(Autodesk.Revit.DB.ParameterValue)" /><MSHelp:TOCTitle Title="SetValue Method " /><MSHelp:RLTitle Title="GlobalParameter.SetValue Method  (Autodesk.Revit.DB)" /><MSHelp:Keyword Index="A" Term="M:Autodesk.Revit.DB.GlobalParameter.SetValue(Autodesk.Revit.DB.ParameterValue)" /><MSHelp:Keyword Index="A" Term="frlrfAutodeskRevitDBGlobalParameterClassSetValueTopic" /><MSHelp:Keyword Index="K" Term="SetValue method" /><MSHelp:Keyword Index="K" Term="GlobalParameter.SetValue method" /><MSHelp:Keyword Index="F" Term="Autodesk.Revit.DB.GlobalParameter.SetValue" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="RevitAPI.dll" /><MSHelp:Attr Name="APIName" Value="Autodesk.Revit.DB.GlobalParameter.SetValue" /><MSHelp:Attr Name="DevLang" Value="CSharp" /><MSHelp:Attr Name="DevLang" Value="VB" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="Abstract" Value="Sets a new value of the global parameter." /><MSHelp:Attr Name="AssemblyVersion" Value="22.0.0.0" /></xml><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script></head><body><input type="hidden" id="userDataCache" class="userDataStyle" /><input type="hidden" id="hiddenScrollOffset" /><img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" /><img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" /><img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" /><img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" /><img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" /><img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" /><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" /><div id="header"><table id="topTable" cellspacing="0" cellpadding="0"><tr><td><span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0"><img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span><span>    </span><span id="devlangsDropdown" class="filter" tabindex="0"><img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: All </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Multiple </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: C# </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual Basic </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual C++ </nobr></label></span></td></tr></table><div id="devlangsMenu"><input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="CSharpCheckbox">C#</label><br /><input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label><br /><input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label><br /></div><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2022 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">GlobalParameter<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>SetValue Method </span></td></tr><tr id="headerTableRow3"><td align="left"><a href="b0e53a4a-84ad-abb4-358d-9797870f101b.htm">GlobalParameter Class</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2022 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" /><span style="color: DarkGray"></span><div class="summary">
   Sets a new value of the global parameter.
</div><p /><b>Namespace:</b> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 22.0.0.0 (22.1.0.0)<br /><b>Since:</b> 
   2016 Subscription Update
<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">void</span> <span class="identifier">SetValue</span>(
	<a href="366521ef-ecc2-c3e3-feb5-81b3bbd8df0c.htm">ParameterValue</a> <span class="parameter">value</span>
)</pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Sub</span> <span class="identifier">SetValue</span> ( _
	<span class="parameter">value</span> <span class="keyword">As</span> <a href="366521ef-ecc2-c3e3-feb5-81b3bbd8df0c.htm">ParameterValue</a> _
)</pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">void</span> <span class="identifier">SetValue</span>(
	<a href="366521ef-ecc2-c3e3-feb5-81b3bbd8df0c.htm">ParameterValue</a>^ <span class="parameter">value</span>
)</pre></td></tr></table></span></div><div id="parameters"><h4 class="subHeading">Parameters</h4><dl paramName="value"><dt><span class="parameter">value</span></dt><dd>Type: <a href="366521ef-ecc2-c3e3-feb5-81b3bbd8df0c.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ParameterValue</a><br />
   An instance of one of the value classes derived from ParameterValue.
</dd></dl></div></div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle, event)" tabindex="0"><img id="remarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style=""><p>Note that a value can only be set for parameters that are neither
   formula-driven nor dimension-driven, as those have their values determined
   by evaluating the formula or by the dimension, respectively.</p><p>The argument this method accepts is of the same type of <a href="366521ef-ecc2-c3e3-feb5-81b3bbd8df0c.htm">ParameterValue</a>
   that is returned by <a href="56eb0e54-eac4-9b51-3122-e4fb065b63f0.htm">GetValue<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>. However, the type can also be easily deduced:
   <b>Text</b> parameters accept only <a href="2f79fff4-9773-471a-83f8-5636459bdbe5.htm">StringParameterValue</a>.
   <b>Integer</b> and <b>YesNo</b> parameters accept only <a href="14c16038-74bf-205b-ac93-6ffa6274c034.htm">IntegerParameterValue</a>.
   All other types of parameters accept only <a href="561ef32b-c3bc-3847-ef2a-27f4a011e650.htm">DoubleParameterValue</a>.
   Curiously, the actual value of a <b>YesNo</b> parameter can be only either 0 or 1.</p></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// Modifies values of certain types of global parameters so that</span>
<span class="highlight-comment">/// - integer values will be incremented by one</span>
<span class="highlight-comment">/// - double values will be multiplied by two</span>
<span class="highlight-comment">/// - boolean values will be negated</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-comment">/// &lt;param name="document"&gt;Revit project document in which we create global parameters.&lt;/param&gt;</span>
<span class="highlight-comment">/// &lt;param name="gpset"&gt;A set of ElementIds of global parameter elements&lt;/param&gt;</span>
<span class="highlight-comment">/// &lt;returns&gt;Number of actually modified values&lt;/returns&gt;</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">int</span> ModifyGlobalParametersValues(Document document, ISet&lt;ElementId&gt; gpset)
{
    <span class="highlight-keyword">int</span> nChangedValues = <span class="highlight-number">0</span>;     <span class="highlight-comment">// number of values changed</span>

    <span class="highlight-comment">// we need a transaction to modify the model</span>
    <span class="highlight-keyword">using</span> (Transaction trans = <span class="highlight-keyword">new</span> Transaction(document, <span class="highlight-literal">"Change global parameters values"</span>))
    {
        trans.Start();

        <span class="highlight-keyword">foreach</span>(ElementId gpid <span class="highlight-keyword">in</span> gpset)
        {
            <span class="highlight-comment">// filter out element Ids that are not of a global parameters</span>
            <span class="highlight-comment">// (in production code, this would be an assert-able situation)</span>
            <span class="highlight-keyword">if</span> (!GlobalParametersManager.IsValidGlobalParameter(document, gpid))
                <span class="highlight-keyword">continue</span>;

            <span class="highlight-comment">// get the current value of the global parameter</span>
            GlobalParameter gp = document.GetElement(gpid) <span class="highlight-keyword">as</span> GlobalParameter;
            ParameterValue gpvalue = gp.GetValue();

            <span class="highlight-comment">// test whether it is a Double or Integer</span>
            <span class="highlight-keyword">if</span> (gp.GetType() == <span class="highlight-keyword">typeof</span>(DoubleParameterValue))
            {
                DoubleParameterValue dvalue = gpvalue <span class="highlight-keyword">as</span> DoubleParameterValue;
                dvalue.Value *= <span class="highlight-number">2.0</span>;
                gp.SetValue(dvalue);
                nChangedValues += <span class="highlight-number">1</span>;
            }
            <span class="highlight-keyword">else</span> <span class="highlight-keyword">if</span> (gp.GetType() == <span class="highlight-keyword">typeof</span>(IntegerParameterValue))
            {
                <span class="highlight-comment">// Integer values may represent Boolean parameters too</span>
                IntegerParameterValue ivalue = gpvalue <span class="highlight-keyword">as</span> IntegerParameterValue;
                <span class="highlight-keyword">if</span> (gp.GetDefinition().GetDataType() == SpecTypeId.Boolean.YesNo)
                {
                    ivalue.Value = (ivalue.Value == <span class="highlight-number">0</span>) ? <span class="highlight-number">1</span> : <span class="highlight-number">0</span>;
                }
                <span class="highlight-keyword">else</span>   <span class="highlight-comment">// common integers</span>
                {
                    ivalue.Value += <span class="highlight-number">1</span>;
                }
                gp.SetValue(ivalue);
                nChangedValues += <span class="highlight-number">1</span>;
            }
        }

        trans.Commit();
    }

    <span class="highlight-keyword">return</span> nChangedValues;
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-comment">' &lt;summary&gt;</span>
<span class="highlight-comment">' Modifies values of certain types of global parameters so that</span>
<span class="highlight-comment">' - integer values will be incremented by one</span>
<span class="highlight-comment">' - double values will be multiplied by two</span>
<span class="highlight-comment">' - boolean values will be negated</span>
<span class="highlight-comment">' &lt;/summary&gt;</span>
<span class="highlight-comment">' &lt;param name="document"&gt;Revit project document in which we create global parameters.&lt;/param&gt;</span>
<span class="highlight-comment">' &lt;param name="gpset"&gt;A set of ElementIds of global parameter elements&lt;/param&gt;</span>
<span class="highlight-comment">' &lt;returns&gt;Number of actually modified values&lt;/returns&gt;</span>
<span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> ModifyGlobalParametersValues(document <span class="highlight-keyword">As</span> Document, gpset <span class="highlight-keyword">As</span> ISet(<span class="highlight-keyword">Of</span> ElementId)) <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span>
    <span class="highlight-keyword">Dim</span> nChangedValues <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span>
    <span class="highlight-comment">' number of values changed</span>
    <span class="highlight-comment">' we need a transaction to modify the model</span>
    <span class="highlight-keyword">Using</span> trans <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Transaction(document, <span class="highlight-literal">"Change global parameters values"</span>)
        trans.Start()

        <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> gpid <span class="highlight-keyword">As</span> ElementId <span class="highlight-keyword">In</span> gpset
            <span class="highlight-comment">' filter out element Ids that are not of a global parameters</span>
            <span class="highlight-comment">' (in production code, this would be an assert-able situation)</span>
            <span class="highlight-keyword">If</span> <span class="highlight-keyword">Not</span> GlobalParametersManager.IsValidGlobalParameter(document, gpid) <span class="highlight-keyword">Then</span>
                <span class="highlight-keyword">Continue</span> <span class="highlight-keyword">For</span>
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

            <span class="highlight-comment">' get the current value of the global parameter</span>
            <span class="highlight-keyword">Dim</span> gp <span class="highlight-keyword">As</span> GlobalParameter = <span class="highlight-keyword">TryCast</span>(document.GetElement(gpid), GlobalParameter)
            <span class="highlight-keyword">Dim</span> gpvalue <span class="highlight-keyword">As</span> ParameterValue = gp.GetValue()

            <span class="highlight-comment">' test whether it is a Double or Integer</span>
            <span class="highlight-keyword">If</span> gp.[<span class="highlight-keyword">GetType</span>]() = <span class="highlight-keyword">GetType</span>(DoubleParameterValue) <span class="highlight-keyword">Then</span>
                <span class="highlight-keyword">Dim</span> dvalue <span class="highlight-keyword">As</span> DoubleParameterValue = <span class="highlight-keyword">TryCast</span>(gpvalue, DoubleParameterValue)
                dvalue.Value *= <span class="highlight-number">2.0</span>
                gp.SetValue(dvalue)
                nChangedValues += <span class="highlight-number">1</span>
            <span class="highlight-keyword">ElseIf</span> gp.[<span class="highlight-keyword">GetType</span>]() = <span class="highlight-keyword">GetType</span>(IntegerParameterValue) <span class="highlight-keyword">Then</span>
                <span class="highlight-comment">' Integer values may represent Boolean parameters too</span>
                <span class="highlight-keyword">Dim</span> ivalue <span class="highlight-keyword">As</span> IntegerParameterValue = <span class="highlight-keyword">TryCast</span>(gpvalue, IntegerParameterValue)
          <span class="highlight-keyword">If</span> gp.GetDefinition().GetDataType() = SpecTypeId.<span class="highlight-keyword">Boolean</span>.YesNo <span class="highlight-keyword">Then</span>
             ivalue.Value = <span class="highlight-keyword">If</span>((ivalue.Value = <span class="highlight-number">0</span>), <span class="highlight-number">1</span>, <span class="highlight-number">0</span>)
          <span class="highlight-keyword">Else</span>
             <span class="highlight-comment">' common integers</span>
             ivalue.Value += <span class="highlight-number">1</span>
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
                gp.SetValue(ivalue)
                nChangedValues += <span class="highlight-number">1</span>
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">Next</span>

        trans.Commit()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>

    <span class="highlight-keyword">Return</span> nChangedValues
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(exceptionsToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exceptionsToggle, event)" tabindex="0"><img id="exceptionsToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Exceptions</span></h1><div id="exceptionsSection" class="section" name="collapseableSection" style=""><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th class="exceptionNameColumn">Exception</th><th class="exceptionConditionColumn">Condition</th></tr><tr><td><a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">Autodesk.Revit.Exceptions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ArgumentException</a></td><td>
   The given value argument is not a valid instance of ParameterValue!
   -or-
   The given parameter value arguments is not of the storage type the global parameter expects.
</td></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">Autodesk.Revit.Exceptions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ArgumentNullException</a></td><td>
   A non-optional argument was null
</td></tr><tr><td><a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">Autodesk.Revit.Exceptions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>InvalidOperationException</a></td><td>
   This is a formula-driven parameter. As such it does not allow the current operation.
   -or-
   This is a dimension-driven parameter. As such it does not allow the current operation.
</td></tr></table></div></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="b0e53a4a-84ad-abb4-358d-9797870f101b.htm">GlobalParameter Class</a></div><div class="seeAlsoStyle"><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div><div id="footer"><div class="footerLine"><img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" /></div><A NAME="feedback"></A><span id="fb" class="feedbackcss"></span><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:revitapifeedback%40autodesk.com?Subject=Revit 2022 API">Autodesk</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></div></body></html>
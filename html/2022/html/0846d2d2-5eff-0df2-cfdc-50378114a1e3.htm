<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>DocumentPrinted Event</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="DocumentPrinted event" /><meta name="System.Keywords" content="Application.DocumentPrinted event" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.ApplicationServices.Application.DocumentPrinted" /><meta name="Microsoft.Help.Id" content="E:Autodesk.Revit.ApplicationServices.Application.DocumentPrinted" /><meta name="Description" content="Subscribe to the DocumentPrinted event to be notified immediately after Revit has finished printing a view or ViewSet of the document." /><meta name="Microsoft.Help.ContentType" content="Reference" /><link rel="stylesheet" type="text/css" href="../styles/Presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/Dropdown.js"> </script><script type="text/javascript" src="../scripts/script_manifold.js"> </script><script type="text/javascript" src="../scripts/script_feedBack.js"> </script><script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script><script type="text/javascript" src="../scripts/CommonUtilities.js"> </script><meta name="container" content="Autodesk.Revit.ApplicationServices" /><meta name="file" content="0846d2d2-5eff-0df2-cfdc-50378114a1e3" /><meta name="guid" content="0846d2d2-5eff-0df2-cfdc-50378114a1e3" /><xml><MSHelp:Attr Name="AssetID" Value="E:Autodesk.Revit.ApplicationServices.Application.DocumentPrinted" /><MSHelp:TOCTitle Title="DocumentPrinted Event" /><MSHelp:RLTitle Title="Application.DocumentPrinted Event (Autodesk.Revit.ApplicationServices)" /><MSHelp:Keyword Index="A" Term="E:Autodesk.Revit.ApplicationServices.Application.DocumentPrinted" /><MSHelp:Keyword Index="A" Term="frlrfAutodeskRevitApplicationServicesApplicationClassDocumentPrintedTopic" /><MSHelp:Keyword Index="K" Term="DocumentPrinted event" /><MSHelp:Keyword Index="K" Term="Application.DocumentPrinted event" /><MSHelp:Keyword Index="F" Term="Autodesk.Revit.ApplicationServices.Application.DocumentPrinted" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="RevitAPI.dll" /><MSHelp:Attr Name="APIName" Value="Autodesk.Revit.ApplicationServices.Application.DocumentPrinted" /><MSHelp:Attr Name="APIName" Value="Autodesk.Revit.ApplicationServices.Application.add_DocumentPrinted" /><MSHelp:Attr Name="APIName" Value="Autodesk.Revit.ApplicationServices.Application.remove_DocumentPrinted" /><MSHelp:Attr Name="DevLang" Value="CSharp" /><MSHelp:Attr Name="DevLang" Value="VB" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="Abstract" Value="Subscribe to the DocumentPrinted event to be notified immediately after Revit has finished printing a view or ViewSet of the document." /><MSHelp:Attr Name="AssemblyVersion" Value="22.0.0.0" /></xml><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script></head><body><input type="hidden" id="userDataCache" class="userDataStyle" /><input type="hidden" id="hiddenScrollOffset" /><img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" /><img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" /><img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" /><img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" /><img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" /><img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" /><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" /><div id="header"><table id="topTable" cellspacing="0" cellpadding="0"><tr><td><span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0"><img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span><span>    </span><span id="devlangsDropdown" class="filter" tabindex="0"><img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: All </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Multiple </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: C# </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual Basic </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual C++ </nobr></label></span></td></tr></table><div id="devlangsMenu"><input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="CSharpCheckbox">C#</label><br /><input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label><br /><input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label><br /></div><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2022 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">Application<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>DocumentPrinted Event</span></td></tr><tr id="headerTableRow3"><td align="left"><a href="94db8ea8-d2c3-5e71-8030-466bcb8e4426.htm">Application Class</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2022 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" /><span style="color: DarkGray"></span><div class="summary">
   Subscribe to the DocumentPrinted event to be notified immediately after Revit has finished printing a view or ViewSet of the document.
</div><p /><b>Namespace:</b> <a href="91957e18-2935-006c-83ab-3b5b9dbb5928.htm">Autodesk.Revit.ApplicationServices</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 22.0.0.0 (22.1.0.0)<br /><b>Since:</b> 
   2010
<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> event <span class="nolink">EventHandler</span>&lt;<a href="12e3944c-0c43-8c08-d3d0-15828d9a6337.htm">DocumentPrintedEventArgs</a>&gt; <span class="identifier">DocumentPrinted</span></pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> Event <span class="identifier">DocumentPrinted</span> <span class="keyword">As</span> <span class="nolink">EventHandler</span>(<span class="keyword">Of</span> <a href="12e3944c-0c43-8c08-d3d0-15828d9a6337.htm">DocumentPrintedEventArgs</a>)</pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span>:
 <span class="keyword">event</span> <span class="nolink">EventHandler</span>&lt;<a href="12e3944c-0c43-8c08-d3d0-15828d9a6337.htm">DocumentPrintedEventArgs</a>^&gt;^ <span class="identifier">DocumentPrinted</span> {
	<span class="keyword">void</span> <span class="keyword">add</span> (<span class="nolink">EventHandler</span>&lt;<a href="12e3944c-0c43-8c08-d3d0-15828d9a6337.htm">DocumentPrintedEventArgs</a>^&gt;^ <span class="parameter">value</span>);
	<span class="keyword">void</span> <span class="keyword">remove</span> (<span class="nolink">EventHandler</span>&lt;<a href="12e3944c-0c43-8c08-d3d0-15828d9a6337.htm">DocumentPrintedEventArgs</a>^&gt;^ <span class="parameter">value</span>);
}</pre></td></tr></table></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle, event)" tabindex="0"><img id="remarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style=""><p>This event is raised immediately after Revit has finished printing a view or ViewSet of the document.
   It is raised even when document printing failed or was cancelled (during DocumentPriting event).</p><p>
   Handlers of this event are permitted to make modifications to any document (including the active document),
   except for documents that are currently in read-only mode.
   </p><p>Check the 'Status' field in event's argument to see whether the action itself was successful or not.</p><p>This event is not cancellable, for the process of printing has already been finished.</p><p>If the action was not successful, the document may not be modified and new transactions may not be started.</p><p>The following API functions are not available for the current document during this event:
   <ul><li><a href="da2f27b9-7255-4950-82a2-86e1432ff9f0.htm">Close<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a> and similar overloads.</li></ul></p><p>Exception <a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">InvalidOperationException</a> will be thrown if any of the above methods is called during this event.</p></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Application_DocumentPrinted : IExternalApplication
{
    <span class="highlight-comment">/// &lt;ExampleMethod&gt;</span>
    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Implement the OnStartup method to register events when Revit starts.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">public</span> Result OnStartup(UIControlledApplication application)
    {
        <span class="highlight-comment">// Register related events</span>
       application.ControlledApplication.DocumentPrinted += <span class="highlight-keyword">new</span> EventHandler&lt;Autodesk.Revit.DB.Events.DocumentPrintedEventArgs&gt;(AppDocumentPrinted);
        <span class="highlight-keyword">return</span> Result.Succeeded;
    }

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Implement this method to unregister the subscribed events when Revit exits.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">public</span> Result OnShutdown(UIControlledApplication application)
    {
        <span class="highlight-comment">// unregister events</span>
       application.ControlledApplication.DocumentPrinted -= <span class="highlight-keyword">new</span> EventHandler&lt;Autodesk.Revit.DB.Events.DocumentPrintedEventArgs&gt;(AppDocumentPrinted);
        <span class="highlight-keyword">return</span> Result.Succeeded;
    }
    <span class="highlight-comment">/// &lt;TrivialCode&gt;</span>
    <span class="highlight-comment">/// Code ID: 501</span>
    <span class="highlight-comment">/// For DocumentPrinted class description</span>
    <span class="highlight-comment">/// &lt;/TrivialCode&gt;</span>


    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Handler method for DocumentPrinted event, it will display some event arguments.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> AppDocumentPrinted(<span class="highlight-keyword">object</span> sender, Autodesk.Revit.DB.Events.DocumentPrintedEventArgs args)
    {
        StringBuilder info = <span class="highlight-keyword">new</span> StringBuilder();
        Application app = sender <span class="highlight-keyword">as</span> Application;
        info.AppendLine(<span class="highlight-literal">"DocumentPrintedEventArgs Parameters ------&gt;"</span>);
        info.AppendLine(<span class="highlight-literal">"    Event Status      : "</span> + args.Status.ToString());
        info.AppendLine(<span class="highlight-literal">"    Event Cancellable : "</span> + args.Cancellable);
        <span class="highlight-comment">// </span>
        <span class="highlight-comment">// PrintedViews</span>
        <span class="highlight-keyword">if</span> (<span class="highlight-number">0</span> == args.GetFailedViewElementIds().Count || <span class="highlight-number">0</span> == args.GetPrintedViewElementIds().Count)
        {
            info.AppendLine(<span class="highlight-literal">"    Views been printed: &lt;null&gt;"</span>);
        }
        <span class="highlight-keyword">else</span>
        {
            info.AppendLine(<span class="highlight-literal">"    Views been printed: "</span>);
            DumpViewsInfo(app, args.GetPrintedViewElementIds(), <span class="highlight-literal">"      "</span>, <span class="highlight-keyword">ref</span> info);
        }
        <span class="highlight-comment">// </span>
        <span class="highlight-comment">// FailedViews</span>
        <span class="highlight-keyword">if</span> (<span class="highlight-number">0</span> == args.GetFailedViewElementIds().Count)
        {
            info.AppendLine(<span class="highlight-literal">"    Views failed: &lt;null&gt;"</span>);
        }
        <span class="highlight-keyword">else</span>
        {
            info.AppendLine(<span class="highlight-literal">"    Views Failed : "</span>);
            DumpViewsInfo(app, args.GetFailedViewElementIds(), <span class="highlight-literal">"      "</span>, <span class="highlight-keyword">ref</span> info);
        }

        TaskDialog.Show(<span class="highlight-literal">"Revit"</span>,info.ToString());
    }

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Dump information of views: ViewType, Id and ViewName.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-comment">/// &lt;param name="views"&gt;Views to be displayed in message box.&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;param name="prefix"&gt;Prefix mark for each line added to message box.&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;param name="info"&gt;String where data is stored for display&lt;/param&gt;</span>
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> DumpViewsInfo(Application app, System.Collections.Generic.IList&lt;ElementId&gt; viewIds, String prefix, <span class="highlight-keyword">ref</span> StringBuilder info)
    {
        <span class="highlight-keyword">int</span> index = <span class="highlight-number">0</span>;
        UIApplication uiApp = <span class="highlight-keyword">new</span> UIApplication(app);
        <span class="highlight-keyword">foreach</span> (ElementId curViewId <span class="highlight-keyword">in</span> viewIds)
        {
            Autodesk.Revit.DB.View curView = uiApp.ActiveUIDocument.Document.GetElement(curViewId) <span class="highlight-keyword">as</span> Autodesk.Revit.DB.View;
                DumpViewInfo(curView, String.Format(<span class="highlight-literal">"{0}#{1}"</span>, prefix, index++), <span class="highlight-keyword">ref</span> info);
        }
    }

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Dump information of single view: ViewType, Id and ViewName.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-comment">/// &lt;param name="view"&gt;View element to be displayed in message box.&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;param name="prefix"&gt;Prefix mark for each line added to message box.&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;param name="info"&gt;String where data is stored for display&lt;/param&gt;</span>
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> DumpViewInfo(Autodesk.Revit.DB.View view, String prefix, <span class="highlight-keyword">ref</span> StringBuilder info)
    {
        info.AppendLine(String.Format(<span class="highlight-literal">"{0} Id: {1}, ViewName: {2}, ViewType: {3}"</span>,
            prefix, view.Id.IntegerValue, view.Name, view.ViewType));
    }
    <span class="highlight-comment">/// &lt;/ExampleMethod&gt;</span>
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> Application_DocumentPrinted
    <span class="highlight-keyword">Implements</span> IExternalApplication
    <span class="highlight-comment">' &lt;ExampleMethod&gt;</span>
    <span class="highlight-comment">' &lt;summary&gt;</span>
    <span class="highlight-comment">' Implement the OnStartup method to register events when Revit starts.</span>
    <span class="highlight-comment">' &lt;/summary&gt;</span>
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> OnStartup(application <span class="highlight-keyword">As</span> UIControlledApplication) <span class="highlight-keyword">As</span> Autodesk.Revit.UI.Result <span class="highlight-keyword">Implements</span> IExternalApplication.OnStartup
        <span class="highlight-comment">' Register related events</span>
        <span class="highlight-keyword">AddHandler</span> application.ControlledApplication.DocumentPrinted, <span class="highlight-keyword">AddressOf</span> AppDocumentPrinted
        <span class="highlight-keyword">Return</span> Result.Succeeded
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>

    <span class="highlight-comment">' &lt;summary&gt;</span>
    <span class="highlight-comment">' Implement this method to unregister the subscribed events when Revit exits.</span>
    <span class="highlight-comment">' &lt;/summary&gt;</span>
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> OnShutdown(application <span class="highlight-keyword">As</span> UIControlledApplication) <span class="highlight-keyword">As</span> Autodesk.Revit.UI.Result <span class="highlight-keyword">Implements</span> IExternalApplication.OnShutdown
        <span class="highlight-comment">' unregister events</span>
        <span class="highlight-keyword">RemoveHandler</span> application.ControlledApplication.DocumentPrinted, <span class="highlight-keyword">AddressOf</span> AppDocumentPrinted
        <span class="highlight-keyword">Return</span> Result.Succeeded
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
    <span class="highlight-comment">' &lt;TrivialCode&gt;</span>
    <span class="highlight-comment">' Code ID: 501</span>
    <span class="highlight-comment">' For DocumentPrinted class description</span>
    <span class="highlight-comment">' &lt;/TrivialCode&gt;</span>



    <span class="highlight-comment">' &lt;summary&gt;</span>
    <span class="highlight-comment">' Handler method for DocumentPrinted event, it will display some event arguments.</span>
    <span class="highlight-comment">' &lt;/summary&gt;</span>
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> AppDocumentPrinted(sender <span class="highlight-keyword">As</span> <span class="highlight-keyword">Object</span>, args <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Events.DocumentPrintedEventArgs)
        <span class="highlight-keyword">Dim</span> info <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> StringBuilder()
        <span class="highlight-keyword">Dim</span> app <span class="highlight-keyword">As</span> Application = <span class="highlight-keyword">TryCast</span>(sender, Application)
        info.AppendLine(<span class="highlight-literal">"DocumentPrintedEventArgs Parameters ------&gt;"</span>)
        info.AppendLine(<span class="highlight-literal">"    Event Status      : "</span> &amp; args.Status.ToString())
        info.AppendLine(<span class="highlight-literal">"    Event Cancellable : "</span> &amp; Convert.ToString(args.Cancellable))
        <span class="highlight-comment">'</span>
        <span class="highlight-comment">' PrintedViews</span>
        <span class="highlight-keyword">If</span> <span class="highlight-number">0</span> = args.GetFailedViewElementIds().Count <span class="highlight-keyword">OrElse</span> <span class="highlight-number">0</span> = args.GetPrintedViewElementIds().Count <span class="highlight-keyword">Then</span>
            info.AppendLine(<span class="highlight-literal">"    Views been printed: &lt;null&gt;"</span>)
        <span class="highlight-keyword">Else</span>
            info.AppendLine(<span class="highlight-literal">"    Views been printed: "</span>)
            DumpViewsInfo(app, args.GetPrintedViewElementIds(), <span class="highlight-literal">"      "</span>, info)
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-comment">'</span>
        <span class="highlight-comment">' FailedViews</span>
        <span class="highlight-keyword">If</span> <span class="highlight-number">0</span> = args.GetFailedViewElementIds().Count <span class="highlight-keyword">Then</span>
            info.AppendLine(<span class="highlight-literal">"    Views failed: &lt;null&gt;"</span>)
        <span class="highlight-keyword">Else</span>
            info.AppendLine(<span class="highlight-literal">"    Views Failed : "</span>)
            DumpViewsInfo(app, args.GetFailedViewElementIds(), <span class="highlight-literal">"      "</span>, info)
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

        TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, info.ToString())
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>

    <span class="highlight-comment">' &lt;summary&gt;</span>
    <span class="highlight-comment">' Dump information of views: ViewType, Id and ViewName.</span>
    <span class="highlight-comment">' &lt;/summary&gt;</span>
    <span class="highlight-comment">' &lt;param name="views"&gt;Views to be displayed in message box.&lt;/param&gt;</span>
    <span class="highlight-comment">' &lt;param name="prefix"&gt;Prefix mark for each line added to message box.&lt;/param&gt;</span>
    <span class="highlight-comment">' &lt;param name="info"&gt;String where data is stored for display&lt;/param&gt;</span>
    <span class="highlight-keyword">Private</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Sub</span> DumpViewsInfo(app <span class="highlight-keyword">As</span> Application, viewIds <span class="highlight-keyword">As</span> System.Collections.Generic.IList(<span class="highlight-keyword">Of</span> ElementId), prefix <span class="highlight-keyword">As</span> [<span class="highlight-keyword">String</span>], <span class="highlight-keyword">ByRef</span> info <span class="highlight-keyword">As</span> StringBuilder)
        <span class="highlight-keyword">Dim</span> index <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span>
        <span class="highlight-keyword">Dim</span> uiApp <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> UIApplication(app)
        <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> curViewId <span class="highlight-keyword">As</span> ElementId <span class="highlight-keyword">In</span> viewIds
            <span class="highlight-keyword">Dim</span> curView <span class="highlight-keyword">As</span> Autodesk.Revit.DB.View = <span class="highlight-keyword">TryCast</span>(uiApp.ActiveUIDocument.Document.GetElement(curViewId), Autodesk.Revit.DB.View)
            DumpViewInfo(curView, [<span class="highlight-keyword">String</span>].Format(<span class="highlight-literal">"{0}#{1}"</span>, prefix, System.Math.Max(System.Threading.Interlocked.Increment(index), index - <span class="highlight-number">1</span>)), info)
        <span class="highlight-keyword">Next</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>

    <span class="highlight-comment">' &lt;summary&gt;</span>
    <span class="highlight-comment">' Dump information of single view: ViewType, Id and ViewName.</span>
    <span class="highlight-comment">' &lt;/summary&gt;</span>
    <span class="highlight-comment">' &lt;param name="view"&gt;View element to be displayed in message box.&lt;/param&gt;</span>
    <span class="highlight-comment">' &lt;param name="prefix"&gt;Prefix mark for each line added to message box.&lt;/param&gt;</span>
    <span class="highlight-comment">' &lt;param name="info"&gt;String where data is stored for display&lt;/param&gt;</span>
    <span class="highlight-keyword">Private</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Sub</span> DumpViewInfo(view <span class="highlight-keyword">As</span> Autodesk.Revit.DB.View, prefix <span class="highlight-keyword">As</span> [<span class="highlight-keyword">String</span>], <span class="highlight-keyword">ByRef</span> info <span class="highlight-keyword">As</span> StringBuilder)
        info.AppendLine([<span class="highlight-keyword">String</span>].Format(<span class="highlight-literal">"{0} Id: {1}, ViewName: {2}, ViewType: {3}"</span>, prefix, view.Id.IntegerValue, view.Name, view.ViewType))
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>
    <span class="highlight-comment">' &lt;/ExampleMethod&gt;</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="94db8ea8-d2c3-5e71-8030-466bcb8e4426.htm">Application Class</a></div><div class="seeAlsoStyle"><a href="91957e18-2935-006c-83ab-3b5b9dbb5928.htm">Autodesk.Revit.ApplicationServices Namespace</a></div></div></div><div id="footer"><div class="footerLine"><img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" /></div><A NAME="feedback"></A><span id="fb" class="feedbackcss"></span><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:revitapifeedback%40autodesk.com?Subject=Revit 2022 API">Autodesk</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></div></body></html>
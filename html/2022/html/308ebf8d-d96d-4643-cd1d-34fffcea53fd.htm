<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>Transaction Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Transaction class" /><meta name="System.Keywords" content="Autodesk.Revit.DB.Transaction class" /><meta name="System.Keywords" content="Transaction class, about Transaction class" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.Transaction" /><meta name="Microsoft.Help.Id" content="T:Autodesk.Revit.DB.Transaction" /><meta name="Description" content="Transactions are context-like objects that guard any changes made to a Revit model" /><meta name="Microsoft.Help.ContentType" content="Reference" /><link rel="stylesheet" type="text/css" href="../styles/Presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/Dropdown.js"> </script><script type="text/javascript" src="../scripts/script_manifold.js"> </script><script type="text/javascript" src="../scripts/script_feedBack.js"> </script><script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script><script type="text/javascript" src="../scripts/CommonUtilities.js"> </script><meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="308ebf8d-d96d-4643-cd1d-34fffcea53fd" /><meta name="guid" content="308ebf8d-d96d-4643-cd1d-34fffcea53fd" /><xml><MSHelp:Attr Name="AssetID" Value="T:Autodesk.Revit.DB.Transaction" /><MSHelp:TOCTitle Title="Transaction Class" /><MSHelp:RLTitle Title="Transaction Class (Autodesk.Revit.DB)" /><MSHelp:Keyword Index="A" Term="T:Autodesk.Revit.DB.Transaction" /><MSHelp:Keyword Index="A" Term="frlrfAutodeskRevitDBTransactionClassTopic" /><MSHelp:Keyword Index="K" Term="Transaction class" /><MSHelp:Keyword Index="K" Term="Autodesk.Revit.DB.Transaction class" /><MSHelp:Keyword Index="K" Term="Transaction class, about Transaction class" /><MSHelp:Keyword Index="F" Term="Autodesk.Revit.DB.Transaction" /><MSHelp:Attr Name="HelpPriority" Value="2" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="RevitAPI.dll" /><MSHelp:Attr Name="APIName" Value="Autodesk.Revit.DB.Transaction" /><MSHelp:Attr Name="DevLang" Value="CSharp" /><MSHelp:Attr Name="DevLang" Value="VB" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="Abstract" Value="Transactions are context-like objects that guard any changes made to a Revit model" /><MSHelp:Attr Name="AssemblyVersion" Value="22.0.0.0" /></xml><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script></head><body><input type="hidden" id="userDataCache" class="userDataStyle" /><input type="hidden" id="hiddenScrollOffset" /><img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" /><img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" /><img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" /><img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" /><img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" /><img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" /><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" /><div id="header"><table id="topTable" cellspacing="0" cellpadding="0"><tr><td><span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0"><img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span><span>    </span><span id="devlangsDropdown" class="filter" tabindex="0"><img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: All </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Multiple </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: C# </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual Basic </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual C++ </nobr></label></span></td></tr></table><div id="devlangsMenu"><input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="CSharpCheckbox">C#</label><br /><input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label><br /><input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label><br /></div><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2022 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">Transaction Class</span></td></tr><tr id="headerTableRow3"><td align="left"><a href="8662608c-ff88-05be-778f-e9b80f54cb34.htm">Members</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2022 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" /><span style="color: DarkGray"></span><div class="summary">
   Transactions are context-like objects that guard any changes made to a Revit model
</div><p /><b>Namespace:</b> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 22.0.0.0 (22.1.0.0)<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">Transaction</span> : <span class="nolink">IDisposable</span></pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">Transaction</span> _
	<span class="keyword">Implements</span> <span class="nolink">IDisposable</span></pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">Transaction</span> : <span class="nolink">IDisposable</span></pre></td></tr></table></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle, event)" tabindex="0"><img id="remarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style=""><p>Any change to a document can only be made while there is an active transaction
   open for that document. Changes do not become part of the document until the
   active transaction is <a href="32714010-7138-f64f-8fde-a310354448e3.htm">committed</a>. Consequently, all
   changes made in a transaction can be <a href="bd1e69e9-961e-1c07-f70a-a29b90c6eb97.htm">rolled back</a>
   either explicitly or implicitly by the transaction's destructor.</p><p>A document can have only one transaction open at any given time.</p><p>Transactions cannot be started when the document is in read-only mode,
   either permanently or temporarily. See the Document class methods IsReadOnly
   and IsModifiable for more details.</p><p>Transactions in linked documents are not permitted,
   for linked documents are not allowed to be modified.</p><p /><p>If a transaction was started and not finished yet by the time the Transaction object
   is about to be disposed, the default destructor will roll it back automatically, thus all
   changes made to the document while this transaction was open will be discarded.
   It is not recommended to rely on this default behavior though. Instead,
   it is advised to always call either <a href="32714010-7138-f64f-8fde-a310354448e3.htm">Commit</a>
   or <a href="bd1e69e9-961e-1c07-f70a-a29b90c6eb97.htm">RollBack</a> explicitly before the transaction
   object gets disposed.
   Please note that unless invoked explicitly the actual destruction of an object
   in managed code might not happen until the object is collected by the garbage collector.</p></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> CreatingSketch(UIApplication uiApplication)
{
    Autodesk.Revit.DB.Document document = uiApplication.ActiveUIDocument.Document;
    Autodesk.Revit.ApplicationServices.Application application = uiApplication.Application;

    <span class="highlight-comment">// Create a few geometry lines. These lines are transaction (not in the model),</span>
    <span class="highlight-comment">// therefore they do not need to be created inside a document transaction.</span>
    XYZ Point1 = XYZ.Zero;
    XYZ Point2 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>);
    XYZ Point3 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>);
    XYZ Point4 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>);

    Line geomLine1 = Line.CreateBound(Point1, Point2);
    Line geomLine2 = Line.CreateBound(Point4, Point3);
    Line geomLine3 = Line.CreateBound(Point1, Point4);

    <span class="highlight-comment">// This geometry plane is also transaction and does not need a transaction</span>
    XYZ origin = XYZ.Zero;
    XYZ normal = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>);
    Plane geomPlane = Plane.CreateByNormalAndOrigin(normal, origin);

    <span class="highlight-comment">// In order to a sketch plane with model curves in it, we need</span>
    <span class="highlight-comment">// to start a transaction because such operations modify the model.</span>

    <span class="highlight-comment">// All and any transaction should be enclosed in a 'using'</span>
    <span class="highlight-comment">// block or guarded within a try-catch-finally blocks</span>
    <span class="highlight-comment">// to guarantee that a transaction does not out-live its scope.</span>
    <span class="highlight-keyword">using</span> (Transaction transaction = <span class="highlight-keyword">new</span> Transaction(document))
    {
       <span class="highlight-keyword">if</span> (transaction.Start(<span class="highlight-literal">"Create model curves"</span>) == TransactionStatus.Started)
       {
           <span class="highlight-comment">// Create a sketch plane in current document</span>
           SketchPlane sketch = SketchPlane.Create(document,geomPlane);

           <span class="highlight-comment">// Create a ModelLine elements using the geometry lines and sketch plane</span>
           ModelLine line1 = document.Create.NewModelCurve(geomLine1, sketch) <span class="highlight-keyword">as</span> ModelLine;
           ModelLine line2 = document.Create.NewModelCurve(geomLine2, sketch) <span class="highlight-keyword">as</span> ModelLine;
           ModelLine line3 = document.Create.NewModelCurve(geomLine3, sketch) <span class="highlight-keyword">as</span> ModelLine;

           <span class="highlight-comment">// Ask the end user whether the changes are to be committed or not</span>
           TaskDialog taskDialog = <span class="highlight-keyword">new</span> TaskDialog(<span class="highlight-literal">"Revit"</span>);
           taskDialog.MainContent = <span class="highlight-literal">"Click either [OK] to Commit, or [Cancel] to Roll back the transaction."</span>;
           TaskDialogCommonButtons buttons = TaskDialogCommonButtons.Ok | TaskDialogCommonButtons.Cancel;
           taskDialog.CommonButtons = buttons;

           <span class="highlight-keyword">if</span> (TaskDialogResult.Ok == taskDialog.Show())
           {
               <span class="highlight-comment">// For many various reasons, a transaction may not be committed</span>
               <span class="highlight-comment">// if the changes made during the transaction do not result a valid model.</span>
               <span class="highlight-comment">// If committing a transaction fails or is canceled by the end user,</span>
               <span class="highlight-comment">// the resulting status would be RolledBack instead of Committed.</span>
               <span class="highlight-keyword">if</span> (TransactionStatus.Committed != transaction.Commit())
               {
                  TaskDialog.Show(<span class="highlight-literal">"Failure"</span>, <span class="highlight-literal">"Transaction could not be committed"</span>);
               }
           }
           <span class="highlight-keyword">else</span>
           {
               transaction.RollBack();
           }
       }
    }
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> CreatingSketch(uiApplication <span class="highlight-keyword">As</span> UIApplication)
    <span class="highlight-keyword">Dim</span> document <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Document = uiApplication.ActiveUIDocument.Document
    <span class="highlight-keyword">Dim</span> application <span class="highlight-keyword">As</span> Autodesk.Revit.ApplicationServices.Application = uiApplication.Application

    <span class="highlight-comment">' Create a few geometry lines. These lines are transaction (not in the model),</span>
    <span class="highlight-comment">' therefore they do not need to be created inside a document transaction.</span>
    <span class="highlight-keyword">Dim</span> Point1 <span class="highlight-keyword">As</span> XYZ = XYZ.Zero
    <span class="highlight-keyword">Dim</span> Point2 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>)
    <span class="highlight-keyword">Dim</span> Point3 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>)
    <span class="highlight-keyword">Dim</span> Point4 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>)

    <span class="highlight-keyword">Dim</span> geomLine1 <span class="highlight-keyword">As</span> Line = Line.CreateBound(Point1, Point2)
    <span class="highlight-keyword">Dim</span> geomLine2 <span class="highlight-keyword">As</span> Line = Line.CreateBound(Point4, Point3)
    <span class="highlight-keyword">Dim</span> geomLine3 <span class="highlight-keyword">As</span> Line = Line.CreateBound(Point1, Point4)

    <span class="highlight-comment">' This geometry plane is also transaction and does not need a transaction</span>
    <span class="highlight-keyword">Dim</span> origin <span class="highlight-keyword">As</span> XYZ = XYZ.Zero
    <span class="highlight-keyword">Dim</span> normal <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>)
 <span class="highlight-keyword">Dim</span> geomPlane <span class="highlight-keyword">As</span> Plane = Plane.CreateByNormalAndOrigin(normal, origin)

    <span class="highlight-comment">' In order to a sketch plane with model curves in it, we need</span>
    <span class="highlight-comment">' to start a transaction because such operations modify the model.</span>


    <span class="highlight-comment">' All and any transaction should be enclosed in a 'using'</span>
    <span class="highlight-comment">' block or guarded within a try-catch-finally blocks</span>
    <span class="highlight-comment">' to guarantee that a transaction does not out-live its scope.</span>
    <span class="highlight-keyword">Using</span> transaction <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Transaction(document)
        <span class="highlight-keyword">If</span> transaction.Start(<span class="highlight-literal">"Create model curves"</span>) = TransactionStatus.Started <span class="highlight-keyword">Then</span>
            <span class="highlight-comment">' Create a sketch plane in current document</span>
            <span class="highlight-keyword">Dim</span> sketch <span class="highlight-keyword">As</span> SketchPlane = SketchPlane.Create(document, geomPlane)

            <span class="highlight-comment">' Create a ModelLine elements using the geometry lines and sketch plane</span>
            <span class="highlight-keyword">Dim</span> line1 <span class="highlight-keyword">As</span> ModelLine = <span class="highlight-keyword">TryCast</span>(document.Create.NewModelCurve(geomLine1, sketch), ModelLine)
            <span class="highlight-keyword">Dim</span> line2 <span class="highlight-keyword">As</span> ModelLine = <span class="highlight-keyword">TryCast</span>(document.Create.NewModelCurve(geomLine2, sketch), ModelLine)
            <span class="highlight-keyword">Dim</span> line3 <span class="highlight-keyword">As</span> ModelLine = <span class="highlight-keyword">TryCast</span>(document.Create.NewModelCurve(geomLine3, sketch), ModelLine)

            <span class="highlight-comment">' Ask the end user whether the changes are to be committed or not</span>
            <span class="highlight-keyword">Dim</span> taskDialog__1 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> TaskDialog(<span class="highlight-literal">"Revit"</span>)
            taskDialog__1.MainContent = <span class="highlight-literal">"Click either [OK] to Commit, or [Cancel] to Roll back the transaction."</span>
            <span class="highlight-keyword">Dim</span> buttons <span class="highlight-keyword">As</span> TaskDialogCommonButtons = TaskDialogCommonButtons.Ok <span class="highlight-keyword">Or</span> TaskDialogCommonButtons.Cancel
            taskDialog__1.CommonButtons = buttons

            <span class="highlight-keyword">If</span> TaskDialogResult.Ok = taskDialog__1.Show() <span class="highlight-keyword">Then</span>
                <span class="highlight-comment">' For many various reasons, a transaction may not be committed</span>
                <span class="highlight-comment">' if the changes made during the transaction do not result a valid model.</span>
                <span class="highlight-comment">' If committing a transaction fails or is canceled by the end user,</span>
                <span class="highlight-comment">' the resulting status would be RolledBack instead of Committed.</span>
                <span class="highlight-keyword">If</span> TransactionStatus.Committed &lt;&gt; transaction.Commit() <span class="highlight-keyword">Then</span>
                    TaskDialog.Show(<span class="highlight-literal">"Failure"</span>, <span class="highlight-literal">"Transaction could not be committed"</span>)
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
            <span class="highlight-keyword">Else</span>
                transaction.RollBack()
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(familyToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(familyToggle, event)" tabindex="0"><img id="familyToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Inheritance Hierarchy</span></h1><div id="familySection" class="section" name="collapseableSection" style=""><span class="nolink">System<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Object</span><br />  <span class="selflink">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Transaction</span><br /></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="8662608c-ff88-05be-778f-e9b80f54cb34.htm">Transaction Members</a></div><div class="seeAlsoStyle"><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div><div id="footer"><div class="footerLine"><img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" /></div><A NAME="feedback"></A><span id="fb" class="feedbackcss"></span><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:revitapifeedback%40autodesk.com?Subject=Revit 2022 API">Autodesk</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></div></body></html>
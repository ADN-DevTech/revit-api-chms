<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>CombineWithNext Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="CombineWithNext method" /><meta name="System.Keywords" content="Revision.CombineWithNext method" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.Revision.CombineWithNext" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.DB.Revision.CombineWithNext(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.ElementId)" /><meta name="Description" content="Combines the specified Revision with the next Revision." /><meta name="Microsoft.Help.ContentType" content="Reference" /><link rel="stylesheet" type="text/css" href="../styles/Presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/Dropdown.js"> </script><script type="text/javascript" src="../scripts/script_manifold.js"> </script><script type="text/javascript" src="../scripts/script_feedBack.js"> </script><script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script><script type="text/javascript" src="../scripts/CommonUtilities.js"> </script><meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="9f2ee71b-6e13-c6a8-306a-cfe493c39f96" /><meta name="guid" content="9f2ee71b-6e13-c6a8-306a-cfe493c39f96" /><xml><MSHelp:Attr Name="AssetID" Value="M:Autodesk.Revit.DB.Revision.CombineWithNext(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.ElementId)" /><MSHelp:TOCTitle Title="CombineWithNext Method " /><MSHelp:RLTitle Title="Revision.CombineWithNext Method  (Autodesk.Revit.DB)" /><MSHelp:Keyword Index="A" Term="M:Autodesk.Revit.DB.Revision.CombineWithNext(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.ElementId)" /><MSHelp:Keyword Index="A" Term="frlrfAutodeskRevitDBRevisionClassCombineWithNextTopic" /><MSHelp:Keyword Index="K" Term="CombineWithNext method" /><MSHelp:Keyword Index="K" Term="Revision.CombineWithNext method" /><MSHelp:Keyword Index="F" Term="Autodesk.Revit.DB.Revision.CombineWithNext" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="RevitAPI.dll" /><MSHelp:Attr Name="APIName" Value="Autodesk.Revit.DB.Revision.CombineWithNext" /><MSHelp:Attr Name="DevLang" Value="CSharp" /><MSHelp:Attr Name="DevLang" Value="VB" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="Abstract" Value="Combines the specified Revision with the next Revision." /><MSHelp:Attr Name="AssemblyVersion" Value="22.0.0.0" /></xml><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script></head><body><input type="hidden" id="userDataCache" class="userDataStyle" /><input type="hidden" id="hiddenScrollOffset" /><img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" /><img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" /><img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" /><img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" /><img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" /><img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" /><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" /><div id="header"><table id="topTable" cellspacing="0" cellpadding="0"><tr><td><span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0"><img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span><span>    </span><span id="devlangsDropdown" class="filter" tabindex="0"><img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: All </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Multiple </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: C# </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual Basic </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual C++ </nobr></label></span></td></tr></table><div id="devlangsMenu"><input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="CSharpCheckbox">C#</label><br /><input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label><br /><input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label><br /></div><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2022 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">Revision<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>CombineWithNext Method </span></td></tr><tr id="headerTableRow3"><td align="left"><a href="af882c60-68ae-2e53-5c41-7aa43cfc1df4.htm">Revision Class</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2022 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" /><span style="color: DarkGray"></span><div class="summary">
   Combines the specified Revision with the next Revision.
</div><p /><b>Namespace:</b> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 22.0.0.0 (22.1.0.0)<br /><b>Since:</b> 
   2015
<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="nolink">ISet</span>&lt;<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>&gt; <span class="identifier">CombineWithNext</span>(
	<a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a> <span class="parameter">document</span>,
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a> <span class="parameter">revisionId</span>
)</pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">CombineWithNext</span> ( _
	<span class="parameter">document</span> <span class="keyword">As</span> <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a>, _
	<span class="parameter">revisionId</span> <span class="keyword">As</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a> _
) <span class="keyword">As</span> <span class="nolink">ISet</span>(<span class="keyword">Of</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>)</pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="nolink">ISet</span>&lt;<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^&gt;^ <span class="identifier">CombineWithNext</span>(
	<a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a>^ <span class="parameter">document</span>, 
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^ <span class="parameter">revisionId</span>
)</pre></td></tr></table></span></div><div id="parameters"><h4 class="subHeading">Parameters</h4><dl paramName="document"><dt><span class="parameter">document</span></dt><dd>Type: <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Document</a><br />
   The Document containing the Revisions.
</dd></dl><dl paramName="revisionId"><dt><span class="parameter">revisionId</span></dt><dd>Type: <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ElementId</a><br />
   The Revision that should have its clouds and tags associated with the next Revision.
</dd></dl></div><h4 class="subHeading">Return Value</h4>
   The ids of all RevisionClouds that were reassigned to the next Revision.
</div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle, event)" tabindex="0"><img id="remarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style="">
   All RevisionClouds and tags associated with the specified Revision will be reassigned
   to the next Revision in the model and the specified Revision will be deleted from
   the model.  The operation can only be performed if both the specified Revision and the
   next one are unissued.
</div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">private</span> <span class="highlight-keyword">bool</span> CombineRevision(Document document, Revision revision)
{
    <span class="highlight-keyword">bool</span> combined = <span class="highlight-keyword">false</span>;
    <span class="highlight-comment">// Can only combine two revisions if neither have been issued</span>
    <span class="highlight-keyword">if</span> (revision.Issued == <span class="highlight-keyword">false</span>)
    {
        ElementId revisionId = revision.Id;
        Revision nextRevsion = GetNextRevision(document, revisionId);
        <span class="highlight-keyword">if</span> (nextRevsion != <span class="highlight-keyword">null</span> &amp;&amp; nextRevsion.Issued == <span class="highlight-keyword">false</span>)
        {
            ISet&lt;ElementId&gt; revisionCloudIds = Revision.CombineWithNext(document, revisionId);
            combined = <span class="highlight-keyword">true</span>;
            <span class="highlight-keyword">int</span> movedClouds = revisionCloudIds.Count;
            <span class="highlight-keyword">if</span> (movedClouds &gt; <span class="highlight-number">0</span>)
            {
                RevisionCloud cloud = document.GetElement(revisionCloudIds.ElementAt(<span class="highlight-number">0</span>)) <span class="highlight-keyword">as</span> RevisionCloud;
                <span class="highlight-keyword">if</span> (cloud != <span class="highlight-keyword">null</span>)
                {
                    <span class="highlight-keyword">string</span> msg = <span class="highlight-keyword">string</span>.Format(<span class="highlight-literal">"Revision {0} deleted and {1} revision clouds were added to Revsion {2}"</span>,
                        revisionId.ToString(), movedClouds, cloud.RevisionId.ToString());
                    TaskDialog.Show(<span class="highlight-literal">"Revision Combined"</span>, msg);
                }
            }
        }
    }

    <span class="highlight-keyword">return</span> combined;
}

<span class="highlight-keyword">private</span> Revision GetNextRevision(Document document, ElementId currentRevisionId)
{
    Revision nextRevision = <span class="highlight-keyword">null</span>;
    IList&lt;ElementId&gt; revisionIds = Revision.GetAllRevisionIds(document);
    <span class="highlight-keyword">int</span> currentRevisionIndex = <span class="highlight-number">-1</span>;
    <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> n = <span class="highlight-number">0</span>; n &lt; revisionIds.Count; n++)
    {
        <span class="highlight-keyword">if</span> (revisionIds[n] == currentRevisionId)
        {
            currentRevisionIndex = n;
            <span class="highlight-keyword">break</span>;
        }
    }

    <span class="highlight-comment">// if the current revision id was found and is not the last index</span>
    <span class="highlight-keyword">if</span> (currentRevisionIndex &gt;= <span class="highlight-number">0</span> &amp;&amp; currentRevisionIndex &lt; revisionIds.Count - <span class="highlight-number">1</span>)
    {
        ElementId nextRevisionId = revisionIds[currentRevisionIndex + <span class="highlight-number">1</span>];
        nextRevision = document.GetElement(nextRevisionId) <span class="highlight-keyword">as</span> Revision;
    }

    <span class="highlight-keyword">return</span> nextRevision;
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Function</span> CombineRevision(document <span class="highlight-keyword">As</span> Document, revision__1 <span class="highlight-keyword">As</span> Revision) <span class="highlight-keyword">As</span> <span class="highlight-keyword">Boolean</span>
    <span class="highlight-keyword">Dim</span> combined <span class="highlight-keyword">As</span> <span class="highlight-keyword">Boolean</span> = <span class="highlight-keyword">False</span>
    <span class="highlight-comment">' Can only combine two revisions if neither have been issued</span>
    <span class="highlight-keyword">If</span> revision__1.Issued = <span class="highlight-keyword">False</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Dim</span> revisionId <span class="highlight-keyword">As</span> ElementId = revision__1.Id
        <span class="highlight-keyword">Dim</span> nextRevsion <span class="highlight-keyword">As</span> Revision = GetNextRevision(document, revisionId)
        <span class="highlight-keyword">If</span> nextRevsion <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">AndAlso</span> nextRevsion.Issued = <span class="highlight-keyword">False</span> <span class="highlight-keyword">Then</span>
            <span class="highlight-keyword">Dim</span> revisionCloudIds <span class="highlight-keyword">As</span> ISet(<span class="highlight-keyword">Of</span> ElementId) = Revision.CombineWithNext(document, revisionId)
            combined = <span class="highlight-keyword">True</span>
            <span class="highlight-keyword">Dim</span> movedClouds <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = revisionCloudIds.Count
            <span class="highlight-keyword">If</span> movedClouds &gt; <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
                <span class="highlight-keyword">Dim</span> cloud <span class="highlight-keyword">As</span> RevisionCloud = <span class="highlight-keyword">TryCast</span>(document.GetElement(revisionCloudIds.ElementAt(<span class="highlight-number">0</span>)), RevisionCloud)
                <span class="highlight-keyword">If</span> cloud <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
                    <span class="highlight-keyword">Dim</span> msg <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-keyword">String</span>.Format(<span class="highlight-literal">"Revision {0} deleted and {1} revision clouds were added to Revsion {2}"</span>, revisionId.ToString(), movedClouds, cloud.RevisionId.ToString())
                    TaskDialog.Show(<span class="highlight-literal">"Revision Combined"</span>, msg)
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Return</span> combined
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>

<span class="highlight-keyword">Private</span> <span class="highlight-keyword">Function</span> GetNextRevision(document <span class="highlight-keyword">As</span> Document, currentRevisionId <span class="highlight-keyword">As</span> ElementId) <span class="highlight-keyword">As</span> Revision
    <span class="highlight-keyword">Dim</span> nextRevision <span class="highlight-keyword">As</span> Revision = <span class="highlight-keyword">Nothing</span>
    <span class="highlight-keyword">Dim</span> revisionIds <span class="highlight-keyword">As</span> IList(<span class="highlight-keyword">Of</span> ElementId) = Revision.GetAllRevisionIds(document)
    <span class="highlight-keyword">Dim</span> currentRevisionIndex <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">-1</span>
    <span class="highlight-keyword">For</span> n <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> revisionIds.Count - <span class="highlight-number">1</span>
        <span class="highlight-keyword">If</span> revisionIds(n) = currentRevisionId <span class="highlight-keyword">Then</span>
            currentRevisionIndex = n
            <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">For</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Next</span>

    <span class="highlight-comment">' if the current revision id was found and is not the last index</span>
    <span class="highlight-keyword">If</span> currentRevisionIndex &gt;= <span class="highlight-number">0</span> <span class="highlight-keyword">AndAlso</span> currentRevisionIndex &lt; revisionIds.Count - <span class="highlight-number">1</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Dim</span> nextRevisionId <span class="highlight-keyword">As</span> ElementId = revisionIds(currentRevisionIndex + <span class="highlight-number">1</span>)
        nextRevision = <span class="highlight-keyword">TryCast</span>(document.GetElement(nextRevisionId), Revision)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Return</span> nextRevision
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(exceptionsToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exceptionsToggle, event)" tabindex="0"><img id="exceptionsToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Exceptions</span></h1><div id="exceptionsSection" class="section" name="collapseableSection" style=""><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th class="exceptionNameColumn">Exception</th><th class="exceptionConditionColumn">Condition</th></tr><tr><td><a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">Autodesk.Revit.Exceptions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ArgumentException</a></td><td>
   revisionId is not a valid Revision.
   -or-
   This operation cannot be performed because revisionId is an issued Revision.
   -or-
   revisionId cannot be combined with the next Revision because either revisionId is
   the last Revision or the next Revision has already been issued.
</td></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">Autodesk.Revit.Exceptions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ArgumentNullException</a></td><td>
   A non-optional argument was null
</td></tr></table></div></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="af882c60-68ae-2e53-5c41-7aa43cfc1df4.htm">Revision Class</a></div><div class="seeAlsoStyle"><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div><div id="footer"><div class="footerLine"><img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" /></div><A NAME="feedback"></A><span id="fb" class="feedbackcss"></span><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:revitapifeedback%40autodesk.com?Subject=Revit 2022 API">Autodesk</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></div></body></html>
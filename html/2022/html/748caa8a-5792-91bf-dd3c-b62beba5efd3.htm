<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>Create Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Create method" /><meta name="System.Keywords" content="Wire.Create method" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.Electrical.Wire.Create" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.DB.Electrical.Wire.Create(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.ElementId,Autodesk.Revit.DB.ElementId,Autodesk.Revit.DB.Electrical.WiringType,System.Collections.Generic.IList{Autodesk.Revit.DB.XYZ},Autodesk.Revit.DB.Connector,Autodesk.Revit.DB.Connector)" /><meta name="Description" content="Creates a new wire." /><meta name="Microsoft.Help.ContentType" content="Reference" /><link rel="stylesheet" type="text/css" href="../styles/Presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/Dropdown.js"> </script><script type="text/javascript" src="../scripts/script_manifold.js"> </script><script type="text/javascript" src="../scripts/script_feedBack.js"> </script><script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script><script type="text/javascript" src="../scripts/CommonUtilities.js"> </script><meta name="container" content="Autodesk.Revit.DB.Electrical" /><meta name="file" content="748caa8a-5792-91bf-dd3c-b62beba5efd3" /><meta name="guid" content="748caa8a-5792-91bf-dd3c-b62beba5efd3" /><xml><MSHelp:Attr Name="AssetID" Value="M:Autodesk.Revit.DB.Electrical.Wire.Create(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.ElementId,Autodesk.Revit.DB.ElementId,Autodesk.Revit.DB.Electrical.WiringType,System.Collections.Generic.IList{Autodesk.Revit.DB.XYZ},Autodesk.Revit.DB.Connector,Autodesk.Revit.DB.Connector)" /><MSHelp:TOCTitle Title="Create Method " /><MSHelp:RLTitle Title="Wire.Create Method  (Autodesk.Revit.DB.Electrical)" /><MSHelp:Keyword Index="A" Term="M:Autodesk.Revit.DB.Electrical.Wire.Create(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.ElementId,Autodesk.Revit.DB.ElementId,Autodesk.Revit.DB.Electrical.WiringType,System.Collections.Generic.IList{Autodesk.Revit.DB.XYZ},Autodesk.Revit.DB.Connector,Autodesk.Revit.DB.Connector)" /><MSHelp:Keyword Index="A" Term="frlrfAutodeskRevitDBElectricalWireClassCreateTopic" /><MSHelp:Keyword Index="K" Term="Create method" /><MSHelp:Keyword Index="K" Term="Wire.Create method" /><MSHelp:Keyword Index="F" Term="Autodesk.Revit.DB.Electrical.Wire.Create" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="RevitAPI.dll" /><MSHelp:Attr Name="APIName" Value="Autodesk.Revit.DB.Electrical.Wire.Create" /><MSHelp:Attr Name="DevLang" Value="CSharp" /><MSHelp:Attr Name="DevLang" Value="VB" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="Abstract" Value="Creates a new wire." /><MSHelp:Attr Name="AssemblyVersion" Value="22.0.0.0" /></xml><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script></head><body><input type="hidden" id="userDataCache" class="userDataStyle" /><input type="hidden" id="hiddenScrollOffset" /><img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" /><img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" /><img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" /><img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" /><img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" /><img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" /><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" /><div id="header"><table id="topTable" cellspacing="0" cellpadding="0"><tr><td><span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0"><img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span><span>    </span><span id="devlangsDropdown" class="filter" tabindex="0"><img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: All </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Multiple </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: C# </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual Basic </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual C++ </nobr></label></span></td></tr></table><div id="devlangsMenu"><input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="CSharpCheckbox">C#</label><br /><input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label><br /><input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label><br /></div><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2022 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">Wire<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Create Method </span></td></tr><tr id="headerTableRow3"><td align="left"><a href="c2acf13b-0d8b-8415-9682-ae64eb5e5895.htm">Wire Class</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2022 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" /><span style="color: DarkGray"></span><div class="summary">
   Creates a new wire.
</div><p /><b>Namespace:</b> <a href="212a1314-7843-2c6c-3322-363127e4059f.htm">Autodesk.Revit.DB.Electrical</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 22.0.0.0 (22.1.0.0)<br /><b>Since:</b> 
   2015
<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <a href="c2acf13b-0d8b-8415-9682-ae64eb5e5895.htm">Wire</a> <span class="identifier">Create</span>(
	<a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a> <span class="parameter">document</span>,
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a> <span class="parameter">wireTypeId</span>,
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a> <span class="parameter">viewId</span>,
	<a href="fb484864-f9d0-7335-1f91-d7ac587f15fb.htm">WiringType</a> <span class="parameter">wiringType</span>,
	<span class="nolink">IList</span>&lt;<a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">XYZ</a>&gt; <span class="parameter">vertexPoints</span>,
	<a href="11e07082-b3f2-26a1-de79-16535f44716c.htm">Connector</a> <span class="parameter">startConnectorTo</span>,
	<a href="11e07082-b3f2-26a1-de79-16535f44716c.htm">Connector</a> <span class="parameter">endConnectorTo</span>
)</pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">Create</span> ( _
	<span class="parameter">document</span> <span class="keyword">As</span> <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a>, _
	<span class="parameter">wireTypeId</span> <span class="keyword">As</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>, _
	<span class="parameter">viewId</span> <span class="keyword">As</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>, _
	<span class="parameter">wiringType</span> <span class="keyword">As</span> <a href="fb484864-f9d0-7335-1f91-d7ac587f15fb.htm">WiringType</a>, _
	<span class="parameter">vertexPoints</span> <span class="keyword">As</span> <span class="nolink">IList</span>(<span class="keyword">Of</span> <a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">XYZ</a>), _
	<span class="parameter">startConnectorTo</span> <span class="keyword">As</span> <a href="11e07082-b3f2-26a1-de79-16535f44716c.htm">Connector</a>, _
	<span class="parameter">endConnectorTo</span> <span class="keyword">As</span> <a href="11e07082-b3f2-26a1-de79-16535f44716c.htm">Connector</a> _
) <span class="keyword">As</span> <a href="c2acf13b-0d8b-8415-9682-ae64eb5e5895.htm">Wire</a></pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">static</span> <a href="c2acf13b-0d8b-8415-9682-ae64eb5e5895.htm">Wire</a>^ <span class="identifier">Create</span>(
	<a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a>^ <span class="parameter">document</span>, 
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^ <span class="parameter">wireTypeId</span>, 
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^ <span class="parameter">viewId</span>, 
	<a href="fb484864-f9d0-7335-1f91-d7ac587f15fb.htm">WiringType</a> <span class="parameter">wiringType</span>, 
	<span class="nolink">IList</span>&lt;<a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">XYZ</a>^&gt;^ <span class="parameter">vertexPoints</span>, 
	<a href="11e07082-b3f2-26a1-de79-16535f44716c.htm">Connector</a>^ <span class="parameter">startConnectorTo</span>, 
	<a href="11e07082-b3f2-26a1-de79-16535f44716c.htm">Connector</a>^ <span class="parameter">endConnectorTo</span>
)</pre></td></tr></table></span></div><div id="parameters"><h4 class="subHeading">Parameters</h4><dl paramName="document"><dt><span class="parameter">document</span></dt><dd>Type: <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Document</a><br />
   The document.
</dd></dl><dl paramName="wireTypeId"><dt><span class="parameter">wireTypeId</span></dt><dd>Type: <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ElementId</a><br />
   The id of the wire type of the newly created wire.
</dd></dl><dl paramName="viewId"><dt><span class="parameter">viewId</span></dt><dd>Type: <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ElementId</a><br />
   The view in which the wire is to be visible. This must be the id of a floor plan or reflected ceiling plan view.
</dd></dl><dl paramName="wiringType"><dt><span class="parameter">wiringType</span></dt><dd>Type: <a href="fb484864-f9d0-7335-1f91-d7ac587f15fb.htm">Autodesk.Revit.DB.Electrical<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>WiringType</a><br />
   Specifiies the wiring type for the newly created wire. The shape of the wire is determined by this value and the total number of points supplied via the vertexPoints and endpoint connectors. If the wiring type is WiringType.Arc:
   <ul><li>If there are 2 total points supplied, the wire is a straight-line wire.</li><li>If there are 3 total points supplied, the wire is a circular arc wire.</li><li>If there are 4 or more points, the wire is a spline wire.</li></ul>
   If the wiring type is WiringType.Chamfer, a polyline wire will be created connecting all the points.
</dd></dl><dl paramName="vertexPoints"><dt><span class="parameter">vertexPoints</span></dt><dd>Type: <span class="nolink">System.Collections.Generic<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>IList</span><span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span><a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">XYZ</a><span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span><br />
   The vertex point of the wire.
   If the startConnectorTo is <span class="keyword"><span class="languageSpecificText"><span class="cs">null</span><span class="vb">Nothing</span><span class="cpp">nullptr</span></span></span><span class="nu">a null reference (<span class="keyword">Nothing</span> in Visual Basic)</span>, the first vertex of the vertexPoints will be the start point, otherwise, the start connector origin will be the start point.
   If the endConnectorTo is <span class="keyword"><span class="languageSpecificText"><span class="cs">null</span><span class="vb">Nothing</span><span class="cpp">nullptr</span></span></span><span class="nu">a null reference (<span class="keyword">Nothing</span> in Visual Basic)</span>, the last vertex of the vertexPoints will be the end point, otherwise, the end connector origin will be the end point.
</dd></dl><dl paramName="startConnectorTo"><dt><span class="parameter">startConnectorTo</span></dt><dd>Type: <a href="11e07082-b3f2-26a1-de79-16535f44716c.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Connector</a><br />
   The connector to which the wire start point connects. If <span class="keyword"><span class="languageSpecificText"><span class="cs">null</span><span class="vb">Nothing</span><span class="cpp">nullptr</span></span></span><span class="nu">a null reference (<span class="keyword">Nothing</span> in Visual Basic)</span>, the start point connects to no existing connector. If set with a connector, the connector's origin will be added to the wire's vertices as the start point.
</dd></dl><dl paramName="endConnectorTo"><dt><span class="parameter">endConnectorTo</span></dt><dd>Type: <a href="11e07082-b3f2-26a1-de79-16535f44716c.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Connector</a><br />
   The connector to which the wire end point connects. If <span class="keyword"><span class="languageSpecificText"><span class="cs">null</span><span class="vb">Nothing</span><span class="cpp">nullptr</span></span></span><span class="nu">a null reference (<span class="keyword">Nothing</span> in Visual Basic)</span>, the end point connects to no existing connector. If set with a connector, the connector's origin will be added to the wire's vertices as the end point.
</dd></dl></div><h4 class="subHeading">Return Value</h4>
   The wire created.
</div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-comment">// Create an unconnected straight line wire between two points</span>
<span class="highlight-keyword">public</span> Wire CreateWire(Document document)
{
    Wire wire = <span class="highlight-keyword">null</span>;

    FilteredElementCollector collector = <span class="highlight-keyword">new</span> FilteredElementCollector(document);
    IList&lt;Element&gt; wireTypes = collector.OfCategory(BuiltInCategory.OST_Wire).WhereElementIsElementType().ToElements();
    WireType wireType = wireTypes.First() <span class="highlight-keyword">as</span> WireType;

    <span class="highlight-keyword">if</span> (wireType != <span class="highlight-keyword">null</span>)
    {
        IList&lt;XYZ&gt; wireVertices = <span class="highlight-keyword">new</span> List&lt;XYZ&gt;();
        wireVertices.Add(<span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>));
        wireVertices.Add(<span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">2</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>));

        wire = Wire.Create(document, wireType.Id, document.ActiveView.Id, WiringType.Arc, wireVertices, <span class="highlight-keyword">null</span>, <span class="highlight-keyword">null</span>);
    }

    <span class="highlight-keyword">return</span> wire;
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve">  <span class="highlight-comment">' Create an unconnected straight line wire between two points</span>
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> CreateWire(document <span class="highlight-keyword">As</span> Document) <span class="highlight-keyword">As</span> Wire
   <span class="highlight-keyword">Dim</span> wire__1 <span class="highlight-keyword">As</span> Wire = <span class="highlight-keyword">Nothing</span>

   <span class="highlight-keyword">Dim</span> collector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(document)
   <span class="highlight-keyword">Dim</span> wireTypes <span class="highlight-keyword">As</span> IList(<span class="highlight-keyword">Of</span> Element) = collector.OfCategory(BuiltInCategory.OST_Wire).WhereElementIsElementType().ToElements()
   <span class="highlight-keyword">Dim</span> wireType <span class="highlight-keyword">As</span> WireType = <span class="highlight-keyword">TryCast</span>(wireTypes.First(), WireType)

   <span class="highlight-keyword">If</span> wireType <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Dim</span> wireVertices <span class="highlight-keyword">As</span> IList(<span class="highlight-keyword">Of</span> XYZ) = <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> XYZ)()
      wireVertices.Add(<span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>))
      wireVertices.Add(<span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">2</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>))

      wire__1 = Wire.Create(document, wireType.Id, document.ActiveView.Id, WiringType.Arc, wireVertices, <span class="highlight-keyword">Nothing</span>, _
         <span class="highlight-keyword">Nothing</span>)
   <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

   <span class="highlight-keyword">Return</span> wire__1
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(exceptionsToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exceptionsToggle, event)" tabindex="0"><img id="exceptionsToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Exceptions</span></h1><div id="exceptionsSection" class="section" name="collapseableSection" style=""><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th class="exceptionNameColumn">Exception</th><th class="exceptionConditionColumn">Condition</th></tr><tr><td><a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">Autodesk.Revit.Exceptions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ArgumentException</a></td><td>
   wireTypeId is not a valid WireType id.
   -or-
   viewId does not represent a view valid for a Wire element. Either a floor plan or reflected ceiling plan is expected.
   -or-
   vertexPoints is not valid, because one or more points are coincident by comparing the X and Y of the points, or there are not at least two points including the connectors.
   -or-
   startConnectorTo cannot be connected to a wire, as it is not an electrical connector.
   -or-
   endConnectorTo cannot be connected to a wire, as it is not an electrical connector.
</td></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">Autodesk.Revit.Exceptions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ArgumentNullException</a></td><td>
   A non-optional argument was null
</td></tr><tr><td><a href="60f148c9-ece0-a6bb-4e12-bb4a9c8c8a24.htm">Autodesk.Revit.Exceptions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ArgumentOutOfRangeException</a></td><td>
   A value passed for an enumeration argument is not a member of that enumeration
</td></tr><tr><td><a href="3693dcdf-67fb-0128-3be8-cad150e9498e.htm">Autodesk.Revit.Exceptions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>DisabledDisciplineException</a></td><td>
   None of the following disciplines is enabled: Mechanical Electrical Piping.
</td></tr></table></div></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="c2acf13b-0d8b-8415-9682-ae64eb5e5895.htm">Wire Class</a></div><div class="seeAlsoStyle"><a href="212a1314-7843-2c6c-3322-363127e4059f.htm">Autodesk.Revit.DB.Electrical Namespace</a></div></div></div><div id="footer"><div class="footerLine"><img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" /></div><A NAME="feedback"></A><span id="fb" class="feedbackcss"></span><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:revitapifeedback%40autodesk.com?Subject=Revit 2022 API">Autodesk</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></div></body></html>
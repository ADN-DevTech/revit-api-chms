<html><head><title>LightType.GetLightType Method</title><meta name="Title" content="GetLightType Method" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.DB.Lighting.LightType.GetLightType(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.ElementId)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="LightType.GetLightType method" /><meta name="System.Keywords" content="GetLightType method" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.Lighting.LightType.GetLightType" /><meta name="Microsoft.Help.F1" content="LightType.GetLightType" /><meta name="Microsoft.Help.F1" content="GetLightType" /><meta name="container" content="Autodesk.Revit.DB.Lighting" /><meta name="file" content="2cf4fd38-92b9-cc32-12d8-b08851669d1d" /><meta name="guid" content="2cf4fd38-92b9-cc32-12d8-b08851669d1d" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="Creates a light type object from the given document and family type ID" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /></head><body onload="SetDefaultLanguage('cs');"><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Light<wbr />Type<span id="LST9F59F1AF_0" data-languageSpecificText="cpp=::|nu=."></span>Get<wbr />Light<wbr />Type Method</h1></td></tr></table><div class="summary">
   Creates a light type object from the given document and family type ID
</div><br /><strong>Namespace:</strong> <a href="a6a04f07-7fd2-0a4e-12e7-01842ee6daaf.htm">Autodesk.Revit.DB.Lighting</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">LightType</span> <span class="identifier">GetLightType</span>(
	<span class="identifier">Document</span> <span class="parameter">document</span>,
	<span class="identifier">ElementId</span> <span class="parameter">typeId</span>
)</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">GetLightType</span> ( 
	<span class="parameter">document</span> <span class="keyword">As</span> <span class="identifier">Document</span>,
	<span class="parameter">typeId</span> <span class="keyword">As</span> <span class="identifier">ElementId</span>
) <span class="keyword">As</span> <span class="identifier">LightType</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="identifier">LightType</span>^ <span class="identifier">GetLightType</span>(
	<span class="identifier">Document</span>^ <span class="parameter">document</span>, 
	<span class="identifier">ElementId</span>^ <span class="parameter">typeId</span>
)</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">GetLightType</span> : 
        <span class="parameter">document</span> : <span class="identifier">Document</span> * 
        <span class="parameter">typeId</span> : <span class="identifier">ElementId</span> <span class="keyword">-&gt;</span> <span class="identifier">LightType</span> </pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">document</span>  <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a></dt><dd>
   The document the typeId is from
</dd><dt class="has-text-weight-normal"><span class="parameter">typeId</span>  <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a></dt><dd>
   The ID of the light family type
</dd></dl><h4>Return Value</h4><a href="42c83d85-60cd-52c3-7b97-b89e81d7d9fe.htm">LightType</a><br />
   The newly created LightType object
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDEC')" onkeypress="SectionExpandCollapse_CheckKey('IDEC', event)" tabindex="0"><img id="IDECToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="IDECSection" class="collapsibleSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">ArgumentException</a></td><td>
   The ElementId is the argument that is being validated
   The ElementId is not valid because it is not for a light element.
</td></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">ArgumentNullException</a></td><td>
   A non-optional argument was null
</td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDHC')" onkeypress="SectionExpandCollapse_CheckKey('IDHC', event)" tabindex="0"><img id="IDHCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDHCSection" class="collapsibleSection"><div id="IDAHC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAHC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAHC','cs','1','4');return false;">C#</a></div><div id="IDAHC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAHC','vb','2','4');return false;">VB</a></div><div id="IDAHC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAHC','cpp','3','4');return false;">C++</a></div><div id="IDAHC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAHC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAHC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAHC');return false;" title="Copy">Copy</a></div></div><div id="IDAHC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> LightType GetLightTypeFromLightSymbol(Document document)
{
    <span class="highlight-keyword">if</span> (document.IsFamilyDocument) <span class="highlight-comment">// not used in family document</span>
        <span class="highlight-keyword">return</span> <span class="highlight-keyword">null</span>;

    <span class="highlight-comment">// In order to get the light infromation, please get a light fixture symbol first</span>
    FilteredElementCollector collector = <span class="highlight-keyword">new</span> FilteredElementCollector(document);
    collector.OfClass(<span class="highlight-keyword">typeof</span>(FamilySymbol)).OfCategory(BuiltInCategory.OST_LightingFixtures);
    FamilySymbol lightSymbo = collector.Cast&lt;FamilySymbol&gt;().First&lt;FamilySymbol&gt;();
    <span class="highlight-keyword">if</span> (lightSymbo == <span class="highlight-keyword">null</span>)    <span class="highlight-comment">// check null reference</span>
        <span class="highlight-keyword">return</span> <span class="highlight-keyword">null</span>;

    <span class="highlight-comment">// Get the LightType for given light fixture sybmol</span>
    <span class="highlight-keyword">return</span> LightType.GetLightType(document, lightSymbo.Id);
}</pre></div><div id="IDAHC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> GetLightTypeFromLightSymbol(document <span class="highlight-keyword">As</span> Document) <span class="highlight-keyword">As</span> LightType
   <span class="highlight-keyword">If</span> document.IsFamilyDocument <span class="highlight-keyword">Then</span>
      <span class="highlight-comment">' not used in family document</span>
      <span class="highlight-keyword">Return</span> <span class="highlight-keyword">Nothing</span>
   <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

   <span class="highlight-comment">' In order to get the light infromation, please get a light fixture symbol first</span>
   <span class="highlight-keyword">Dim</span> collector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(document)
   collector.OfClass(<span class="highlight-keyword">GetType</span>(FamilySymbol)).OfCategory(BuiltInCategory.OST_LightingFixtures)
   <span class="highlight-keyword">Dim</span> lightSymbo <span class="highlight-keyword">As</span> FamilySymbol = collector.Cast(<span class="highlight-keyword">Of</span> FamilySymbol)().First()
   <span class="highlight-keyword">If</span> lightSymbo <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
      <span class="highlight-comment">' check null reference</span>
      <span class="highlight-keyword">Return</span> <span class="highlight-keyword">Nothing</span>
   <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

   <span class="highlight-comment">' Get the LightType for given light fixture sybmol</span>
   <span class="highlight-keyword">Return</span> LightType.GetLightType(document, lightSymbo.Id)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></pre></div><div id="IDAHC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDAHC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="42c83d85-60cd-52c3-7b97-b89e81d7d9fe.htm">LightType Class</a></div><div><a href="a6a04f07-7fd2-0a4e-12e7-01842ee6daaf.htm">Autodesk.Revit.DB.Lighting Namespace</a></div></div></div></div>
        </div></body></html>
<html><head><title>Element.GetGeneratingElementIds Method</title><meta name="Title" content="GetGeneratingElementIds Method" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.DB.Element.GetGeneratingElementIds(Autodesk.Revit.DB.GeometryObject)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="Element.GetGeneratingElementIds method" /><meta name="System.Keywords" content="GetGeneratingElementIds method" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.Element.GetGeneratingElementIds" /><meta name="Microsoft.Help.F1" content="Element.GetGeneratingElementIds" /><meta name="Microsoft.Help.F1" content="GetGeneratingElementIds" /><meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="112590d2-de20-dd1f-ae05-df7dfb3b410f" /><meta name="guid" content="112590d2-de20-dd1f-ae05-df7dfb3b410f" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="Returns the ids of the element(s) that generated the input geometry object." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /></head><body onload="SetDefaultLanguage('cs');"><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Element<span id="LST7C01E09B_0" data-languageSpecificText="cpp=::|nu=."></span>Get<wbr />Generating<wbr />Element<wbr />Ids Method</h1></td></tr></table><div class="summary">
   Returns the ids of the element(s) that generated the input geometry object.
</div><br /><strong>Namespace:</strong> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">ICollection</span>&lt;<span class="identifier">ElementId</span>&gt; <span class="identifier">GetGeneratingElementIds</span>(
	<span class="identifier">GeometryObject</span> <span class="parameter">geometryObject</span>
)</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">GetGeneratingElementIds</span> ( 
	<span class="parameter">geometryObject</span> <span class="keyword">As</span> <span class="identifier">GeometryObject</span>
) <span class="keyword">As</span> <span class="identifier">ICollection</span>(<span class="keyword">Of</span> <span class="identifier">ElementId</span>)</pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="identifier">ICollection</span>&lt;<span class="identifier">ElementId</span>^&gt;^ <span class="identifier">GetGeneratingElementIds</span>(
	<span class="identifier">GeometryObject</span>^ <span class="parameter">geometryObject</span>
)</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">member</span> <span class="identifier">GetGeneratingElementIds</span> : 
        <span class="parameter">geometryObject</span> : <span class="identifier">GeometryObject</span> <span class="keyword">-&gt;</span> <span class="identifier">ICollection</span>&lt;<span class="identifier">ElementId</span>&gt; </pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">geometryObject</span>  <a href="e0f15010-0e19-6216-e2f0-ab7978145daa.htm">GeometryObject</a></dt><dd>
   The geometry object whose generating element is requested.
</dd></dl><h4>Return Value</h4><a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1" target="_blank" rel="noopener noreferrer">ICollection</a><span id="LST7C01E09B_1" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a><span id="LST7C01E09B_2" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><br />
   The id(s) of the element(s) that generated (or may have generated) the given geometry object.  Empty if no generating elements are found. If the set contains just one id, it is the id of the element that generated the geometry object.
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDEC')" onkeypress="SectionExpandCollapse_CheckKey('IDEC', event)" tabindex="0"><img id="IDECToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="IDECSection" class="collapsibleSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">ArgumentException</a></td><td>
   The input geometryObject is invalid and so cannot be used to obtain the generating element ids.
</td></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">ArgumentNullException</a></td><td>
   A non-optional argument was null
</td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection">
   This function supports many different types of relationships among elements.
   Most of these relationships will return a single element, for example:
   <ul><li>Window and door cutting walls</li><li>Openings cutting hosts</li><li>Face splitting faces</li><li>Wall sweep or reveal traversing wall</li></ul>
   A few relationships have the potential for returning multiple elements, including:
   <ul><li>Walls joining to other wall(s)</li><li>Elements extending to roof(s)</li></ul>
   If more than one id is returned, one of them (unspecified) is the id of the element that generated the geometry object and the others are ids of related elements. For example, if a wall A is joined to two walls B and C in a way that creates two end faces, and if this function is called for one of the two end faces, it will return the ids of walls B and C.
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDHC')" onkeypress="SectionExpandCollapse_CheckKey('IDHC', event)" tabindex="0"><img id="IDHCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDHCSection" class="collapsibleSection"><div id="IDAHC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAHC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAHC','cs','1','4');return false;">C#</a></div><div id="IDAHC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAHC','vb','2','4');return false;">VB</a></div><div id="IDAHC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAHC','cpp','3','4');return false;">C++</a></div><div id="IDAHC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAHC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAHC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAHC');return false;" title="Copy">Copy</a></div></div><div id="IDAHC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Find elements joined or attached to the end faces of a given wall (such as walls and roofs).</span>
<span class="highlight-comment">// Mid-joined walls (such as in a T configuration) are not found because they do not affect end face geometry.</span>

ICollection&lt;ElementId&gt; joinedElements = <span class="highlight-keyword">new</span> Collection&lt;ElementId&gt;(); <span class="highlight-comment">// collection to store the walls joined to the selected wall</span>

<span class="highlight-comment">// find all faces of the selected wall</span>
GeometryElement geometryElement = wall.get_Geometry(<span class="highlight-keyword">new</span> Options());
<span class="highlight-keyword">foreach</span> (GeometryObject geometryObject <span class="highlight-keyword">in</span> geometryElement)
{
    <span class="highlight-keyword">if</span> (geometryObject <span class="highlight-keyword">is</span> Solid)
    {
        Solid solid = geometryObject <span class="highlight-keyword">as</span> Solid;
        <span class="highlight-keyword">foreach</span> (Face face <span class="highlight-keyword">in</span> solid.Faces)
        {
            <span class="highlight-comment">// for each face, find the other elements that generated the geometry of that face</span>
            ICollection&lt;ElementId&gt; generatingElementIds = wall.GetGeneratingElementIds(face);

            generatingElementIds.Remove(wall.Id); <span class="highlight-comment">// remove the originally selected wall, leaving only other elements joined to it</span>
            <span class="highlight-keyword">foreach</span> (ElementId id <span class="highlight-keyword">in</span> generatingElementIds)
            {
                <span class="highlight-keyword">if</span> (!(joinedElements.Contains(id)))
                    joinedElements.Add(id); <span class="highlight-comment">// add each wall joined to this face to the overall collection </span>
            }
        }
    }
}

uidocument.Selection.SetElementIds(joinedElements); <span class="highlight-comment">// select all of the joined elements</span></pre></div><div id="IDAHC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-comment">' Find elements joined or attached to the end faces of a given wall (such as walls and roofs).</span>
<span class="highlight-comment">' Mid-joined walls (such as in a T configuration) are not found because they do not affect end face geometry.</span>

<span class="highlight-keyword">Dim</span> joinedElements <span class="highlight-keyword">As</span> ICollection(<span class="highlight-keyword">Of</span> ElementId) = <span class="highlight-keyword">New</span> Collection(<span class="highlight-keyword">Of</span> ElementId)()
<span class="highlight-comment">' collection to store the walls joined to the selected wall</span>
<span class="highlight-comment">' find all faces of the selected wall</span>
<span class="highlight-keyword">Dim</span> geometryElement <span class="highlight-keyword">As</span> GeometryElement = wall.Geometry(<span class="highlight-keyword">New</span> Options())
<span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> geometryObject <span class="highlight-keyword">As</span> GeometryObject <span class="highlight-keyword">In</span> geometryElement
    <span class="highlight-keyword">If</span> <span class="highlight-keyword">TypeOf</span> geometryObject <span class="highlight-keyword">Is</span> Solid <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Dim</span> solid <span class="highlight-keyword">As</span> Solid = <span class="highlight-keyword">TryCast</span>(geometryObject, Solid)
        <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> face <span class="highlight-keyword">As</span> Face <span class="highlight-keyword">In</span> solid.Faces
            <span class="highlight-comment">' for each face, find the other elements that generated the geometry of that face</span>
            <span class="highlight-keyword">Dim</span> generatingElementIds <span class="highlight-keyword">As</span> ICollection(<span class="highlight-keyword">Of</span> ElementId) = wall.GetGeneratingElementIds(face)

            generatingElementIds.Remove(wall.Id)
            <span class="highlight-comment">' remove the originally selected wall, leaving only other elements joined to it</span>
            <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> id <span class="highlight-keyword">As</span> ElementId <span class="highlight-keyword">In</span> generatingElementIds
                <span class="highlight-keyword">If</span> <span class="highlight-keyword">Not</span> (joinedElements.Contains(id)) <span class="highlight-keyword">Then</span>
                    joinedElements.Add(id)
                    <span class="highlight-comment">' add each wall joined to this face to the overall collection </span>
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
            <span class="highlight-keyword">Next</span>
        <span class="highlight-keyword">Next</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
<span class="highlight-keyword">Next</span>

uidocument.Selection.SetElementIds(joinedElements)
<span class="highlight-comment">' select all of the joined elements</span></pre></div><div id="IDAHC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDAHC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element Class</a></div><div><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div>
        </div></body></html>
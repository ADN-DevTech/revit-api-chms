<html><head><title>Viewport.SetBoxCenter Method</title><meta name="Title" content="SetBoxCenter Method" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.DB.Viewport.SetBoxCenter(Autodesk.Revit.DB.XYZ)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="Viewport.SetBoxCenter method" /><meta name="System.Keywords" content="SetBoxCenter method" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.Viewport.SetBoxCenter" /><meta name="Microsoft.Help.F1" content="Viewport.SetBoxCenter" /><meta name="Microsoft.Help.F1" content="SetBoxCenter" /><meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="71734b96-6582-e6c5-674a-e6c092ced0f2" /><meta name="guid" content="71734b96-6582-e6c5-674a-e6c092ced0f2" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="Moves this viewport so that the center of the box outline (excluding the viewport label) is at a given point." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /></head><body onload="SetDefaultLanguage('cs');"><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Viewport<span id="LST171E0DB_0" data-languageSpecificText="cpp=::|nu=."></span>Set<wbr />Box<wbr />Center Method</h1></td></tr></table><div class="summary">
   Moves this viewport so that the center of the box outline (excluding the viewport label) is at a given point.
</div><br /><strong>Namespace:</strong> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">void</span> <span class="identifier">SetBoxCenter</span>(
	<span class="identifier">XYZ</span> <span class="parameter">newCenterPoint</span>
)</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Sub</span> <span class="identifier">SetBoxCenter</span> ( 
	<span class="parameter">newCenterPoint</span> <span class="keyword">As</span> <span class="identifier">XYZ</span>
)</pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">void</span> <span class="identifier">SetBoxCenter</span>(
	<span class="identifier">XYZ</span>^ <span class="parameter">newCenterPoint</span>
)</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">member</span> <span class="identifier">SetBoxCenter</span> : 
        <span class="parameter">newCenterPoint</span> : <span class="identifier">XYZ</span> <span class="keyword">-&gt;</span> <span class="keyword">unit</span> </pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">newCenterPoint</span>  <a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">XYZ</a></dt><dd>
   The desired center for the box outline.
</dd></dl></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDCC')" onkeypress="SectionExpandCollapse_CheckKey('IDCC', event)" tabindex="0"><img id="IDCCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="IDCCSection" class="collapsibleSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">ArgumentNullException</a></td><td>
   A non-optional argument was null
</td></tr><tr><td><a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">InvalidOperationException</a></td><td>
   The viewport is not on a sheet.
</td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDFC')" onkeypress="SectionExpandCollapse_CheckKey('IDFC', event)" tabindex="0"><img id="IDFCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDFCSection" class="collapsibleSection"><div id="IDAFC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAFC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAFC','cs','1','4');return false;">C#</a></div><div id="IDAFC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAFC','vb','2','4');return false;">VB</a></div><div id="IDAFC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAFC','cpp','3','4');return false;">C++</a></div><div id="IDAFC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAFC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAFC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAFC');return false;" title="Copy">Copy</a></div></div><div id="IDAFC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> PlaceAlignedViewsAtLeftCorner(Document doc)
{
    FilteredElementCollector fec = <span class="highlight-keyword">new</span> FilteredElementCollector(doc);
    fec.OfClass(<span class="highlight-keyword">typeof</span>(ViewPlan));
    <span class="highlight-keyword">var</span> viewPlans = fec.Cast&lt;ViewPlan&gt;().Where&lt;ViewPlan&gt;(vp =&gt; !vp.IsTemplate &amp;&amp; vp.ViewType == ViewType.CeilingPlan);

    ViewPlan vp1 = viewPlans.ElementAt(<span class="highlight-number">0</span>);
    ViewPlan vp2 = viewPlans.ElementAt(<span class="highlight-number">1</span>);

    <span class="highlight-keyword">using</span> (Transaction t = <span class="highlight-keyword">new</span> Transaction(doc, <span class="highlight-literal">"Place on sheet"</span>))
    {
        t.Start();

        <span class="highlight-comment">// Add two viewports distinct from one another</span>
        ViewSheet vs = ViewSheet.Create(doc, ElementId.InvalidElementId);
        Viewport viewport1 = Viewport.Create(doc, vs.Id, vp1.Id, <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>));
        Viewport viewport2 = Viewport.Create(doc, vs.Id, vp2.Id, <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">5</span>, <span class="highlight-number">0</span>));

        doc.Regenerate();

        <span class="highlight-comment">// Calculate the necessary move vector to align the lower left corner</span>
        Outline outline1 = viewport1.GetBoxOutline();
        Outline outline2 = viewport2.GetBoxOutline();
        XYZ boxCenter = viewport2.GetBoxCenter();
        XYZ vectorToCenter = boxCenter - outline2.MinimumPoint;
        XYZ newCenter = outline1.MinimumPoint + vectorToCenter;

        <span class="highlight-comment">// Move the viewport to the new location</span>
        viewport2.SetBoxCenter(newCenter);

        t.Commit();
    }
}</pre></div><div id="IDAFC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Sub</span> PlaceAlignedViewsAtLeftCorner(doc <span class="highlight-keyword">As</span> Document)
    <span class="highlight-keyword">Dim</span> fec <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(doc)
    fec.OfClass(<span class="highlight-keyword">GetType</span>(ViewPlan))
    <span class="highlight-keyword">Dim</span> viewPlans = fec.Cast(<span class="highlight-keyword">Of</span> ViewPlan)().Where(<span class="highlight-keyword">Function</span>(vp) <span class="highlight-keyword">Not</span> vp.IsTemplate <span class="highlight-keyword">AndAlso</span> vp.ViewType = ViewType.CeilingPlan)

    <span class="highlight-keyword">Dim</span> vp1 <span class="highlight-keyword">As</span> ViewPlan = viewPlans.ElementAt(<span class="highlight-number">0</span>)
    <span class="highlight-keyword">Dim</span> vp2 <span class="highlight-keyword">As</span> ViewPlan = viewPlans.ElementAt(<span class="highlight-number">1</span>)

    <span class="highlight-keyword">Using</span> t <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Transaction(doc, <span class="highlight-literal">"Place on sheet"</span>)
        t.Start()

        <span class="highlight-comment">' Add two viewports distinct from one another</span>
        <span class="highlight-keyword">Dim</span> vs <span class="highlight-keyword">As</span> ViewSheet = ViewSheet.Create(doc, ElementId.InvalidElementId)
        <span class="highlight-keyword">Dim</span> viewport1 <span class="highlight-keyword">As</span> Viewport = Viewport.Create(doc, vs.Id, vp1.Id, <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>))
        <span class="highlight-keyword">Dim</span> viewport2 <span class="highlight-keyword">As</span> Viewport = Viewport.Create(doc, vs.Id, vp2.Id, <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">5</span>, <span class="highlight-number">0</span>))

        doc.Regenerate()

        <span class="highlight-comment">' Calculate the necessary move vector to align the lower left corner</span>
        <span class="highlight-keyword">Dim</span> outline1 <span class="highlight-keyword">As</span> Outline = viewport1.GetBoxOutline()
        <span class="highlight-keyword">Dim</span> outline2 <span class="highlight-keyword">As</span> Outline = viewport2.GetBoxOutline()
        <span class="highlight-keyword">Dim</span> boxCenter <span class="highlight-keyword">As</span> XYZ = viewport2.GetBoxCenter()
        <span class="highlight-keyword">Dim</span> vectorToCenter <span class="highlight-keyword">As</span> XYZ = boxCenter - outline2.MinimumPoint
        <span class="highlight-keyword">Dim</span> newCenter <span class="highlight-keyword">As</span> XYZ = outline1.MinimumPoint + vectorToCenter

        <span class="highlight-comment">' Move the viewport to the new location</span>
        viewport2.SetBoxCenter(newCenter)

        t.Commit()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div><div id="IDAFC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDAFC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="5991dc40-234a-4835-cc06-07524d2e61a4.htm">Viewport Class</a></div><div><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div>
        </div></body></html>
<html><head><title>Element.Parameters Property</title><meta name="Title" content="Parameters Property" /><meta name="Microsoft.Help.Id" content="P:Autodesk.Revit.DB.Element.Parameters" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="Element.Parameters property" /><meta name="System.Keywords" content="Parameters property" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.Element.Parameters" /><meta name="Microsoft.Help.F1" content="Element.Parameters" /><meta name="Microsoft.Help.F1" content="Parameters" /><meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="7af5d66f-4533-33d2-dd82-d9573eaabf15" /><meta name="guid" content="7af5d66f-4533-33d2-dd82-d9573eaabf15" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="Retrieves a set containing all of the parameters that are contained within the element." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /></head><body onload="SetDefaultLanguage('cs');"><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Element<span id="LST16E87539_0" data-languageSpecificText="cpp=::|nu=."></span>Parameters Property</h1></td></tr></table><div class="summary">Retrieves a set containing all of the parameters that are contained within the element.</div><br /><strong>Namespace:</strong> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">ParameterSet</span> <span class="identifier">Parameters</span> { <span class="keyword">get</span>; }</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">ReadOnly</span> <span class="keyword">Property</span> <span class="identifier">Parameters</span> <span class="keyword">As</span> <span class="identifier">ParameterSet</span>
	<span class="keyword">Get</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">property</span> <span class="identifier">ParameterSet</span>^ <span class="identifier">Parameters</span> {
	<span class="identifier">ParameterSet</span>^ <span class="keyword">get</span> ();
}</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">member</span> <span class="identifier">Parameters</span> : <span class="identifier">ParameterSet</span> <span class="keyword">with</span> <span class="keyword">get</span></pre></div></div></div><h4>Property Value</h4><a href="6e6e8667-ebe2-0c60-c180-9d8000cff598.htm">ParameterSet</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection">The Parameters property contains a set of all the parameters that the element supports.
These parameters are displayed in the Element properties dialog in the Autodesk Revit interface.
These parameters can be retrieved and set via the parameter objects stored in this set.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDCC')" onkeypress="SectionExpandCollapse_CheckKey('IDCC', event)" tabindex="0"><img id="IDCCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDCCSection" class="collapsibleSection"><div id="IDACC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDACC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDACC','cs','1','4');return false;">C#</a></div><div id="IDACC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDACC','vb','2','4');return false;">VB</a></div><div id="IDACC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDACC','cpp','3','4');return false;">C++</a></div><div id="IDACC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDACC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDACC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDACC');return false;" title="Copy">Copy</a></div></div><div id="IDACC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">void</span> GetElementParameterInformation(Document document, Element element)
{
    <span class="highlight-comment">// Format the prompt information string</span>
    String prompt = <span class="highlight-literal">"Show parameters in selected Element: \n\r"</span>;

    StringBuilder st = <span class="highlight-keyword">new</span> StringBuilder();
    <span class="highlight-comment">// iterate element's parameters</span>
    <span class="highlight-keyword">foreach</span> (Parameter para <span class="highlight-keyword">in</span> element.Parameters)
    {
        st.AppendLine(GetParameterInformation(para, document));
    }

    <span class="highlight-comment">// Give the user some information</span>
    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, prompt + st.ToString());
}

String GetParameterInformation(Parameter para, Document document)
{
    <span class="highlight-keyword">string</span> defName = para.Definition.Name + <span class="highlight-literal">"\t : "</span>;
    <span class="highlight-keyword">string</span> defValue = <span class="highlight-keyword">string</span>.Empty;
    <span class="highlight-comment">// Use different method to get parameter data according to the storage type</span>
    <span class="highlight-keyword">switch</span> (para.StorageType)
    {
        <span class="highlight-keyword">case</span> StorageType.Double:
            <span class="highlight-comment">//covert the number into Metric</span>
            defValue = para.AsValueString();
            <span class="highlight-keyword">break</span>;
        <span class="highlight-keyword">case</span> StorageType.ElementId:
            <span class="highlight-comment">//find out the name of the element</span>
            Autodesk.Revit.DB.ElementId id = para.AsElementId();
            <span class="highlight-keyword">if</span> (id != ElementId.InvalidElementId)
            {
                defValue = document.GetElement(id).Name;
            }
            <span class="highlight-keyword">else</span>
            {
                defValue = id.ToString();
            }
            <span class="highlight-keyword">break</span>;
        <span class="highlight-keyword">case</span> StorageType.Integer:
            <span class="highlight-keyword">if</span> (SpecTypeId.Boolean.YesNo == para.Definition.GetDataType())
            {
                <span class="highlight-keyword">if</span> (para.AsInteger() == <span class="highlight-number">0</span>)
                {
                    defValue = <span class="highlight-literal">"False"</span>;
                }
                <span class="highlight-keyword">else</span>
                {
                    defValue = <span class="highlight-literal">"True"</span>;
                }
            }
            <span class="highlight-keyword">else</span>
            {
                defValue = para.AsInteger().ToString();
            }
            <span class="highlight-keyword">break</span>;
        <span class="highlight-keyword">case</span> StorageType.String:
            defValue = para.AsString();
            <span class="highlight-keyword">break</span>;
        <span class="highlight-keyword">default</span>:
            defValue = <span class="highlight-literal">"Unexposed parameter."</span>;
            <span class="highlight-keyword">break</span>;
    }

    <span class="highlight-keyword">return</span> defName + defValue;
}</pre></div><div id="IDACC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> GetElementParameterInformation(document <span class="highlight-keyword">As</span> Document, element <span class="highlight-keyword">As</span> Element)
    <span class="highlight-comment">' Format the prompt information string</span>
    <span class="highlight-keyword">Dim</span> prompt <span class="highlight-keyword">As</span> [<span class="highlight-keyword">String</span>] = <span class="highlight-literal">"Show parameters in selected Element: "</span> &amp; vbLf &amp; vbCr

    <span class="highlight-keyword">Dim</span> st <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> StringBuilder()
    <span class="highlight-comment">' iterate element's parameters</span>
    <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> para <span class="highlight-keyword">As</span> Parameter <span class="highlight-keyword">In</span> element.Parameters
        st.AppendLine(GetParameterInformation(para, document))
    <span class="highlight-keyword">Next</span>

    <span class="highlight-comment">' Give the user some information</span>
    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, prompt + st.ToString())
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>

<span class="highlight-keyword">Private</span> <span class="highlight-keyword">Function</span> GetParameterInformation(para <span class="highlight-keyword">As</span> Parameter, document <span class="highlight-keyword">As</span> Document) <span class="highlight-keyword">As</span> [<span class="highlight-keyword">String</span>]
    <span class="highlight-keyword">Dim</span> defName <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = para.Definition.Name + vbTab &amp; <span class="highlight-literal">" : "</span>
    <span class="highlight-keyword">Dim</span> defValue <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-keyword">String</span>.Empty
    <span class="highlight-comment">' Use different method to get parameter data according to the storage type</span>
    <span class="highlight-keyword">Select</span> <span class="highlight-keyword">Case</span> para.StorageType
        <span class="highlight-keyword">Case</span> StorageType.[<span class="highlight-keyword">Double</span>]
            <span class="highlight-comment">'covert the number into Metric</span>
            defValue = para.AsValueString()
            <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
        <span class="highlight-keyword">Case</span> StorageType.ElementId
            <span class="highlight-comment">'find out the name of the element</span>
            <span class="highlight-keyword">Dim</span> id <span class="highlight-keyword">As</span> Autodesk.Revit.DB.ElementId = para.AsElementId()
            <span class="highlight-keyword">If</span> id &gt; Autodesk.Revit.DB.ElementId.InvalidElementId <span class="highlight-keyword">Then</span>
                defValue = document.GetElement(id).Name
            <span class="highlight-keyword">Else</span>
                defValue = id.ToString()
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
            <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
        <span class="highlight-keyword">Case</span> StorageType.[<span class="highlight-keyword">Integer</span>]
            <span class="highlight-keyword">If</span> SpecTypeId.<span class="highlight-keyword">Boolean</span>.YesNo = para.Definition.GetDataType() <span class="highlight-keyword">Then</span>
                <span class="highlight-keyword">If</span> para.AsInteger() = <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
                    defValue = <span class="highlight-literal">"False"</span>
                <span class="highlight-keyword">Else</span>
                    defValue = <span class="highlight-literal">"True"</span>
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
            <span class="highlight-keyword">Else</span>
                defValue = para.AsInteger().ToString()
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
            <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
        <span class="highlight-keyword">Case</span> StorageType.[<span class="highlight-keyword">String</span>]
            defValue = para.AsString()
            <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
        <span class="highlight-keyword">Case</span> <span class="highlight-keyword">Else</span>
            defValue = <span class="highlight-literal">"Unexposed parameter."</span>
            <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Select</span>

    <span class="highlight-keyword">Return</span> defName &amp; defValue
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></pre></div><div id="IDACC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDACC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element Class</a></div><div><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div>
        </div></body></html>
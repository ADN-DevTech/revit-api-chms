<html><head><title>BRepBuilderSurfaceGeometry.CreateNURBSSurface(Int32, Int32, IList&lt;Double&gt;, IList&lt;Double&gt;, IList&lt;XYZ&gt;, IList&lt;Double&gt;, Boolean, BoundingBoxUV) Method</title><meta name="Title" content="CreateNURBSSurface(Int32, Int32, IList&lt;Double&gt;, IList&lt;Double&gt;, IList&lt;XYZ&gt;, IList&lt;Double&gt;, Boolean, BoundingBoxUV) Method" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.DB.BRepBuilderSurfaceGeometry.CreateNURBSSurface(System.Int32,System.Int32,System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{Autodesk.Revit.DB.XYZ},System.Collections.Generic.IList{System.Double},System.Boolean,Autodesk.Revit.DB.BoundingBoxUV)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="04ce47fc-117b-8e48-c388-7f2de2bbaa96" /><meta name="guid" content="04ce47fc-117b-8e48-c388-7f2de2bbaa96" /><meta name="Description" content="Construct BRepBuilderSurfaceGeometry based on NURBS surface data, where the weights are supplied. In this case, the NURBS surface will be a piecewise rational polynomial surface." /></head><body onload="SetDefaultLanguage('cs');"><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>BRep<wbr />Builder<wbr />Surface<wbr />Geometry<span id="LST16B5A691_0" data-languageSpecificText="cpp=::|nu=."></span>Create<wbr />NURBSSurface(Int<wbr />32, Int<wbr />32, IList<span id="LST16B5A691_1" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span>Double<span id="LST16B5A691_2" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, IList<span id="LST16B5A691_3" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span>Double<span id="LST16B5A691_4" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, IList<span id="LST16B5A691_5" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span>XYZ<span id="LST16B5A691_6" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, IList<span id="LST16B5A691_7" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span>Double<span id="LST16B5A691_8" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, Boolean, Bounding<wbr />Box<wbr />UV) Method</h1></td></tr></table><div class="summary">
   Construct BRepBuilderSurfaceGeometry based on NURBS surface data, where the weights are supplied.
   In this case, the NURBS surface will be a piecewise rational polynomial surface.
</div><br /><strong>Namespace:</strong> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">BRepBuilderSurfaceGeometry</span> <span class="identifier">CreateNURBSSurface</span>(
	<span class="identifier">int</span> <span class="parameter">degreeU</span>,
	<span class="identifier">int</span> <span class="parameter">degreeV</span>,
	<span class="identifier">IList</span>&lt;<span class="identifier">double</span>&gt; <span class="parameter">knotsU</span>,
	<span class="identifier">IList</span>&lt;<span class="identifier">double</span>&gt; <span class="parameter">knotsV</span>,
	<span class="identifier">IList</span>&lt;<span class="identifier">XYZ</span>&gt; <span class="parameter">controlPoints</span>,
	<span class="identifier">IList</span>&lt;<span class="identifier">double</span>&gt; <span class="parameter">weights</span>,
	<span class="identifier">bool</span> <span class="parameter">bReverseOrientation</span>,
	<span class="identifier">BoundingBoxUV</span> <span class="parameter">surfaceEnvelope</span>
)</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">CreateNURBSSurface</span> ( 
	<span class="parameter">degreeU</span> <span class="keyword">As</span> <span class="identifier">Integer</span>,
	<span class="parameter">degreeV</span> <span class="keyword">As</span> <span class="identifier">Integer</span>,
	<span class="parameter">knotsU</span> <span class="keyword">As</span> <span class="identifier">IList</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>),
	<span class="parameter">knotsV</span> <span class="keyword">As</span> <span class="identifier">IList</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>),
	<span class="parameter">controlPoints</span> <span class="keyword">As</span> <span class="identifier">IList</span>(<span class="keyword">Of</span> <span class="identifier">XYZ</span>),
	<span class="parameter">weights</span> <span class="keyword">As</span> <span class="identifier">IList</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>),
	<span class="parameter">bReverseOrientation</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>,
	<span class="parameter">surfaceEnvelope</span> <span class="keyword">As</span> <span class="identifier">BoundingBoxUV</span>
) <span class="keyword">As</span> <span class="identifier">BRepBuilderSurfaceGeometry</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="identifier">BRepBuilderSurfaceGeometry</span>^ <span class="identifier">CreateNURBSSurface</span>(
	<span class="identifier">int</span> <span class="parameter">degreeU</span>, 
	<span class="identifier">int</span> <span class="parameter">degreeV</span>, 
	<span class="identifier">IList</span>&lt;<span class="identifier">double</span>&gt;^ <span class="parameter">knotsU</span>, 
	<span class="identifier">IList</span>&lt;<span class="identifier">double</span>&gt;^ <span class="parameter">knotsV</span>, 
	<span class="identifier">IList</span>&lt;<span class="identifier">XYZ</span>^&gt;^ <span class="parameter">controlPoints</span>, 
	<span class="identifier">IList</span>&lt;<span class="identifier">double</span>&gt;^ <span class="parameter">weights</span>, 
	<span class="identifier">bool</span> <span class="parameter">bReverseOrientation</span>, 
	<span class="identifier">BoundingBoxUV</span>^ <span class="parameter">surfaceEnvelope</span>
)</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">CreateNURBSSurface</span> : 
        <span class="parameter">degreeU</span> : <span class="identifier">int</span> * 
        <span class="parameter">degreeV</span> : <span class="identifier">int</span> * 
        <span class="parameter">knotsU</span> : <span class="identifier">IList</span>&lt;<span class="identifier">float</span>&gt; * 
        <span class="parameter">knotsV</span> : <span class="identifier">IList</span>&lt;<span class="identifier">float</span>&gt; * 
        <span class="parameter">controlPoints</span> : <span class="identifier">IList</span>&lt;<span class="identifier">XYZ</span>&gt; * 
        <span class="parameter">weights</span> : <span class="identifier">IList</span>&lt;<span class="identifier">float</span>&gt; * 
        <span class="parameter">bReverseOrientation</span> : <span class="identifier">bool</span> * 
        <span class="parameter">surfaceEnvelope</span> : <span class="identifier">BoundingBoxUV</span> <span class="keyword">-&gt;</span> <span class="identifier">BRepBuilderSurfaceGeometry</span> </pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">degreeU</span>  <a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noopener noreferrer">Int32</a></dt><dd>
   The degree of the spline in the u-direction; must be positive.
</dd><dt class="has-text-weight-normal"><span class="parameter">degreeV</span>  <a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noopener noreferrer">Int32</a></dt><dd>
   The degree of the spline in the v-direction; must be positive.
</dd><dt class="has-text-weight-normal"><span class="parameter">knotsU</span>  <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1" target="_blank" rel="noopener noreferrer">IList</a><span id="LST16B5A691_9" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a><span id="LST16B5A691_10" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>
   Knot values in the u-direction.
   The number of knots in the u-direction must be at least 2 * (degreeU + 1).
</dd><dt class="has-text-weight-normal"><span class="parameter">knotsV</span>  <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1" target="_blank" rel="noopener noreferrer">IList</a><span id="LST16B5A691_11" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a><span id="LST16B5A691_12" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>
   Knot values in the v-direction.
   The number of knots in the v-direction must be at least 2 * (degreeV + 1).
</dd><dt class="has-text-weight-normal"><span class="parameter">controlPoints</span>  <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1" target="_blank" rel="noopener noreferrer">IList</a><span id="LST16B5A691_13" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">XYZ</a><span id="LST16B5A691_14" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>
   One dimensional array of points representing the two dimensional net of control points
   of the NURBS surface in u and v directions.
   <p>
   The total number of control points must equal numControlPtsU times numControlPtsV,
   where numControlPtsU and numControlPtsV are the numbers of control points in u and v directions,
   and they must satisfy the following conditions:
   <ul><li> numControlPtsU = number of knots in u - degreeU - 1. </li><li> numControlPtsV = number of knots in v - degreeV - 1. </li></ul>
   The convention for 2d (idxU, idxV) to 1d (idx) conversion of array indexes: idxV first.
   That is, idxU is outer loop and idxV is inner loop. In other words,
   idx = idxU * numControlPtsV + idxV.
   </p></dd><dt class="has-text-weight-normal"><span class="parameter">weights</span>  <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1" target="_blank" rel="noopener noreferrer">IList</a><span id="LST16B5A691_15" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a><span id="LST16B5A691_16" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>
   Array of weights assigned to the control points.
   The number of weights must equal the number of control points.
   All weights should be greater than zero.
</dd><dt class="has-text-weight-normal"><span class="parameter">bReverseOrientation</span>  <a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noopener noreferrer">Boolean</a></dt><dd>
   If true, the surface's orientation is opposite to the canonical parametric orientation, otherwise it is the same.
   The canonical parametric orientation is a counter-clockwise sense of rotation in the uv-parameter plane.
   Extrinsically, the oriented normal vector for the canonical parametric orientation points in the direction of
   the cross product dS/du x dS/dv, which S(u, v) is the parameterized surface.
</dd><dt class="has-text-weight-normal"><span class="parameter">surfaceEnvelope</span>  <a href="e38a0145-4267-0b3f-0718-adb14e34c94e.htm">BoundingBoxUV</a></dt><dd>
   Envelope of the surface in the uv parametric domain. Defines the domain of interest for the created surface.
   This is typically used to identify the domain of the face that references the surface in question.
   Expected to either be null or define a valid domain.
</dd></dl><h4>Return Value</h4><a href="c21d4101-cc15-1990-ee9f-994b487bf95d.htm">BRepBuilderSurfaceGeometry</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDKC')" onkeypress="SectionExpandCollapse_CheckKey('IDKC', event)" tabindex="0"><img id="IDKCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="IDKCSection" class="collapsibleSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">ArgumentException</a></td><td>
   The U-degree value must be at least 1.
   -or-
   The V-degree value must be at least 1.
   -or-
   The number of knots in the U direction must be at least 2 times the U-degree plus 1.
   -or-
   The number of knots in the V direction must be at least 2 times the V-degree plus 1.
   -or-
   The number of control points must equal (number of U-knots - U-degree - 1) * (number of V-knots - V-degree - 1).
   -or-
   The number of weights must be the same as the number of control points and all weights must be positive or all zero.
   -or-
   The input data does not define a valid Nurbs surface.
</td></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">ArgumentNullException</a></td><td>
   A non-optional argument was null
</td></tr><tr><td><a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">InvalidOperationException</a></td><td>
   The Nurbs surface could not be converted for use in Revit. It may have C2-discontinuities or be too large.
</td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection"><ul><li>A rational polynomial is a quotient of two polynomials; this includes a polynomial,
   which can be thought of as a quotient with denominator equal to 1.
   If all the weights are equal, then the NURBS surface will be a piecewise polynomial surface.</li><li>This class does not handle periodic Nurbs surfaces.</li></ul></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="c21d4101-cc15-1990-ee9f-994b487bf95d.htm">BRepBuilderSurfaceGeometry Class</a></div><div><a href="a6dd0238-333e-9155-6b1b-de5462b223d7.htm">CreateNURBSSurface Overload</a></div><div><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div>
        </div></body></html>
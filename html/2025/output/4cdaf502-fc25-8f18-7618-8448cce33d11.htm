<html><head><title>IUpdater Interface</title><meta name="Title" content="IUpdater Interface" /><meta name="Microsoft.Help.Id" content="T:Autodesk.Revit.DB.IUpdater" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="Autodesk.Revit.DB.IUpdater interface" /><meta name="System.Keywords" content="IUpdater interface" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.IUpdater" /><meta name="Microsoft.Help.F1" content="IUpdater" /><meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="4cdaf502-fc25-8f18-7618-8448cce33d11" /><meta name="guid" content="4cdaf502-fc25-8f18-7618-8448cce33d11" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="The interface used to create an updater capable of reacting to changes in the Revit model." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /></head><body onload="SetDefaultLanguage('cs');"><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>IUpdater Interface</h1></td></tr></table><div class="summary">
   The interface used to create an updater capable of reacting to changes in the Revit model.
</div><br /><strong>Namespace:</strong> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="identifier">IUpdater</span></pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Interface</span> <span class="identifier">IUpdater</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface class</span> <span class="identifier">IUpdater</span></pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">type</span> <span class="identifier">IUpdater</span> = <span class="keyword">interface</span> <span class="keyword">end</span></pre></div></div></div></div><p>The <span class="selflink">IUpdater</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDADA')" onkeypress="SectionExpandCollapse_CheckKey('IDADA', event)" tabindex="0"><img id="IDADAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="IDADASection" class="collapsibleSection"><table id="MethodList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="47eb6270-6c7b-f683-49c9-2bc62bd4f5ed.htm">Execute</a></td><td>
   The method that Revit will invoke to perform an update.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="b666e9bf-5ef2-a8c4-0182-2d4296279fac.htm">GetAdditionalInformation</a></td><td>
   Auxiliary text that Revit will use to inform the end user
   when the Updater is not loaded
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="494c6daa-617d-1bc2-b3a8-c4b817240b93.htm">GetChangePriority</a></td><td>
   Identifies the nature of the change the Updater will be performing
   Used to identify order of execution of updaters
   Called once during registration of the updater
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="d00e60eb-6123-3ce3-c158-4a2b4ff0b387.htm">GetUpdaterId</a></td><td>
   Returns globally unique updater id - used to identify the Updater
   Called once during registration of the updater
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="b652394c-031c-6708-63e8-d93bbfb4e014.htm">GetUpdaterName</a></td><td>
   Returns a name that the Updater can be identified by to the user
</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection">
   Implement this interface and register an instance of the derived class with the UpdaterRegistry.
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDC')" onkeypress="SectionExpandCollapse_CheckKey('IDDC', event)" tabindex="0"><img id="IDDCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDDCSection" class="collapsibleSection"><div id="IDADC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDADC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDADC','cs','1','4');return false;">C#</a></div><div id="IDADC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDADC','vb','2','4');return false;">VB</a></div><div id="IDADC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDADC','cpp','3','4');return false;">C++</a></div><div id="IDADC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDADC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDADC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDADC');return false;" title="Copy">Copy</a></div></div><div id="IDADC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> WallUpdaterApplication : Autodesk.Revit.UI.IExternalApplication
{
    <span class="highlight-keyword">public</span> Result OnStartup(UIControlledApplication application)
    {
        <span class="highlight-comment">// Register wall updater with Revit</span>
        WallUpdater updater = <span class="highlight-keyword">new</span> WallUpdater(application.ActiveAddInId);
        UpdaterRegistry.RegisterUpdater(updater);

        <span class="highlight-comment">// Change Scope = any Wall element</span>
        ElementClassFilter wallFilter = <span class="highlight-keyword">new</span> ElementClassFilter(<span class="highlight-keyword">typeof</span>(Wall));

        <span class="highlight-comment">// Change type = element addition</span>
        UpdaterRegistry.AddTrigger(updater.GetUpdaterId(), wallFilter,
                                    Element.GetChangeTypeElementAddition());
        <span class="highlight-keyword">return</span> Result.Succeeded;
    }

    <span class="highlight-keyword">public</span> Result OnShutdown(UIControlledApplication application)
    {
        WallUpdater updater = <span class="highlight-keyword">new</span> WallUpdater(application.ActiveAddInId);
        UpdaterRegistry.UnregisterUpdater(updater.GetUpdaterId());
        <span class="highlight-keyword">return</span> Result.Succeeded;
    }
}

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> WallUpdater : IUpdater
{
    <span class="highlight-keyword">static</span> AddInId m_appId;
    <span class="highlight-keyword">static</span> UpdaterId m_updaterId;
    WallType m_wallType = <span class="highlight-keyword">null</span>;

    <span class="highlight-comment">// constructor takes the AddInId for the add-in associated with this updater</span>
    <span class="highlight-keyword">public</span> WallUpdater(AddInId id)
    {
        m_appId = id;
        m_updaterId = <span class="highlight-keyword">new</span> UpdaterId(m_appId, <span class="highlight-keyword">new</span> Guid(<span class="highlight-literal">"FBFBF6B2-4C06-42d4-97C1-D1B4EB593EFF"</span>));
    }

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> Execute(UpdaterData data)
    {
        Document doc = data.GetDocument();

        <span class="highlight-comment">// Cache the wall type</span>
        <span class="highlight-keyword">if</span> (m_wallType == <span class="highlight-keyword">null</span>)
        {
            FilteredElementCollector collector = <span class="highlight-keyword">new</span> FilteredElementCollector(doc);
            collector.OfClass(<span class="highlight-keyword">typeof</span>(WallType));
            <span class="highlight-keyword">var</span> wallTypes = <span class="highlight-keyword">from</span> element <span class="highlight-keyword">in</span> collector
                            <span class="highlight-keyword">where</span>
                                element.Name == <span class="highlight-literal">"Exterior - Brick on CMU"</span>
                            <span class="highlight-keyword">select</span> element;
            <span class="highlight-keyword">if</span> (wallTypes.Count&lt;Element&gt;() &gt; <span class="highlight-number">0</span>)
            {
                m_wallType = wallTypes.Cast&lt;WallType&gt;().ElementAt&lt;WallType&gt;(<span class="highlight-number">0</span>);
            }
        }

        <span class="highlight-keyword">if</span> (m_wallType != <span class="highlight-keyword">null</span>)
        {
            <span class="highlight-comment">// Change the wall to the cached wall type.</span>
            <span class="highlight-keyword">foreach</span> (ElementId addedElemId <span class="highlight-keyword">in</span> data.GetAddedElementIds())
            {
                Wall wall = doc.GetElement(addedElemId) <span class="highlight-keyword">as</span> Wall;
                <span class="highlight-keyword">if</span> (wall != <span class="highlight-keyword">null</span>)
                {
                    wall.WallType = m_wallType;
                }
            }
        }
    }

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">string</span> GetAdditionalInformation()
    {
        <span class="highlight-keyword">return</span> <span class="highlight-literal">"Wall type updater example: updates all newly created walls to a special wall"</span>;
    }

    <span class="highlight-keyword">public</span> ChangePriority GetChangePriority()
    {
        <span class="highlight-keyword">return</span> ChangePriority.FloorsRoofsStructuralWalls;
    }

    <span class="highlight-keyword">public</span> UpdaterId GetUpdaterId()
    {
        <span class="highlight-keyword">return</span> m_updaterId;
    }

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">string</span> GetUpdaterName()
    {
        <span class="highlight-keyword">return</span> <span class="highlight-literal">"Wall Type Updater"</span>;
    }
}</pre></div><div id="IDADC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> WallUpdaterApplication
    <span class="highlight-keyword">Implements</span> Autodesk.Revit.UI.IExternalApplication
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> OnStartup(application <span class="highlight-keyword">As</span> UIControlledApplication) <span class="highlight-keyword">As</span> Autodesk.Revit.UI.Result <span class="highlight-keyword">Implements</span> IExternalApplication.OnStartup
        <span class="highlight-comment">' Register wall updater with Revit</span>
        <span class="highlight-keyword">Dim</span> updater <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> WallUpdater(application.ActiveAddInId)
        UpdaterRegistry.RegisterUpdater(updater)

        <span class="highlight-comment">' Change Scope = any Wall element</span>
        <span class="highlight-keyword">Dim</span> wallFilter <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> ElementClassFilter(<span class="highlight-keyword">GetType</span>(Wall))

        <span class="highlight-comment">' Change type = element addition</span>
        UpdaterRegistry.AddTrigger(updater.GetUpdaterId(), wallFilter, Element.GetChangeTypeElementAddition())
        <span class="highlight-keyword">Return</span> Result.Succeeded
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>

    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> OnShutdown(application <span class="highlight-keyword">As</span> UIControlledApplication) <span class="highlight-keyword">As</span> Autodesk.Revit.UI.Result <span class="highlight-keyword">Implements</span> IExternalApplication.OnShutdown
        <span class="highlight-keyword">Dim</span> updater <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> WallUpdater(application.ActiveAddInId)
        UpdaterRegistry.UnregisterUpdater(updater.GetUpdaterId())
        <span class="highlight-keyword">Return</span> Result.Succeeded
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span>

<span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> WallUpdater
    <span class="highlight-keyword">Implements</span> IUpdater
    <span class="highlight-keyword">Shared</span> m_appId <span class="highlight-keyword">As</span> AddInId
    <span class="highlight-keyword">Shared</span> m_updaterId <span class="highlight-keyword">As</span> UpdaterId
    <span class="highlight-keyword">Private</span> m_wallType <span class="highlight-keyword">As</span> WallType = <span class="highlight-keyword">Nothing</span>

    <span class="highlight-comment">' constructor takes the AddInId for the add-in associated with this updater</span>
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> <span class="highlight-keyword">New</span>(id <span class="highlight-keyword">As</span> AddInId)
        m_appId = id
        m_updaterId = <span class="highlight-keyword">New</span> UpdaterId(m_appId, <span class="highlight-keyword">New</span> Guid(<span class="highlight-literal">"FBFBF6B2-4C06-42d4-97C1-D1B4EB593EFF"</span>))
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>

    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> Execute(data <span class="highlight-keyword">As</span> UpdaterData) <span class="highlight-keyword">Implements</span> IUpdater.Execute
        <span class="highlight-keyword">Dim</span> doc <span class="highlight-keyword">As</span> Document = data.GetDocument()

        <span class="highlight-comment">' Cache the wall type</span>
        <span class="highlight-keyword">If</span> m_wallType <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
            <span class="highlight-keyword">Dim</span> collector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(doc)
            collector.OfClass(<span class="highlight-keyword">GetType</span>(WallType))
            <span class="highlight-keyword">Dim</span> wallTypes <span class="highlight-keyword">As</span> System.Collections.Generic.IEnumerable(<span class="highlight-keyword">Of</span> Autodesk.Revit.DB.Element)
            wallTypes = From element <span class="highlight-keyword">In</span> collector _
             Where element.Name = <span class="highlight-literal">"Exterior - Brick on CMU"</span> _
             <span class="highlight-keyword">Select</span> element
            <span class="highlight-keyword">If</span> wallTypes.Count() &gt; <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
                m_wallType = wallTypes.Cast(<span class="highlight-keyword">Of</span> WallType)().ElementAt(<span class="highlight-number">0</span>)
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

        <span class="highlight-keyword">If</span> m_wallType <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
            <span class="highlight-comment">' Change the wall to the cached wall type.</span>
            <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> addedElemId <span class="highlight-keyword">As</span> ElementId <span class="highlight-keyword">In</span> data.GetAddedElementIds()
                <span class="highlight-keyword">Dim</span> wall <span class="highlight-keyword">As</span> Wall = <span class="highlight-keyword">TryCast</span>(doc.GetElement(addedElemId), Wall)
                <span class="highlight-keyword">If</span> wall <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
                    wall.WallType = m_wallType
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
            <span class="highlight-keyword">Next</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>

    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> GetAdditionalInformation() <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> <span class="highlight-keyword">Implements</span> IUpdater.GetAdditionalInformation
        <span class="highlight-keyword">Return</span> <span class="highlight-literal">"Wall type updater example: updates all newly created walls to a special wall"</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>

    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> GetChangePriority() <span class="highlight-keyword">As</span> ChangePriority <span class="highlight-keyword">Implements</span> IUpdater.GetChangePriority
        <span class="highlight-keyword">Return</span> ChangePriority.FloorsRoofsStructuralWalls
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>

    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> GetUpdaterId() <span class="highlight-keyword">As</span> UpdaterId <span class="highlight-keyword">Implements</span> IUpdater.GetUpdaterId
        <span class="highlight-keyword">Return</span> m_updaterId
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>

    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> GetUpdaterName() <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> <span class="highlight-keyword">Implements</span> IUpdater.GetUpdaterName
        <span class="highlight-keyword">Return</span> <span class="highlight-literal">"Wall Type Updater"</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></pre></div><div id="IDADC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDADC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div>
        </div></body></html>
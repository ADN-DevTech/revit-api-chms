<html><head><title>TextNote.Create(Document, ElementId, XYZ, Double, String, TextNoteOptions) Method</title><meta name="Title" content="Create(Document, ElementId, XYZ, Double, String, TextNoteOptions) Method" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.DB.TextNote.Create(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.ElementId,Autodesk.Revit.DB.XYZ,System.Double,System.String,Autodesk.Revit.DB.TextNoteOptions)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="f97214ec-08fc-0ff8-7bc8-047231501523" /><meta name="guid" content="f97214ec-08fc-0ff8-7bc8-047231501523" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="Creates a new line-wrapping text note element of the given width and properties." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /></head><body onload="SetDefaultLanguage('cs');"><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Text<wbr />Note<span id="LST1ADBF3A7_0" data-languageSpecificText="cpp=::|nu=."></span>Create(Document, Element<wbr />Id, XYZ, Double, String, Text<wbr />Note<wbr />Options) Method</h1></td></tr></table><div class="summary">
   Creates a new line-wrapping text note element of the given width and properties.
</div><br /><strong>Namespace:</strong> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">TextNote</span> <span class="identifier">Create</span>(
	<span class="identifier">Document</span> <span class="parameter">document</span>,
	<span class="identifier">ElementId</span> <span class="parameter">viewId</span>,
	<span class="identifier">XYZ</span> <span class="parameter">position</span>,
	<span class="identifier">double</span> <span class="parameter">width</span>,
	<span class="identifier">string</span> <span class="parameter">text</span>,
	<span class="identifier">TextNoteOptions</span> <span class="parameter">options</span>
)</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">Create</span> ( 
	<span class="parameter">document</span> <span class="keyword">As</span> <span class="identifier">Document</span>,
	<span class="parameter">viewId</span> <span class="keyword">As</span> <span class="identifier">ElementId</span>,
	<span class="parameter">position</span> <span class="keyword">As</span> <span class="identifier">XYZ</span>,
	<span class="parameter">width</span> <span class="keyword">As</span> <span class="identifier">Double</span>,
	<span class="parameter">text</span> <span class="keyword">As</span> <span class="identifier">String</span>,
	<span class="parameter">options</span> <span class="keyword">As</span> <span class="identifier">TextNoteOptions</span>
) <span class="keyword">As</span> <span class="identifier">TextNote</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="identifier">TextNote</span>^ <span class="identifier">Create</span>(
	<span class="identifier">Document</span>^ <span class="parameter">document</span>, 
	<span class="identifier">ElementId</span>^ <span class="parameter">viewId</span>, 
	<span class="identifier">XYZ</span>^ <span class="parameter">position</span>, 
	<span class="identifier">double</span> <span class="parameter">width</span>, 
	<span class="identifier">String</span>^ <span class="parameter">text</span>, 
	<span class="identifier">TextNoteOptions</span>^ <span class="parameter">options</span>
)</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">Create</span> : 
        <span class="parameter">document</span> : <span class="identifier">Document</span> * 
        <span class="parameter">viewId</span> : <span class="identifier">ElementId</span> * 
        <span class="parameter">position</span> : <span class="identifier">XYZ</span> * 
        <span class="parameter">width</span> : <span class="identifier">float</span> * 
        <span class="parameter">text</span> : <span class="identifier">string</span> * 
        <span class="parameter">options</span> : <span class="identifier">TextNoteOptions</span> <span class="keyword">-&gt;</span> <span class="identifier">TextNote</span> </pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">document</span>  <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a></dt><dd>
   A valid Revit document that is currently modifiable (i.e. with an open transaction).
</dd><dt class="has-text-weight-normal"><span class="parameter">viewId</span>  <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a></dt><dd>
   Id of the graphic view in which the note is to be created.
</dd><dt class="has-text-weight-normal"><span class="parameter">position</span>  <a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">XYZ</a></dt><dd>
   A model position of the new note.
   <p>Note that the position's relation to the text's bounding box depends on the requested text alignment
   (set via the Options argument). It will be the box' top-left corner for a left-aligned text,
   the top-right corner for a right-aligned text, and middle-top point if the text is to be centered.</p></dd><dt class="has-text-weight-normal"><span class="parameter">width</span>  <a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a></dt><dd>
   Width [ft] of the text in paper space (i.e. as it is measured when printed.)
   If a line of text is longer than the given specified Width, the text will be automatically wrapped.
   If a a zero Width is supplied then this method will create an unwrapped text note element.
</dd><dt class="has-text-weight-normal"><span class="parameter">text</span>  <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a></dt><dd>
   Text to populate the text note with.
</dd><dt class="has-text-weight-normal"><span class="parameter">options</span>  <a href="b0fd6ef8-a0ef-9cf4-5bc2-8cd65f81f648.htm">TextNoteOptions</a></dt><dd>
   Options to control behavior and appearance of the text note.
</dd></dl><h4>Return Value</h4><a href="ecc1ce1c-d754-96d0-35db-ca2d1d84c57c.htm">TextNote</a><br />
   The newly created text note.
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDJC')" onkeypress="SectionExpandCollapse_CheckKey('IDJC', event)" tabindex="0"><img id="IDJCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="IDJCSection" class="collapsibleSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">ArgumentException</a></td><td>
   The document is a family that cannot contain text notes.
   -or-
   The viewId does not represent a valid graphic view element in the given document.
   -or-
   The options structure does not contain a valid text type to use for a new text note in the given document.
   -or-
   A valid point must not be father then 10 miles (approx. 16 km) from the origin.
   -or-
   The given width is not valid. A valid value must be within the range
   returned by static methods GetMinimumWidthLimit and GetMaximumWidthLimit.
</td></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">ArgumentNullException</a></td><td>
   A non-optional argument was null
</td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection"><p>As a view-specific element the text note will be visible only in the specified view.</p><p>The new text note will be created using the give text type, which defines the style.
   The currently default style can be obtained from the Document.GetDefaultElementTypeId method.</p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDMC')" onkeypress="SectionExpandCollapse_CheckKey('IDMC', event)" tabindex="0"><img id="IDMCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDMCSection" class="collapsibleSection"><div id="IDAMC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAMC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAMC','cs','1','4');return false;">C#</a></div><div id="IDAMC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAMC','vb','2','4');return false;">VB</a></div><div id="IDAMC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAMC','cpp','3','4');return false;">C++</a></div><div id="IDAMC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAMC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAMC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAMC');return false;" title="Copy">Copy</a></div></div><div id="IDAMC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-preprocessor">#region</span> Autodesk.Revit.DB.TextElement.GetMinimumAllowedWidth(Autodesk.Revit.DB.Document, Autodesk.Revit.DB.ElementId)
<span class="highlight-keyword">public</span> TextNote AddNewTextNote(UIDocument uiDoc)
{
    Document doc = uiDoc.Document;
    XYZ textLoc = uiDoc.Selection.PickPoint(<span class="highlight-literal">"Pick a point for sample text."</span>);
    ElementId defaultTextTypeId = doc.GetDefaultElementTypeId(ElementTypeGroup.TextNoteType);
    <span class="highlight-keyword">double</span> noteWidth = .<span class="highlight-number">2</span>;

    <span class="highlight-comment">// make sure note width works for the text type</span>
    <span class="highlight-keyword">double</span> minWidth = TextNote.GetMinimumAllowedWidth(doc, defaultTextTypeId);
    <span class="highlight-keyword">double</span> maxWidth = TextNote.GetMaximumAllowedWidth(doc, defaultTextTypeId);
    <span class="highlight-keyword">if</span> (noteWidth &lt; minWidth)
    {
        noteWidth = minWidth;
    }
    <span class="highlight-keyword">else</span> <span class="highlight-keyword">if</span> (noteWidth &gt; maxWidth)
    {
        noteWidth = maxWidth;
    }

    TextNoteOptions opts = <span class="highlight-keyword">new</span> TextNoteOptions(defaultTextTypeId);
    opts.HorizontalAlignment = HorizontalTextAlignment.Left;
    opts.Rotation = Math.PI / <span class="highlight-number">4</span>;

    TextNote textNote = TextNote.Create(doc, doc.ActiveView.Id, textLoc, noteWidth, <span class="highlight-literal">"New sample text"</span>, opts);

    <span class="highlight-keyword">return</span> textNote;
}
<span class="highlight-preprocessor">#endregion</span></pre></div><div id="IDAMC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-preprocessor">#Region</span> <span class="highlight-literal">"Autodesk.Revit.DB.TextElement.GetMinimumAllowedWidth(Autodesk.Revit.DB.Document, Autodesk.Revit.DB.ElementId)"</span>
        <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> AddNewTextNote(uiDoc <span class="highlight-keyword">As</span> UIDocument) <span class="highlight-keyword">As</span> TextNote
            <span class="highlight-keyword">Dim</span> doc <span class="highlight-keyword">As</span> Document = uiDoc.Document
            <span class="highlight-keyword">Dim</span> textLoc <span class="highlight-keyword">As</span> XYZ = uiDoc.Selection.PickPoint(<span class="highlight-literal">"Pick a point for sample text."</span>)
            <span class="highlight-keyword">Dim</span> defaultTextTypeId <span class="highlight-keyword">As</span> ElementId = doc.GetDefaultElementTypeId(ElementTypeGroup.TextNoteType)
            <span class="highlight-keyword">Dim</span> noteWidth <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = <span class="highlight-number">0.2</span>

            <span class="highlight-comment">' make sure note width works for the text type</span>
            <span class="highlight-keyword">Dim</span> minWidth <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = TextNote.GetMinimumAllowedWidth(doc, defaultTextTypeId)
            <span class="highlight-keyword">Dim</span> maxWidth <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = TextNote.GetMaximumAllowedWidth(doc, defaultTextTypeId)
            <span class="highlight-keyword">If</span> noteWidth &lt; minWidth <span class="highlight-keyword">Then</span>
                noteWidth = minWidth
            <span class="highlight-keyword">ElseIf</span> noteWidth &gt; maxWidth <span class="highlight-keyword">Then</span>
                noteWidth = maxWidth
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

            <span class="highlight-keyword">Dim</span> opts <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> TextNoteOptions(defaultTextTypeId)
            opts.HorizontalAlignment = HorizontalTextAlignment.Left
            opts.Rotation = Math.PI / <span class="highlight-number">4</span>

            <span class="highlight-keyword">Dim</span> textNote__1 <span class="highlight-keyword">As</span> TextNote = TextNote.Create(doc, doc.ActiveView.Id, textLoc, noteWidth, <span class="highlight-literal">"New sample text"</span>, opts)

            <span class="highlight-keyword">Return</span> textNote__1
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
<span class="highlight-preprocessor">#End Region</span></pre></div><div id="IDAMC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDAMC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="ecc1ce1c-d754-96d0-35db-ca2d1d84c57c.htm">TextNote Class</a></div><div><a href="7dddec5f-15a3-f835-85ab-0ff677b564db.htm">Create Overload</a></div><div><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div>
        </div></body></html>
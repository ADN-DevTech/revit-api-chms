<html><head><title>ExporterIFCUtils.IsCurveLoopConvexWithOpenings Method</title><meta name="Title" content="IsCurveLoopConvexWithOpenings Method" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.DB.IFC.ExporterIFCUtils.IsCurveLoopConvexWithOpenings(Autodesk.Revit.DB.CurveLoop,Autodesk.Revit.DB.Wall,Autodesk.Revit.DB.IFC.IFCRange,System.Boolean@)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="ExporterIFCUtils.IsCurveLoopConvexWithOpenings method" /><meta name="System.Keywords" content="IsCurveLoopConvexWithOpenings method" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.IFC.ExporterIFCUtils.IsCurveLoopConvexWithOpenings" /><meta name="Microsoft.Help.F1" content="ExporterIFCUtils.IsCurveLoopConvexWithOpenings" /><meta name="Microsoft.Help.F1" content="IsCurveLoopConvexWithOpenings" /><meta name="container" content="Autodesk.Revit.DB.IFC" /><meta name="file" content="02698a4b-0fc2-a3cc-2506-70b8f8c2467f" /><meta name="guid" content="02698a4b-0fc2-a3cc-2506-70b8f8c2467f" /><meta name="Description" content="Checks if the region bounded by the input curve loop can be represented as the subtraction of 0 or more convex polygons from a base convex polygon." /></head><body onload="SetDefaultLanguage('cs');"><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Exporter<wbr />IFCUtils<span id="LSTD55B7C97_0" data-languageSpecificText="cpp=::|nu=."></span>Is<wbr />Curve<wbr />Loop<wbr />Convex<wbr />With<wbr />Openings Method</h1></td></tr></table><div class="summary">
   Checks if the region bounded by the input curve loop can be represented as the subtraction of 0 or more convex polygons from a base convex polygon.
</div><br /><strong>Namespace:</strong> <a href="b823fafb-1ba1-896b-4097-142c2817ce74.htm">Autodesk.Revit.DB.IFC</a><br /><strong>Assembly:</strong> RevitAPIIFC (in RevitAPIIFC.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">bool</span> <span class="identifier">IsCurveLoopConvexWithOpenings</span>(
	<span class="identifier">CurveLoop</span> <span class="parameter">inputCurveLoop</span>,
	<span class="identifier">Wall</span> <span class="parameter">wall</span>,
	<span class="identifier">IFCRange</span> <span class="parameter">range</span>,
	<span class="keyword">out</span> <span class="identifier">bool</span> <span class="parameter">loopIsDegenerate</span>
)</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">IsCurveLoopConvexWithOpenings</span> ( 
	<span class="parameter">inputCurveLoop</span> <span class="keyword">As</span> <span class="identifier">CurveLoop</span>,
	<span class="parameter">wall</span> <span class="keyword">As</span> <span class="identifier">Wall</span>,
	<span class="parameter">range</span> <span class="keyword">As</span> <span class="identifier">IFCRange</span>,
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">loopIsDegenerate</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>
) <span class="keyword">As</span> <span class="identifier">Boolean</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="identifier">bool</span> <span class="identifier">IsCurveLoopConvexWithOpenings</span>(
	<span class="identifier">CurveLoop</span>^ <span class="parameter">inputCurveLoop</span>, 
	<span class="identifier">Wall</span>^ <span class="parameter">wall</span>, 
	<span class="identifier">IFCRange</span>^ <span class="parameter">range</span>, 
	[<span class="identifier">OutAttribute</span>] <span class="identifier">bool</span>% <span class="parameter">loopIsDegenerate</span>
)</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">IsCurveLoopConvexWithOpenings</span> : 
        <span class="parameter">inputCurveLoop</span> : <span class="identifier">CurveLoop</span> * 
        <span class="parameter">wall</span> : <span class="identifier">Wall</span> * 
        <span class="parameter">range</span> : <span class="identifier">IFCRange</span> * 
        <span class="parameter">loopIsDegenerate</span> : <span class="identifier">bool</span> <span class="keyword">byref</span> <span class="keyword">-&gt;</span> <span class="identifier">bool</span> </pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">inputCurveLoop</span>  <a href="84824924-cb89-9e20-de6e-3461f429dfd6.htm">CurveLoop</a></dt><dd>
   The input curve loop.  It is intended that this curve loop have been obtained from the elevation profile of a wall.
</dd><dt class="has-text-weight-normal"><span class="parameter">wall</span>  <a href="b5891733-c602-12df-beab-da414b58d608.htm">Wall</a></dt><dd>
   The wall from which the curve loop was obtained.
</dd><dt class="has-text-weight-normal"><span class="parameter">range</span>  <a href="dd18e556-a0d8-7bbb-1522-518d8a82736f.htm">IFCRange</a></dt><dd>
   The range extents of the wall.
</dd><dt class="has-text-weight-normal"><span class="parameter">loopIsDegenerate</span>  <a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noopener noreferrer">Boolean</a><span id="LSTD55B7C97_1" data-languageSpecificText="cpp=%"></span></dt><dd>
   If the function returns false but this returns true, the loop could be obtained but was degenerate.  Thus there is no extrusion
   that can be produced.
</dd></dl><h4>Return Value</h4><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noopener noreferrer">Boolean</a><br />
   True if the region can be represented by a boolean combination of polygons, false otherwise.
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDHC')" onkeypress="SectionExpandCollapse_CheckKey('IDHC', event)" tabindex="0"><img id="IDHCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="IDHCSection" class="collapsibleSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">ArgumentNullException</a></td><td>
   A non-optional argument was null
</td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection">
   This function is intended to be used to determine if the geometry of a wall with an elevation profile can be successfully represented
   as a vertical extrusion with one or more openings removed.
   If this function is to return true, the subtracting polygons must each have at least one edge coincident with the base convex polygon.
   Before the check is performed, this input curve will be trimmed by the range extents of the wall, if any.
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="e0e78d67-739c-0cd6-9e3d-359e42758c93.htm">ExporterIFCUtils Class</a></div><div><a href="b823fafb-1ba1-896b-4097-142c2817ce74.htm">Autodesk.Revit.DB.IFC Namespace</a></div></div></div></div>
        </div></body></html>
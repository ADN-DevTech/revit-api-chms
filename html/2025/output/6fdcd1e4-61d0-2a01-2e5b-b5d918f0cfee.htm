<html><head><title>ConnectorElement.CreatePipeConnector(Document, PipeSystemType, Reference) Method</title><meta name="Title" content="CreatePipeConnector(Document, PipeSystemType, Reference) Method" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.DB.ConnectorElement.CreatePipeConnector(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.Plumbing.PipeSystemType,Autodesk.Revit.DB.Reference)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="6fdcd1e4-61d0-2a01-2e5b-b5d918f0cfee" /><meta name="guid" content="6fdcd1e4-61d0-2a01-2e5b-b5d918f0cfee" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="Create a new pipe ConnectorElement." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /></head><body onload="SetDefaultLanguage('cs');"><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Connector<wbr />Element<span id="LST4812D499_0" data-languageSpecificText="cpp=::|nu=."></span>Create<wbr />Pipe<wbr />Connector(Document, Pipe<wbr />System<wbr />Type, Reference) Method</h1></td></tr></table><div class="summary">
   Create a new pipe ConnectorElement.
</div><br /><strong>Namespace:</strong> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">ConnectorElement</span> <span class="identifier">CreatePipeConnector</span>(
	<span class="identifier">Document</span> <span class="parameter">document</span>,
	<span class="identifier">PipeSystemType</span> <span class="parameter">pipeSystemType</span>,
	<span class="identifier">Reference</span> <span class="parameter">planarFace</span>
)</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">CreatePipeConnector</span> ( 
	<span class="parameter">document</span> <span class="keyword">As</span> <span class="identifier">Document</span>,
	<span class="parameter">pipeSystemType</span> <span class="keyword">As</span> <span class="identifier">PipeSystemType</span>,
	<span class="parameter">planarFace</span> <span class="keyword">As</span> <span class="identifier">Reference</span>
) <span class="keyword">As</span> <span class="identifier">ConnectorElement</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="identifier">ConnectorElement</span>^ <span class="identifier">CreatePipeConnector</span>(
	<span class="identifier">Document</span>^ <span class="parameter">document</span>, 
	<span class="identifier">PipeSystemType</span> <span class="parameter">pipeSystemType</span>, 
	<span class="identifier">Reference</span>^ <span class="parameter">planarFace</span>
)</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">CreatePipeConnector</span> : 
        <span class="parameter">document</span> : <span class="identifier">Document</span> * 
        <span class="parameter">pipeSystemType</span> : <span class="identifier">PipeSystemType</span> * 
        <span class="parameter">planarFace</span> : <span class="identifier">Reference</span> <span class="keyword">-&gt;</span> <span class="identifier">ConnectorElement</span> </pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">document</span>  <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a></dt><dd>
   The document to add the connector to.
</dd><dt class="has-text-weight-normal"><span class="parameter">pipeSystemType</span>  <a href="24165d09-9267-54b7-3e32-6405d1343c2e.htm">PipeSystemType</a></dt><dd>
   The PipeSystemType of the connector.
</dd><dt class="has-text-weight-normal"><span class="parameter">planarFace</span>  <a href="d28155ae-817b-1f31-9c3f-c9c6a28acc0d.htm">Reference</a></dt><dd>
   The planar face to place the connector on.
</dd></dl><h4>Return Value</h4><a href="cd7d7579-1058-e8ca-d55a-c3a914843667.htm">ConnectorElement</a><br />
   The pipe ConnectorElement.
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDGC')" onkeypress="SectionExpandCollapse_CheckKey('IDGC', event)" tabindex="0"><img id="IDGCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="IDGCSection" class="collapsibleSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">ArgumentException</a></td><td>
   The reference is not a planar face.
   -or-
   document is not a family document.
</td></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">ArgumentNullException</a></td><td>
   A non-optional argument was null
</td></tr><tr><td><a href="60f148c9-ece0-a6bb-4e12-bb4a9c8c8a24.htm">ArgumentOutOfRangeException</a></td><td>
   A value passed for an enumeration argument is not a member of that enumeration
</td></tr><tr><td><a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">InvalidOperationException</a></td><td>
   Connector creation is not allowed in this family.
</td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection">
   Regenerates the document.
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDLC')" onkeypress="SectionExpandCollapse_CheckKey('IDLC', event)" tabindex="0"><img id="IDLCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDLCSection" class="collapsibleSection"><div id="IDALC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDALC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDALC','cs','1','4');return false;">C#</a></div><div id="IDALC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDALC','vb','2','4');return false;">VB</a></div><div id="IDALC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDALC','cpp','3','4');return false;">C++</a></div><div id="IDALC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDALC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDALC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDALC');return false;" title="Copy">Copy</a></div></div><div id="IDALC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> CreatePipeConnectors(UIDocument uiDocument, Extrusion extrusion)
{
    <span class="highlight-comment">// get the faces of the extrusion</span>
    Options geoOptions = uiDocument.Document.Application.Create.NewGeometryOptions();
    geoOptions.View = uiDocument.Document.ActiveView;
    geoOptions.ComputeReferences = <span class="highlight-keyword">true</span>;

    List&lt;PlanarFace&gt; planarFaces = <span class="highlight-keyword">new</span> List&lt;PlanarFace&gt;();
    Autodesk.Revit.DB.GeometryElement geoElement = extrusion.get_Geometry(geoOptions);
    <span class="highlight-keyword">foreach</span> (GeometryObject geoObject <span class="highlight-keyword">in</span> geoElement)
    {
        Solid geoSolid = geoObject <span class="highlight-keyword">as</span> Solid;
        <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> != geoSolid)
        {
            <span class="highlight-keyword">foreach</span> (Face geoFace <span class="highlight-keyword">in</span> geoSolid.Faces)
            {
                <span class="highlight-keyword">if</span> (geoFace <span class="highlight-keyword">is</span> PlanarFace)
                {
                    planarFaces.Add(geoFace <span class="highlight-keyword">as</span> PlanarFace);
                }
            }
        }
    }

    <span class="highlight-keyword">if</span> (planarFaces.Count &gt; <span class="highlight-number">1</span>)
    {
        <span class="highlight-comment">// Create the Supply Hydronic pipe connector</span>
        <span class="highlight-comment">//PipeConnector connSupply = </span>
        <span class="highlight-comment">//    uiDocument.Document.FamilyCreate.NewPipeConnector(planarFaces[0].Reference, </span>
        <span class="highlight-comment">//                                           PipeSystemType.SupplyHydronic);</span>
        ConnectorElement connSupply =
            ConnectorElement.CreatePipeConnector(uiDocument.Document, PipeSystemType.SupplyHydronic, planarFaces[<span class="highlight-number">0</span>].Reference);
        Parameter param = connSupply.get_Parameter(BuiltInParameter.CONNECTOR_RADIUS);
        param.Set(<span class="highlight-number">1.0</span>); <span class="highlight-comment">// 1' radius</span>
        param = connSupply.get_Parameter(BuiltInParameter.RBS_PIPE_FLOW_DIRECTION_PARAM);
        param.Set(<span class="highlight-number">2</span>);

        <span class="highlight-comment">// Create the Return Hydronic pipe connector</span>
        <span class="highlight-comment">//PipeConnector connReturn =</span>
        <span class="highlight-comment">//    uiDocument.Document.FamilyCreate.NewPipeConnector(planarFaces[1].Reference,</span>
        <span class="highlight-comment">//                                           PipeSystemType.ReturnHydronic);</span>
        ConnectorElement connReturn =
            ConnectorElement.CreatePipeConnector(uiDocument.Document, PipeSystemType.ReturnHydronic, planarFaces[<span class="highlight-number">1</span>].Reference);
        param = connReturn.get_Parameter(BuiltInParameter.CONNECTOR_RADIUS);
        param.Set(<span class="highlight-number">0.5</span>); <span class="highlight-comment">// 6" radius</span>
        param = connReturn.get_Parameter(BuiltInParameter.RBS_PIPE_FLOW_DIRECTION_PARAM);
        param.Set(<span class="highlight-number">1</span>);
    }
}</pre></div><div id="IDALC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> CreatePipeConnectors(uiDocument <span class="highlight-keyword">As</span> UIDocument, extrusion <span class="highlight-keyword">As</span> Extrusion)
    <span class="highlight-comment">' get the faces of the extrusion</span>
    <span class="highlight-keyword">Dim</span> geoOptions <span class="highlight-keyword">As</span> Options = uiDocument.Document.Application.Create.NewGeometryOptions()
    geoOptions.View = uiDocument.Document.ActiveView
    geoOptions.ComputeReferences = <span class="highlight-keyword">True</span>

    <span class="highlight-keyword">Dim</span> planarFaces <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> PlanarFace)()
    <span class="highlight-keyword">Dim</span> geoElement <span class="highlight-keyword">As</span> Autodesk.Revit.DB.GeometryElement = extrusion.Geometry(geoOptions)
    <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> geoObject <span class="highlight-keyword">As</span> GeometryObject <span class="highlight-keyword">In</span> geoElement
        <span class="highlight-keyword">Dim</span> geoSolid <span class="highlight-keyword">As</span> Solid = <span class="highlight-keyword">TryCast</span>(geoObject, Solid)
        <span class="highlight-keyword">If</span> geoSolid <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
            <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> geoFace <span class="highlight-keyword">As</span> Face <span class="highlight-keyword">In</span> geoSolid.Faces
                <span class="highlight-keyword">If</span> <span class="highlight-keyword">TypeOf</span> geoFace <span class="highlight-keyword">Is</span> PlanarFace <span class="highlight-keyword">Then</span>
                    planarFaces.Add(<span class="highlight-keyword">TryCast</span>(geoFace, PlanarFace))
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
            <span class="highlight-keyword">Next</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Next</span>

    <span class="highlight-keyword">If</span> planarFaces.Count &gt; <span class="highlight-number">1</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-comment">' Create the Supply Hydronic pipe connector</span>
        <span class="highlight-comment">'PipeConnector connSupply = </span>
        <span class="highlight-comment">'    uiDocument.Document.FamilyCreate.NewPipeConnector(planarFaces[0].Reference, </span>
        <span class="highlight-comment">'                                           PipeSystemType.SupplyHydronic);</span>
        <span class="highlight-keyword">Dim</span> connSupply <span class="highlight-keyword">As</span> ConnectorElement = ConnectorElement.CreatePipeConnector(uiDocument.Document, PipeSystemType.SupplyHydronic, planarFaces(<span class="highlight-number">0</span>).Reference)
        <span class="highlight-keyword">Dim</span> param <span class="highlight-keyword">As</span> Parameter = connSupply.Parameter(BuiltInParameter.CONNECTOR_RADIUS)
        param.[<span class="highlight-keyword">Set</span>](<span class="highlight-number">1.0</span>)
        <span class="highlight-comment">' 1' radius</span>
        param = connSupply.Parameter(BuiltInParameter.RBS_PIPE_FLOW_DIRECTION_PARAM)
        param.[<span class="highlight-keyword">Set</span>](<span class="highlight-number">2</span>)

        <span class="highlight-comment">' Create the Return Hydronic pipe connector</span>
        <span class="highlight-comment">'PipeConnector connReturn =</span>
        <span class="highlight-comment">'    uiDocument.Document.FamilyCreate.NewPipeConnector(planarFaces[1].Reference,</span>
        <span class="highlight-comment">'                                           PipeSystemType.ReturnHydronic);</span>
        <span class="highlight-keyword">Dim</span> connReturn <span class="highlight-keyword">As</span> ConnectorElement = ConnectorElement.CreatePipeConnector(uiDocument.Document, PipeSystemType.ReturnHydronic, planarFaces(<span class="highlight-number">1</span>).Reference)
        param = connReturn.Parameter(BuiltInParameter.CONNECTOR_RADIUS)
        param.[<span class="highlight-keyword">Set</span>](<span class="highlight-number">0.5</span>)
        <span class="highlight-comment">' 6" radius</span>
        param = connReturn.Parameter(BuiltInParameter.RBS_PIPE_FLOW_DIRECTION_PARAM)
        param.[<span class="highlight-keyword">Set</span>](<span class="highlight-number">1</span>)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div><div id="IDALC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDALC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="cd7d7579-1058-e8ca-d55a-c3a914843667.htm">ConnectorElement Class</a></div><div><a href="c6188202-bd11-204d-de6e-afa1c6799d50.htm">CreatePipeConnector Overload</a></div><div><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div>
        </div></body></html>
<html><head><title>Document.NewAreaBoundaryConditions(Reference, TranslationRotationValue, Double, TranslationRotationValue, Double, TranslationRotationValue, Double) Method</title><meta name="Title" content="NewAreaBoundaryConditions(Reference, TranslationRotationValue, Double, TranslationRotationValue, Double, TranslationRotationValue, Double) Method" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.Creation.Document.NewAreaBoundaryConditions(Autodesk.Revit.DB.Reference,Autodesk.Revit.DB.Structure.TranslationRotationValue,System.Double,Autodesk.Revit.DB.Structure.TranslationRotationValue,System.Double,Autodesk.Revit.DB.Structure.TranslationRotationValue,System.Double)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="container" content="Autodesk.Revit.Creation" /><meta name="file" content="070c2d73-9a6d-3840-b149-b82bb87d4ed3" /><meta name="guid" content="070c2d73-9a6d-3840-b149-b82bb87d4ed3" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="Creates a new Area BoundaryConditions element on a reference." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /></head><body onload="SetDefaultLanguage('cs');"><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Document<span id="LST4C497BAB_0" data-languageSpecificText="cpp=::|nu=."></span>New<wbr />Area<wbr />Boundary<wbr />Conditions(Reference, Translation<wbr />Rotation<wbr />Value, Double, Translation<wbr />Rotation<wbr />Value, Double, Translation<wbr />Rotation<wbr />Value, Double) Method</h1></td></tr></table><div class="summary"> Creates a new Area BoundaryConditions element on a reference. </div><br /><strong>Namespace:</strong> <a href="ded320da-058a-4edd-0418-0582389559a7.htm">Autodesk.Revit.Creation</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">BoundaryConditions</span> <span class="identifier">NewAreaBoundaryConditions</span>(
	<span class="identifier">Reference</span> <span class="parameter">reference</span>,
	<span class="identifier">TranslationRotationValue</span> <span class="parameter">X_Translation</span>,
	<span class="identifier">double</span> <span class="parameter">X_TranslationSpringModulus</span>,
	<span class="identifier">TranslationRotationValue</span> <span class="parameter">Y_Translation</span>,
	<span class="identifier">double</span> <span class="parameter">Y_TranslationSpringModulus</span>,
	<span class="identifier">TranslationRotationValue</span> <span class="parameter">Z_Translation</span>,
	<span class="identifier">double</span> <span class="parameter">Z_TranslationSpringModulus</span>
)</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">NewAreaBoundaryConditions</span> ( 
	<span class="parameter">reference</span> <span class="keyword">As</span> <span class="identifier">Reference</span>,
	<span class="parameter">X_Translation</span> <span class="keyword">As</span> <span class="identifier">TranslationRotationValue</span>,
	<span class="parameter">X_TranslationSpringModulus</span> <span class="keyword">As</span> <span class="identifier">Double</span>,
	<span class="parameter">Y_Translation</span> <span class="keyword">As</span> <span class="identifier">TranslationRotationValue</span>,
	<span class="parameter">Y_TranslationSpringModulus</span> <span class="keyword">As</span> <span class="identifier">Double</span>,
	<span class="parameter">Z_Translation</span> <span class="keyword">As</span> <span class="identifier">TranslationRotationValue</span>,
	<span class="parameter">Z_TranslationSpringModulus</span> <span class="keyword">As</span> <span class="identifier">Double</span>
) <span class="keyword">As</span> <span class="identifier">BoundaryConditions</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="identifier">BoundaryConditions</span>^ <span class="identifier">NewAreaBoundaryConditions</span>(
	<span class="identifier">Reference</span>^ <span class="parameter">reference</span>, 
	<span class="identifier">TranslationRotationValue</span> <span class="parameter">X_Translation</span>, 
	<span class="identifier">double</span> <span class="parameter">X_TranslationSpringModulus</span>, 
	<span class="identifier">TranslationRotationValue</span> <span class="parameter">Y_Translation</span>, 
	<span class="identifier">double</span> <span class="parameter">Y_TranslationSpringModulus</span>, 
	<span class="identifier">TranslationRotationValue</span> <span class="parameter">Z_Translation</span>, 
	<span class="identifier">double</span> <span class="parameter">Z_TranslationSpringModulus</span>
)</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">member</span> <span class="identifier">NewAreaBoundaryConditions</span> : 
        <span class="parameter">reference</span> : <span class="identifier">Reference</span> * 
        <span class="parameter">X_Translation</span> : <span class="identifier">TranslationRotationValue</span> * 
        <span class="parameter">X_TranslationSpringModulus</span> : <span class="identifier">float</span> * 
        <span class="parameter">Y_Translation</span> : <span class="identifier">TranslationRotationValue</span> * 
        <span class="parameter">Y_TranslationSpringModulus</span> : <span class="identifier">float</span> * 
        <span class="parameter">Z_Translation</span> : <span class="identifier">TranslationRotationValue</span> * 
        <span class="parameter">Z_TranslationSpringModulus</span> : <span class="identifier">float</span> <span class="keyword">-&gt;</span> <span class="identifier">BoundaryConditions</span> </pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">reference</span>  <a href="d28155ae-817b-1f31-9c3f-c9c6a28acc0d.htm">Reference</a></dt><dd> The Geometry reference obtained from a Wall, Slab or 
Slab Foundation. </dd><dt class="has-text-weight-normal"><span class="parameter">X_Translation</span>  <a href="0b6cf7fa-b211-2f21-98a0-4f4e0fe2ca0e.htm">TranslationRotationValue</a></dt><dd> A value indicating the X axis translation option. </dd><dt class="has-text-weight-normal"><span class="parameter">X_TranslationSpringModulus</span>  <a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a></dt><dd> Translation Spring Modulus for X axis. Ignored if X_Translation is not "Spring". </dd><dt class="has-text-weight-normal"><span class="parameter">Y_Translation</span>  <a href="0b6cf7fa-b211-2f21-98a0-4f4e0fe2ca0e.htm">TranslationRotationValue</a></dt><dd> A value indicating the Y axis translation option. </dd><dt class="has-text-weight-normal"><span class="parameter">Y_TranslationSpringModulus</span>  <a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a></dt><dd> Translation Spring Modulus for Y axis. Ignored if Y_Translation is not "Spring". </dd><dt class="has-text-weight-normal"><span class="parameter">Z_Translation</span>  <a href="0b6cf7fa-b211-2f21-98a0-4f4e0fe2ca0e.htm">TranslationRotationValue</a></dt><dd> A value indicating the Z axis translation option. </dd><dt class="has-text-weight-normal"><span class="parameter">Z_TranslationSpringModulus</span>  <a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a></dt><dd> Translation Spring Modulus for Z axis. Ignored if Z_Translation is not "Spring". </dd></dl><h4>Return Value</h4><a href="58a98f0e-e2e5-4c8b-bea1-8228b30f1685.htm">BoundaryConditions</a><br />If successful, NewAreaBoundaryConditions returns an object for the newly created BoundaryConditions
with the BoundaryType = 2 - "Area". <span class="keyword"><span id="LST4C497BAB_1" data-languageSpecificText="cpp=nullptr|vb=Nothing|nu=null"></span></span> is returned if the operation fails.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDKC')" onkeypress="SectionExpandCollapse_CheckKey('IDKC', event)" tabindex="0"><img id="IDKCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDKCSection" class="collapsibleSection">This method will only function with the Autodesk Revit Structure application.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDLC')" onkeypress="SectionExpandCollapse_CheckKey('IDLC', event)" tabindex="0"><img id="IDLCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDLCSection" class="collapsibleSection"><div id="IDALC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDALC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDALC','cs','1','4');return false;">C#</a></div><div id="IDALC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDALC','vb','2','4');return false;">VB</a></div><div id="IDALC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDALC','cpp','3','4');return false;">C++</a></div><div id="IDALC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDALC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDALC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDALC');return false;" title="Copy">Copy</a></div></div><div id="IDALC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">bool</span> CreateAreaConditionWithReference(AnalyticalPanel wall, Autodesk.Revit.Creation.Document docCreation)
{
   <span class="highlight-comment">// Get the Geometry reference to the wall</span>
   Reference profileReference = <span class="highlight-keyword">null</span>;
   <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> == wall)
   {
      <span class="highlight-keyword">return</span> <span class="highlight-keyword">false</span>; <span class="highlight-comment">// the profile reference can't be retrieved.</span>
   }

   <span class="highlight-comment">// loop through the curves of the wall and get the first one as a reference</span>
   <span class="highlight-keyword">foreach</span> (Curve curve <span class="highlight-keyword">in</span> wall.GetOuterContour())
   {
      AnalyticalModelSelector selector = <span class="highlight-keyword">new</span> AnalyticalModelSelector(curve);

      profileReference = wall.GetReference(selector);
      <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> != profileReference)
      {
         <span class="highlight-keyword">break</span>;
      }
   }
   BoundaryConditions condition = <span class="highlight-keyword">null</span>;
   <span class="highlight-comment">// Create the Area Boundary Conditions if we have a profileReference</span>
   <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> != profileReference)
   {
      <span class="highlight-comment">// Create Area Boundary Conditions with profile reference.</span>
      condition = docCreation.NewAreaBoundaryConditions(profileReference, TranslationRotationValue.Fixed, <span class="highlight-number">0</span>,
                                                                          TranslationRotationValue.Fixed, <span class="highlight-number">0</span>,
                                                                          TranslationRotationValue.Fixed, <span class="highlight-number">0</span>);
   }
   <span class="highlight-keyword">return</span> (<span class="highlight-keyword">null</span> != condition);
}</pre></div><div id="IDALC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Function</span> CreateAreaConditionWithReference(wall <span class="highlight-keyword">As</span> Wall, docCreation <span class="highlight-keyword">As</span> Autodesk.Revit.Creation.Document) <span class="highlight-keyword">As</span> <span class="highlight-keyword">Boolean</span>
   <span class="highlight-comment">' Get the Geometry reference to the wall</span>
   <span class="highlight-keyword">Dim</span> profileReference <span class="highlight-keyword">As</span> Reference = <span class="highlight-keyword">Nothing</span>
   <span class="highlight-keyword">Dim</span> document <span class="highlight-keyword">As</span> Document = wall.Document
   <span class="highlight-keyword">Dim</span> analytical <span class="highlight-keyword">As</span> Autodesk.Revit.DB.<span class="highlight-keyword">Structure</span>.AnalyticalPanel = <span class="highlight-keyword">Nothing</span>
   <span class="highlight-keyword">Dim</span> relManager <span class="highlight-keyword">As</span> Autodesk.Revit.DB.<span class="highlight-keyword">Structure</span>.AnalyticalToPhysicalAssociationManager = Autodesk.Revit.DB.<span class="highlight-keyword">Structure</span>.AnalyticalToPhysicalAssociationManager.GetAnalyticalToPhysicalAssociationManager(document)

   <span class="highlight-keyword">If</span> (relManager <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span>) <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> <span class="highlight-keyword">False</span>
   <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

   <span class="highlight-keyword">Dim</span> counterpartId <span class="highlight-keyword">As</span> ElementId = relManager.GetAssociatedElementId(wall.Id)
   <span class="highlight-keyword">If</span> (counterpartId <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span>) <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> <span class="highlight-keyword">False</span>
   <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

   analytical = document.GetElement(counterpartId)
   <span class="highlight-keyword">If</span> analytical <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
      <span class="highlight-comment">' the profile reference can't be retrieved.</span>
      <span class="highlight-keyword">Return</span> <span class="highlight-keyword">False</span>
   <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

   <span class="highlight-comment">' loop through the curves of the wall and get the first one as a reference</span>
   <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> curve <span class="highlight-keyword">As</span> Curve <span class="highlight-keyword">In</span> analytical.GetOuterContour().ToList()
      profileReference = curve.Reference
      <span class="highlight-keyword">If</span> profileReference <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
         <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">For</span>
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
   <span class="highlight-keyword">Next</span>

   <span class="highlight-keyword">Dim</span> condition <span class="highlight-keyword">As</span> BoundaryConditions = <span class="highlight-keyword">Nothing</span>
   <span class="highlight-comment">' Create the Area Boundary Conditions if we have a profileReference</span>
   <span class="highlight-keyword">If</span> profileReference <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
      <span class="highlight-comment">' Create Area Boundary Conditions with profile reference.</span>
      condition = docCreation.NewAreaBoundaryConditions(profileReference, TranslationRotationValue.Fixed, <span class="highlight-number">0</span>, TranslationRotationValue.Fixed, <span class="highlight-number">0</span>, TranslationRotationValue.Fixed,
              <span class="highlight-number">0</span>)
   <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
   <span class="highlight-keyword">Return</span> (condition <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span>)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></pre></div><div id="IDALC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDALC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="ab1718f9-45fb-b3d3-827e-32ff81cf929c.htm">Document Class</a></div><div><a href="935e002a-ac38-a936-6f06-3a16689b4c3a.htm">NewAreaBoundaryConditions Overload</a></div><div><a href="ded320da-058a-4edd-0418-0582389559a7.htm">Autodesk.Revit.Creation Namespace</a></div></div></div></div>
        </div></body></html>
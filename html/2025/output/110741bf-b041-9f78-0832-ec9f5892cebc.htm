<html><head><title>Document.NewFootPrintRoof Method</title><meta name="Title" content="NewFootPrintRoof Method" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.Creation.Document.NewFootPrintRoof(Autodesk.Revit.DB.CurveArray,Autodesk.Revit.DB.Level,Autodesk.Revit.DB.RoofType,Autodesk.Revit.DB.ModelCurveArray@)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="Document.NewFootPrintRoof method" /><meta name="System.Keywords" content="NewFootPrintRoof method" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.Creation.Document.NewFootPrintRoof" /><meta name="Microsoft.Help.F1" content="Document.NewFootPrintRoof" /><meta name="Microsoft.Help.F1" content="NewFootPrintRoof" /><meta name="container" content="Autodesk.Revit.Creation" /><meta name="file" content="110741bf-b041-9f78-0832-ec9f5892cebc" /><meta name="guid" content="110741bf-b041-9f78-0832-ec9f5892cebc" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="Creates a new FootPrintRoof element." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /></head><body onload="SetDefaultLanguage('cs');"><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Document<span id="LSTB7EFE6C_0" data-languageSpecificText="cpp=::|nu=."></span>New<wbr />Foot<wbr />Print<wbr />Roof Method</h1></td></tr></table><div class="summary">Creates a new FootPrintRoof element.</div><br /><strong>Namespace:</strong> <a href="ded320da-058a-4edd-0418-0582389559a7.htm">Autodesk.Revit.Creation</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">FootPrintRoof</span> <span class="identifier">NewFootPrintRoof</span>(
	<span class="identifier">CurveArray</span> <span class="parameter">footPrint</span>,
	<span class="identifier">Level</span> <span class="parameter">level</span>,
	<span class="identifier">RoofType</span> <span class="parameter">roofType</span>,
	<span class="keyword">out</span> <span class="identifier">ModelCurveArray</span> <span class="parameter">footPrintToModelCurvesMapping</span>
)</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">NewFootPrintRoof</span> ( 
	<span class="parameter">footPrint</span> <span class="keyword">As</span> <span class="identifier">CurveArray</span>,
	<span class="parameter">level</span> <span class="keyword">As</span> <span class="identifier">Level</span>,
	<span class="parameter">roofType</span> <span class="keyword">As</span> <span class="identifier">RoofType</span>,
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">footPrintToModelCurvesMapping</span> <span class="keyword">As</span> <span class="identifier">ModelCurveArray</span>
) <span class="keyword">As</span> <span class="identifier">FootPrintRoof</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="identifier">FootPrintRoof</span>^ <span class="identifier">NewFootPrintRoof</span>(
	<span class="identifier">CurveArray</span>^ <span class="parameter">footPrint</span>, 
	<span class="identifier">Level</span>^ <span class="parameter">level</span>, 
	<span class="identifier">RoofType</span>^ <span class="parameter">roofType</span>, 
	[<span class="identifier">OutAttribute</span>] <span class="identifier">ModelCurveArray</span>^% <span class="parameter">footPrintToModelCurvesMapping</span>
)</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">member</span> <span class="identifier">NewFootPrintRoof</span> : 
        <span class="parameter">footPrint</span> : <span class="identifier">CurveArray</span> * 
        <span class="parameter">level</span> : <span class="identifier">Level</span> * 
        <span class="parameter">roofType</span> : <span class="identifier">RoofType</span> * 
        <span class="parameter">footPrintToModelCurvesMapping</span> : <span class="identifier">ModelCurveArray</span> <span class="keyword">byref</span> <span class="keyword">-&gt;</span> <span class="identifier">FootPrintRoof</span> </pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">footPrint</span>  <a href="55103aad-38fd-45d2-6bf7-67a5203e99f3.htm">CurveArray</a></dt><dd>The footprint of the FootPrintRoof.</dd><dt class="has-text-weight-normal"><span class="parameter">level</span>  <a href="577e5d4e-a558-118c-9dea-3b810b061775.htm">Level</a></dt><dd>The level of the FootPrintRoof.</dd><dt class="has-text-weight-normal"><span class="parameter">roofType</span>  <a href="00b5948e-1cb6-4f3b-acc1-9f000e8cc40d.htm">RoofType</a></dt><dd>Type of the FootPrintRoof.</dd><dt class="has-text-weight-normal"><span class="parameter">footPrintToModelCurvesMapping</span>  <a href="c7852e5b-0a34-771f-584f-3e9513bca50e.htm">ModelCurveArray</a><span id="LSTB7EFE6C_1" data-languageSpecificText="cpp=%"></span></dt><dd>An array of Model Curves corresponding to the set of Curves input in the footPrint. By knowing which Model Curve was created by each footPrint curve, you can set properties like SlopeAngle for each curve.</dd></dl><h4>Return Value</h4><a href="97eb52e6-5dfd-86b3-708d-aabcda389f4a.htm">FootPrintRoof</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDGC')" onkeypress="SectionExpandCollapse_CheckKey('IDGC', event)" tabindex="0"><img id="IDGCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="IDGCSection" class="collapsibleSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">ArgumentException</a></td><td>Thrown if the level does not exist in the given document.</td></tr><tr><td><a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">ArgumentException</a></td><td>Thrown if the roof type does not exist in the given document.</td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDFC')" onkeypress="SectionExpandCollapse_CheckKey('IDFC', event)" tabindex="0"><img id="IDFCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDFCSection" class="collapsibleSection"> This method will regenerate the document even in manual regeneration mode. </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDIC')" onkeypress="SectionExpandCollapse_CheckKey('IDIC', event)" tabindex="0"><img id="IDICToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDICSection" class="collapsibleSection"><div id="IDAIC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAIC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAIC','cs','1','4');return false;">C#</a></div><div id="IDAIC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAIC','vb','2','4');return false;">VB</a></div><div id="IDAIC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAIC','cpp','3','4');return false;">C++</a></div><div id="IDAIC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAIC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAIC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAIC');return false;" title="Copy">Copy</a></div></div><div id="IDAIC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Before invoking this sample, select some walls to add a roof over.</span>
<span class="highlight-comment">// Make sure there is a level named "Roof" in the document.</span>

<span class="highlight-comment">// find the Roof level</span>
FilteredElementCollector collector = <span class="highlight-keyword">new</span> FilteredElementCollector(document);
collector.OfClass(<span class="highlight-keyword">typeof</span>(Level));
<span class="highlight-keyword">var</span> elements = <span class="highlight-keyword">from</span> element <span class="highlight-keyword">in</span> collector <span class="highlight-keyword">where</span> element.Name == <span class="highlight-literal">"Roof"</span> <span class="highlight-keyword">select</span> element;
Level level = elements.Cast&lt;Level&gt;().ElementAt&lt;Level&gt;(<span class="highlight-number">0</span>);

collector = <span class="highlight-keyword">new</span> FilteredElementCollector(document);
collector.OfClass(<span class="highlight-keyword">typeof</span>(RoofType));
RoofType roofType = collector.FirstElement() <span class="highlight-keyword">as</span> RoofType; 

<span class="highlight-comment">// Get the handle of the application</span>
Autodesk.Revit.ApplicationServices.Application application = document.Application;

<span class="highlight-comment">// Define the footprint for the roof based on user selection</span>
CurveArray footprint = application.Create.NewCurveArray();
UIDocument uidoc = <span class="highlight-keyword">new</span> UIDocument(document);
ICollection&lt;ElementId&gt; selectedIds = uidoc.Selection.GetElementIds();
<span class="highlight-keyword">if</span> (selectedIds.Count != <span class="highlight-number">0</span>)
{
    <span class="highlight-keyword">foreach</span> (ElementId id <span class="highlight-keyword">in</span> selectedIds)
    {
        Element element = document.GetElement(id);
        Wall wall = element <span class="highlight-keyword">as</span> Wall;
        <span class="highlight-keyword">if</span> (wall != <span class="highlight-keyword">null</span>)
        {
            LocationCurve wallCurve = wall.Location <span class="highlight-keyword">as</span> LocationCurve;
            footprint.Append(wallCurve.Curve);
            <span class="highlight-keyword">continue</span>;
        }

        ModelCurve modelCurve = element <span class="highlight-keyword">as</span> ModelCurve;
        <span class="highlight-keyword">if</span> (modelCurve != <span class="highlight-keyword">null</span>)
        {
            footprint.Append(modelCurve.GeometryCurve);
        }
    }

}
<span class="highlight-keyword">else</span>
{
    <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> Exception(<span class="highlight-literal">"You should select a curve loop, or a wall loop, or loops combination \nof walls and curves to create a footprint roof."</span>);
}

ModelCurveArray footPrintToModelCurveMapping = <span class="highlight-keyword">new</span> ModelCurveArray();
FootPrintRoof footprintRoof = document.Create.NewFootPrintRoof(footprint, level, roofType, <span class="highlight-keyword">out</span> footPrintToModelCurveMapping);
ModelCurveArrayIterator iterator = footPrintToModelCurveMapping.ForwardIterator();
iterator.Reset();
<span class="highlight-keyword">while</span> (iterator.MoveNext())
{
    ModelCurve modelCurve = iterator.Current <span class="highlight-keyword">as</span> ModelCurve;
    footprintRoof.set_DefinesSlope(modelCurve, <span class="highlight-keyword">true</span>);
    footprintRoof.set_SlopeAngle(modelCurve, <span class="highlight-number">0.5</span>);
}</pre></div><div id="IDAIC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-comment">' Before invoking this sample, select some walls to add a roof over.</span>
<span class="highlight-comment">' Make sure there is a level named "Roof" in the document.</span>

<span class="highlight-comment">' find the Roof level</span>
<span class="highlight-keyword">Dim</span> collector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(document)
collector.OfClass(<span class="highlight-keyword">GetType</span>(Level))
: <span class="highlight-keyword">Dim</span> elements <span class="highlight-keyword">As</span> System.Collections.Generic.IEnumerable(<span class="highlight-keyword">Of</span> Autodesk.Revit.DB.Element)
elements = From element <span class="highlight-keyword">In</span> collector _
 Where element.Name = <span class="highlight-literal">"Roof"</span> _
 <span class="highlight-keyword">Select</span> element

<span class="highlight-keyword">Dim</span> level <span class="highlight-keyword">As</span> Level = elements.Cast(<span class="highlight-keyword">Of</span> Level)().ElementAt(<span class="highlight-number">0</span>)

collector = <span class="highlight-keyword">New</span> FilteredElementCollector(document)
collector.OfClass(<span class="highlight-keyword">GetType</span>(RoofType))
<span class="highlight-keyword">Dim</span> roofType <span class="highlight-keyword">As</span> RoofType = <span class="highlight-keyword">TryCast</span>(collector.FirstElement(), RoofType)

<span class="highlight-comment">' Get the handle of the application</span>
<span class="highlight-keyword">Dim</span> application <span class="highlight-keyword">As</span> Autodesk.Revit.ApplicationServices.Application = document.Application

<span class="highlight-comment">' Define the footprint for the roof based on user selection</span>
<span class="highlight-keyword">Dim</span> footprint <span class="highlight-keyword">As</span> CurveArray = application.Create.NewCurveArray()
<span class="highlight-keyword">Dim</span> uidoc <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> UIDocument(document)
<span class="highlight-keyword">Dim</span> selectedIds <span class="highlight-keyword">As</span> ICollection(<span class="highlight-keyword">Of</span> ElementId) = uidoc.Selection.GetElementIds()
<span class="highlight-keyword">If</span> selectedIds.Count &lt;&gt; <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
    <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> id <span class="highlight-keyword">As</span> ElementId <span class="highlight-keyword">In</span> selectedIds
        <span class="highlight-keyword">Dim</span> element <span class="highlight-keyword">As</span> Element = document.GetElement(id)
        <span class="highlight-keyword">Dim</span> wall <span class="highlight-keyword">As</span> Wall = <span class="highlight-keyword">TryCast</span>(element, Wall)
        <span class="highlight-keyword">If</span> wall <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
            <span class="highlight-keyword">Dim</span> wallCurve <span class="highlight-keyword">As</span> LocationCurve = <span class="highlight-keyword">TryCast</span>(wall.Location, LocationCurve)
            footprint.Append(wallCurve.Curve)
            <span class="highlight-keyword">Continue</span> <span class="highlight-keyword">For</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

        <span class="highlight-keyword">Dim</span> modelCurve <span class="highlight-keyword">As</span> ModelCurve = <span class="highlight-keyword">TryCast</span>(element, ModelCurve)
        <span class="highlight-keyword">If</span> modelCurve <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
            footprint.Append(modelCurve.GeometryCurve)
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Next</span>
<span class="highlight-keyword">Else</span>
    <span class="highlight-keyword">Throw</span> <span class="highlight-keyword">New</span> Exception(<span class="highlight-literal">"You should select a curve loop, or a wall loop, or loops combination "</span> &amp; vbLf &amp; <span class="highlight-literal">"of walls and curves to create a footprint roof."</span>)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

<span class="highlight-keyword">Dim</span> footPrintToModelCurveMapping <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> ModelCurveArray()
<span class="highlight-keyword">Dim</span> footprintRoof <span class="highlight-keyword">As</span> FootPrintRoof = document.Create.NewFootPrintRoof(footprint, level, roofType, footPrintToModelCurveMapping)
<span class="highlight-keyword">Dim</span> iterator <span class="highlight-keyword">As</span> ModelCurveArrayIterator = footPrintToModelCurveMapping.ForwardIterator()
iterator.Reset()
<span class="highlight-keyword">While</span> iterator.MoveNext()
    <span class="highlight-keyword">Dim</span> modelCurve <span class="highlight-keyword">As</span> ModelCurve = <span class="highlight-keyword">TryCast</span>(iterator.Current, ModelCurve)
    footprintRoof.DefinesSlope(modelCurve) = <span class="highlight-keyword">True</span>
    footprintRoof.SlopeAngle(modelCurve) = <span class="highlight-number">0.5</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">While</span></pre></div><div id="IDAIC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDAIC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="ab1718f9-45fb-b3d3-827e-32ff81cf929c.htm">Document Class</a></div><div><a href="ded320da-058a-4edd-0418-0582389559a7.htm">Autodesk.Revit.Creation Namespace</a></div></div></div></div>
        </div></body></html>
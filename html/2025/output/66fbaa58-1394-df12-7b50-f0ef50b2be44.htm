<html><head><title>FamilyItemFactory.NewSweep(Boolean, CurveArray, SketchPlane, SweepProfile, Int32, ProfilePlaneLocation) Method</title><meta name="Title" content="NewSweep(Boolean, CurveArray, SketchPlane, SweepProfile, Int32, ProfilePlaneLocation) Method" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.Creation.FamilyItemFactory.NewSweep(System.Boolean,Autodesk.Revit.DB.CurveArray,Autodesk.Revit.DB.SketchPlane,Autodesk.Revit.DB.SweepProfile,System.Int32,Autodesk.Revit.DB.ProfilePlaneLocation)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="container" content="Autodesk.Revit.Creation" /><meta name="file" content="66fbaa58-1394-df12-7b50-f0ef50b2be44" /><meta name="guid" content="66fbaa58-1394-df12-7b50-f0ef50b2be44" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="Adds a new sweep form to the family document, using a path of curve elements." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /></head><body onload="SetDefaultLanguage('cs');"><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Family<wbr />Item<wbr />Factory<span id="LSTC583249D_0" data-languageSpecificText="cpp=::|nu=."></span>New<wbr />Sweep(Boolean, Curve<wbr />Array, Sketch<wbr />Plane, Sweep<wbr />Profile, Int<wbr />32, Profile<wbr />Plane<wbr />Location) Method</h1></td></tr></table><div class="summary">Adds a new sweep form to the family document, using a path of curve elements.</div><br /><strong>Namespace:</strong> <a href="ded320da-058a-4edd-0418-0582389559a7.htm">Autodesk.Revit.Creation</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">Sweep</span> <span class="identifier">NewSweep</span>(
	<span class="identifier">bool</span> <span class="parameter">isSolid</span>,
	<span class="identifier">CurveArray</span> <span class="parameter">path</span>,
	<span class="identifier">SketchPlane</span> <span class="parameter">pathPlane</span>,
	<span class="identifier">SweepProfile</span> <span class="parameter">profile</span>,
	<span class="identifier">int</span> <span class="parameter">profileLocationCurveIndex</span>,
	<span class="identifier">ProfilePlaneLocation</span> <span class="parameter">profilePlaneLocation</span>
)</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">NewSweep</span> ( 
	<span class="parameter">isSolid</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>,
	<span class="parameter">path</span> <span class="keyword">As</span> <span class="identifier">CurveArray</span>,
	<span class="parameter">pathPlane</span> <span class="keyword">As</span> <span class="identifier">SketchPlane</span>,
	<span class="parameter">profile</span> <span class="keyword">As</span> <span class="identifier">SweepProfile</span>,
	<span class="parameter">profileLocationCurveIndex</span> <span class="keyword">As</span> <span class="identifier">Integer</span>,
	<span class="parameter">profilePlaneLocation</span> <span class="keyword">As</span> <span class="identifier">ProfilePlaneLocation</span>
) <span class="keyword">As</span> <span class="identifier">Sweep</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="identifier">Sweep</span>^ <span class="identifier">NewSweep</span>(
	<span class="identifier">bool</span> <span class="parameter">isSolid</span>, 
	<span class="identifier">CurveArray</span>^ <span class="parameter">path</span>, 
	<span class="identifier">SketchPlane</span>^ <span class="parameter">pathPlane</span>, 
	<span class="identifier">SweepProfile</span>^ <span class="parameter">profile</span>, 
	<span class="identifier">int</span> <span class="parameter">profileLocationCurveIndex</span>, 
	<span class="identifier">ProfilePlaneLocation</span> <span class="parameter">profilePlaneLocation</span>
)</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">member</span> <span class="identifier">NewSweep</span> : 
        <span class="parameter">isSolid</span> : <span class="identifier">bool</span> * 
        <span class="parameter">path</span> : <span class="identifier">CurveArray</span> * 
        <span class="parameter">pathPlane</span> : <span class="identifier">SketchPlane</span> * 
        <span class="parameter">profile</span> : <span class="identifier">SweepProfile</span> * 
        <span class="parameter">profileLocationCurveIndex</span> : <span class="identifier">int</span> * 
        <span class="parameter">profilePlaneLocation</span> : <span class="identifier">ProfilePlaneLocation</span> <span class="keyword">-&gt;</span> <span class="identifier">Sweep</span> </pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">isSolid</span>  <a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noopener noreferrer">Boolean</a></dt><dd>Indicates if the Sweep is Solid or Void.</dd><dt class="has-text-weight-normal"><span class="parameter">path</span>  <a href="55103aad-38fd-45d2-6bf7-67a5203e99f3.htm">CurveArray</a></dt><dd>The path of the sweep. The path should be 2D, where all input curves lie in one plane, and the curves are not 
required to reference existing geometry.</dd><dt class="has-text-weight-normal"><span class="parameter">pathPlane</span>  <a href="ba104029-d175-7e75-caef-667a4281f4af.htm">SketchPlane</a></dt><dd> The sketch plane for the path. Use this when you want to create 
a 2D path that resides on an existing planar face. Optional, can be <span class="keyword"><span id="LSTC583249D_1" data-languageSpecificText="cpp=nullptr|vb=Nothing|nu=null"></span></span> for 3D paths or 
for 2D paths where the path should not reference an existing face.</dd><dt class="has-text-weight-normal"><span class="parameter">profile</span>  <a href="1b77356c-e92b-e151-f8c9-727b3e2b8934.htm">SweepProfile</a></dt><dd>The profile of the newly created Sweep. This may contain
more than one curve loop or a profile family. The profile must lie in the XY plane, and it will be 
transformed to the profile plane automatically. Each loop must be a fully closed curve loop and the loops 
must not intersect.
The loop can be a unbound circle or ellipse,  but its geometry will be split in two in 
order to satisfy requirements for sketches used in extrusions.</dd><dt class="has-text-weight-normal"><span class="parameter">profileLocationCurveIndex</span>  <a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noopener noreferrer">Int32</a></dt><dd>The index of the path curves. The curve upon which the profile
plane will be determined.</dd><dt class="has-text-weight-normal"><span class="parameter">profilePlaneLocation</span>  <a href="7ee6064e-ae88-1efe-a030-dabfae9bacaf.htm">ProfilePlaneLocation</a></dt><dd>The location on the profileLocationCurve where the profile
plane will be determined.</dd></dl><h4>Return Value</h4><a href="ed383459-badd-2323-4f73-0d94fd76ce0f.htm">Sweep</a><br />If creation was successful the new Sweep is returned, 
otherwise an exception with failure information will be thrown.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDKC')" onkeypress="SectionExpandCollapse_CheckKey('IDKC', event)" tabindex="0"><img id="IDKCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="IDKCSection" class="collapsibleSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">ArgumentException</a></td><td>
Thrown when the input argument-path-is <span class="keyword"><span id="LSTC583249D_2" data-languageSpecificText="cpp=nullptr|vb=Nothing|nu=null"></span></span> or empty.
</td></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">ArgumentNullException</a></td><td>
Thrown when the input argument-profile-is <span class="keyword"><span id="LSTC583249D_3" data-languageSpecificText="cpp=nullptr|vb=Nothing|nu=null"></span></span>.
</td></tr><tr><td><a href="60f148c9-ece0-a6bb-4e12-bb4a9c8c8a24.htm">ArgumentOutOfRangeException</a></td><td>
Thrown when the input argument-profileLocationCurveIndex-is out of index bounds.
</td></tr><tr><td><a href="60f148c9-ece0-a6bb-4e12-bb4a9c8c8a24.htm">ArgumentOutOfRangeException</a></td><td>
Thrown when the input argument-profilePlaneLocation-does not exist in the ProfilePlaneLocation enumeration.
</td></tr><tr><td><a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">InvalidOperationException</a></td><td>
Thrown when creation is attempted in Conceptual Mass, 2D, or other family where sweeps cannot be created.
</td></tr><tr><td><a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">InvalidOperationException</a></td><td>
Thrown when the creation failed.
</td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDJC')" onkeypress="SectionExpandCollapse_CheckKey('IDJC', event)" tabindex="0"><img id="IDJCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDJCSection" class="collapsibleSection">This method creates a sweep in a family document. The sweep will trace the profile along the path. </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDQC')" onkeypress="SectionExpandCollapse_CheckKey('IDQC', event)" tabindex="0"><img id="IDQCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDQCSection" class="collapsibleSection"><div id="IDAQC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAQC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAQC','cs','1','4');return false;">C#</a></div><div id="IDAQC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAQC','vb','2','4');return false;">VB</a></div><div id="IDAQC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAQC','cpp','3','4');return false;">C++</a></div><div id="IDAQC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAQC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAQC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAQC');return false;" title="Copy">Copy</a></div></div><div id="IDAQC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">private</span> Sweep CreateSweep(Autodesk.Revit.DB.Document document, SketchPlane sketchPlane)
{
    Sweep sweep = <span class="highlight-keyword">null</span>;

    <span class="highlight-comment">// make sure we have a family document</span>
    <span class="highlight-keyword">if</span> (<span class="highlight-keyword">true</span> == document.IsFamilyDocument)
    {
        <span class="highlight-comment">// Define a profile for the sweep</span>
        CurveArrArray arrarr = <span class="highlight-keyword">new</span> CurveArrArray();
        CurveArray arr = <span class="highlight-keyword">new</span> CurveArray();

        <span class="highlight-comment">// Create an ovoid profile</span>
        XYZ pnt1 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>);
        XYZ pnt2 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">2</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>);
        XYZ pnt3 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>);
        arr.Append(Arc.Create(pnt2, <span class="highlight-number">1.0</span>d, <span class="highlight-number">0.0</span>d, <span class="highlight-number">180.0</span>d, XYZ.BasisX, XYZ.BasisY));
        arr.Append(Arc.Create(pnt1, pnt3, pnt2));
        arrarr.Append(arr);
        SweepProfile profile = document.Application.Create.NewCurveLoopsProfile(arrarr);

        <span class="highlight-comment">// Create a path for the sweep</span>
        XYZ pnt4 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>);
        XYZ pnt5 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>);
        Curve curve = Line.CreateBound(pnt4, pnt5);

        CurveArray curves = <span class="highlight-keyword">new</span> CurveArray();
        curves.Append(curve);

        <span class="highlight-comment">// create a solid ovoid sweep</span>
        sweep = document.FamilyCreate.NewSweep(<span class="highlight-keyword">true</span>, curves, sketchPlane, profile, <span class="highlight-number">0</span>, ProfilePlaneLocation.Start);

        <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> != sweep)
        {
            <span class="highlight-comment">// move to proper place</span>
            XYZ transPoint1 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">11</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>);
            ElementTransformUtils.MoveElement(document, sweep.Id, transPoint1);
        }
        <span class="highlight-keyword">else</span>
        {
            <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> Exception(<span class="highlight-literal">"Failed to create a new Sweep."</span>);
        }
    }
    <span class="highlight-keyword">else</span>
    {
        <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> Exception(<span class="highlight-literal">"Please open a Family document before invoking this command."</span>);
    }

    <span class="highlight-keyword">return</span> sweep;
}</pre></div><div id="IDAQC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Function</span> CreateSweep(document <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Document, sketchPlane <span class="highlight-keyword">As</span> SketchPlane) <span class="highlight-keyword">As</span> Sweep
    <span class="highlight-keyword">Dim</span> sweep <span class="highlight-keyword">As</span> Sweep = <span class="highlight-keyword">Nothing</span>

    <span class="highlight-comment">' make sure we have a family document</span>
    <span class="highlight-keyword">If</span> <span class="highlight-keyword">True</span> = document.IsFamilyDocument <span class="highlight-keyword">Then</span>
        <span class="highlight-comment">' Define a profile for the sweep</span>
        <span class="highlight-keyword">Dim</span> arrarr <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> CurveArrArray()
        <span class="highlight-keyword">Dim</span> arr <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> CurveArray()

        <span class="highlight-comment">' Create an ovoid profile</span>
        <span class="highlight-keyword">Dim</span> pnt1 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>)
        <span class="highlight-keyword">Dim</span> pnt2 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">2</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>)
        <span class="highlight-keyword">Dim</span> pnt3 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>)
        arr.Append(Arc.Create(pnt2, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">180.0</span>, XYZ.BasisX, XYZ.BasisY))
        arr.Append(Arc.Create(pnt1, pnt3, pnt2))
        arrarr.Append(arr)
        <span class="highlight-keyword">Dim</span> profile <span class="highlight-keyword">As</span> SweepProfile = document.Application.Create.NewCurveLoopsProfile(arrarr)

        <span class="highlight-comment">' Create a path for the sweep</span>
        <span class="highlight-keyword">Dim</span> pnt4 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>)
        <span class="highlight-keyword">Dim</span> pnt5 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>)
        <span class="highlight-keyword">Dim</span> curve <span class="highlight-keyword">As</span> Curve = Line.CreateBound(pnt4, pnt5)

        <span class="highlight-keyword">Dim</span> curves <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> CurveArray()
        curves.Append(curve)

        <span class="highlight-comment">' create a solid ovoid sweep</span>
        sweep = document.FamilyCreate.NewSweep(<span class="highlight-keyword">True</span>, curves, sketchPlane, profile, <span class="highlight-number">0</span>, ProfilePlaneLocation.Start)

        <span class="highlight-keyword">If</span> sweep <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
            <span class="highlight-comment">' move to proper place</span>
            <span class="highlight-keyword">Dim</span> transPoint1 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">11</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>)
            ElementTransformUtils.MoveElement(document, sweep.Id, transPoint1)
        <span class="highlight-keyword">Else</span>
            <span class="highlight-keyword">Throw</span> <span class="highlight-keyword">New</span> Exception(<span class="highlight-literal">"Failed to create a new Sweep."</span>)
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Else</span>
        <span class="highlight-keyword">Throw</span> <span class="highlight-keyword">New</span> Exception(<span class="highlight-literal">"Please open a Family document before invoking this command."</span>)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Return</span> sweep
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></pre></div><div id="IDAQC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDAQC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="a7622967-1381-c17f-ed04-1ebe40da0440.htm">FamilyItemFactory Class</a></div><div><a href="e22c07dd-0615-5b5d-e40f-eed749b7206f.htm">NewSweep Overload</a></div><div><a href="ded320da-058a-4edd-0418-0582389559a7.htm">Autodesk.Revit.Creation Namespace</a></div></div></div></div>
        </div></body></html>
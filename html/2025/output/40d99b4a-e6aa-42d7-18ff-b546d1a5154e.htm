<html><head><title>IExportContext.OnLinkBegin Method</title><meta name="Title" content="OnLinkBegin Method" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.DB.IExportContext.OnLinkBegin(Autodesk.Revit.DB.LinkNode)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="IExportContext.OnLinkBegin method" /><meta name="System.Keywords" content="OnLinkBegin method" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.IExportContext.OnLinkBegin" /><meta name="Microsoft.Help.F1" content="IExportContext.OnLinkBegin" /><meta name="Microsoft.Help.F1" content="OnLinkBegin" /><meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="40d99b4a-e6aa-42d7-18ff-b546d1a5154e" /><meta name="guid" content="40d99b4a-e6aa-42d7-18ff-b546d1a5154e" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="This method marks the beginning of a link instance to be exported." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /></head><body onload="SetDefaultLanguage('cs');"><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>IExport<wbr />Context<span id="LSTB24C8D3D_0" data-languageSpecificText="cpp=::|nu=."></span>On<wbr />Link<wbr />Begin Method</h1></td></tr></table><div class="summary">
   This method marks the beginning of a link instance to be exported.
</div><br /><strong>Namespace:</strong> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="identifier">RenderNodeAction</span> <span class="identifier">OnLinkBegin</span>(
	<span class="identifier">LinkNode</span> <span class="parameter">node</span>
)</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Function</span> <span class="identifier">OnLinkBegin</span> ( 
	<span class="parameter">node</span> <span class="keyword">As</span> <span class="identifier">LinkNode</span>
) <span class="keyword">As</span> <span class="identifier">RenderNodeAction</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="identifier">RenderNodeAction</span> <span class="identifier">OnLinkBegin</span>(
	<span class="identifier">LinkNode</span>^ <span class="parameter">node</span>
)</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">abstract</span> <span class="identifier">OnLinkBegin</span> : 
        <span class="parameter">node</span> : <span class="identifier">LinkNode</span> <span class="keyword">-&gt;</span> <span class="identifier">RenderNodeAction</span> </pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">node</span>  <a href="9141cd14-5aa4-d81f-66ad-8ca3af394886.htm">LinkNode</a></dt><dd> </dd></dl><h4>Return Value</h4><a href="39f98799-628b-8d65-765c-ca86949ce7ed.htm">RenderNodeAction</a><br />
   Return RenderNodeAction.Skip if you wish to skip processing this link instance,
   or return RenderNodeAction.Proceed otherwise.
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDC')" onkeypress="SectionExpandCollapse_CheckKey('IDDC', event)" tabindex="0"><img id="IDDCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDDCSection" class="collapsibleSection"><div id="IDADC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDADC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDADC','cs','1','4');return false;">C#</a></div><div id="IDADC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDADC','vb','2','4');return false;">VB</a></div><div id="IDADC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDADC','cpp','3','4');return false;">C++</a></div><div id="IDADC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDADC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDADC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDADC');return false;" title="Copy">Copy</a></div></div><div id="IDADC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// This code demonstrates how to process instances of Revit links.</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-keyword">public</span> RenderNodeAction OnLinkBegin(LinkNode node)
{
   <span class="highlight-comment">// We can get more information about the Revit Link and its type if we need to</span>
   ElementId symbolId = node.SymbolId;
   RevitLinkType linkType = m_document.GetElement(symbolId) <span class="highlight-keyword">as</span> RevitLinkType;
   String linkDocumentName = linkType.Name;

   <span class="highlight-comment">// Typically, an export context has to manage a stack of transformation</span>
   <span class="highlight-comment">// for all nested objects, such as instances, lights, links, etc.</span>
   <span class="highlight-comment">// A combined transformation needs to be applied to the incoming geometry</span>
   <span class="highlight-comment">// (providing all geometry is to be flattened in the resultant format.)</span>
   m_TransformationStack.Push(m_TransformationStack.Peek().Multiply(node.GetTransform()));

   <span class="highlight-comment">// We can either skip this link instance or proceed with rendering it</span>
   <span class="highlight-keyword">return</span> RenderNodeAction.Proceed;
}

<span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// This method marks the end of processing a Revit link</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> OnLinkEnd(LinkNode node)
{
   <span class="highlight-comment">// Note: This method is invoked even for instances that were skipped.</span>

   <span class="highlight-comment">// If we maintain a transformation stack, we need to remove the latest one from it.</span>
   m_TransformationStack.Pop();
}</pre></div><div id="IDADC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-comment">' &lt;summary&gt;</span>
<span class="highlight-comment">' This code demonstrates how to process instances of Revit links.</span>
<span class="highlight-comment">' &lt;/summary&gt;</span>
<span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> OnLinkBegin(node <span class="highlight-keyword">As</span> LinkNode) <span class="highlight-keyword">As</span> RenderNodeAction <span class="highlight-keyword">Implements</span> IExportContext.OnLinkBegin
    <span class="highlight-comment">' We can get more information about the Revit Link and its type if we need to</span>
    <span class="highlight-keyword">Dim</span> symbolId <span class="highlight-keyword">As</span> ElementId = node.SymbolId
    <span class="highlight-keyword">Dim</span> linkType <span class="highlight-keyword">As</span> RevitLinkType = <span class="highlight-keyword">TryCast</span>(m_document.GetElement(symbolId), RevitLinkType)
    <span class="highlight-keyword">Dim</span> linkDocumentName <span class="highlight-keyword">As</span> [<span class="highlight-keyword">String</span>] = linkType.Name

    <span class="highlight-comment">' Typically, an export context has to manage a stack of transformation</span>
    <span class="highlight-comment">' for all nested objects, such as instances, lights, links, etc.</span>
    <span class="highlight-comment">' A combined transformation needs to be applied to the incoming geometry</span>
    <span class="highlight-comment">' (providing all geometry is to be flattened in the resultant format.)</span>
    m_TransformationStack.Push(m_TransformationStack.Peek().Multiply(node.GetTransform()))

    <span class="highlight-comment">' We can either skip this link instance or proceed with rendering it</span>
    <span class="highlight-keyword">Return</span> RenderNodeAction.Proceed
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>

<span class="highlight-comment">' &lt;summary&gt;</span>
<span class="highlight-comment">' This method marks the end of processing a Revit link</span>
<span class="highlight-comment">' &lt;/summary&gt;</span>
<span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> OnLinkEnd(node <span class="highlight-keyword">As</span> LinkNode) <span class="highlight-keyword">Implements</span> IExportContext.OnLinkEnd
    <span class="highlight-comment">' Note: This method is invoked even for instances that were skipped.</span>

    <span class="highlight-comment">' If we maintain a transformation stack, we need to remove the latest one from it.</span>
    m_TransformationStack.Pop()
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div><div id="IDADC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDADC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="7d0dc6df-db0e-6a07-3b42-8dde1bedb3c1.htm">IExportContext Interface</a></div><div><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div>
        </div></body></html>
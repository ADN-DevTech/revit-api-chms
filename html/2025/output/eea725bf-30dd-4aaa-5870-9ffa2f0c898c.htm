<html><head><title>AnalyticalLink.Create Method</title><meta name="Title" content="Create Method" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.DB.Structure.AnalyticalLink.Create(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.ElementId,Autodesk.Revit.DB.ElementId,Autodesk.Revit.DB.ElementId)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="AnalyticalLink.Create method" /><meta name="System.Keywords" content="Create method" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.Structure.AnalyticalLink.Create" /><meta name="Microsoft.Help.F1" content="AnalyticalLink.Create" /><meta name="Microsoft.Help.F1" content="Create" /><meta name="container" content="Autodesk.Revit.DB.Structure" /><meta name="file" content="eea725bf-30dd-4aaa-5870-9ffa2f0c898c" /><meta name="guid" content="eea725bf-30dd-4aaa-5870-9ffa2f0c898c" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="Creates a new instance of a AnalyticalLink element between two Hubs." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /></head><body onload="SetDefaultLanguage('cs');"><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Analytical<wbr />Link<span id="LSTE245EF1E_0" data-languageSpecificText="cpp=::|nu=."></span>Create Method</h1></td></tr></table><div class="summary">
   Creates a new instance of a AnalyticalLink element between two Hubs.
</div><br /><strong>Namespace:</strong> <a href="d586b341-f687-9d90-e96d-255806b7d4fc.htm">Autodesk.Revit.DB.Structure</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">AnalyticalLink</span> <span class="identifier">Create</span>(
	<span class="identifier">Document</span> <span class="parameter">doc</span>,
	<span class="identifier">ElementId</span> <span class="parameter">type</span>,
	<span class="identifier">ElementId</span> <span class="parameter">startHubId</span>,
	<span class="identifier">ElementId</span> <span class="parameter">endHubId</span>
)</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">Create</span> ( 
	<span class="parameter">doc</span> <span class="keyword">As</span> <span class="identifier">Document</span>,
	<span class="parameter">type</span> <span class="keyword">As</span> <span class="identifier">ElementId</span>,
	<span class="parameter">startHubId</span> <span class="keyword">As</span> <span class="identifier">ElementId</span>,
	<span class="parameter">endHubId</span> <span class="keyword">As</span> <span class="identifier">ElementId</span>
) <span class="keyword">As</span> <span class="identifier">AnalyticalLink</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="identifier">AnalyticalLink</span>^ <span class="identifier">Create</span>(
	<span class="identifier">Document</span>^ <span class="parameter">doc</span>, 
	<span class="identifier">ElementId</span>^ <span class="parameter">type</span>, 
	<span class="identifier">ElementId</span>^ <span class="parameter">startHubId</span>, 
	<span class="identifier">ElementId</span>^ <span class="parameter">endHubId</span>
)</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">Create</span> : 
        <span class="parameter">doc</span> : <span class="identifier">Document</span> * 
        <span class="parameter">type</span> : <span class="identifier">ElementId</span> * 
        <span class="parameter">startHubId</span> : <span class="identifier">ElementId</span> * 
        <span class="parameter">endHubId</span> : <span class="identifier">ElementId</span> <span class="keyword">-&gt;</span> <span class="identifier">AnalyticalLink</span> </pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">doc</span>  <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a></dt><dd>
   Document to which new AnalyticalLink should be added.
</dd><dt class="has-text-weight-normal"><span class="parameter">type</span>  <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a></dt><dd>
   AnalyticalLinkType for the new AnalyticalLink.
</dd><dt class="has-text-weight-normal"><span class="parameter">startHubId</span>  <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a></dt><dd>
   Hub at start of AnalyticalLink.
</dd><dt class="has-text-weight-normal"><span class="parameter">endHubId</span>  <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a></dt><dd>
   Hub at end of AnalyticalLink.
</dd></dl><h4>Return Value</h4><a href="b552fb54-8dff-6690-e16e-cc46cbc46d6b.htm">AnalyticalLink</a><br />
   The newly created AnalyticalLink instance.
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDGC')" onkeypress="SectionExpandCollapse_CheckKey('IDGC', event)" tabindex="0"><img id="IDGCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="IDGCSection" class="collapsibleSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">ArgumentException</a></td><td>
   startHubId is not a valid Hub ID for an AnalyticalLink element.
   -or-
   endHubId is not a valid Hub ID for an AnalyticalLink element.
   -or-
   Thrown if startHubId or endHubId do not represent ids of Hubs.
   -or-
   Thrown if startHubId == endHubId.
   -or-
   Thrown if type does not represent an id of an AnalyticalLinkType.
</td></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">ArgumentNullException</a></td><td>
   A non-optional argument was null
</td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDJC')" onkeypress="SectionExpandCollapse_CheckKey('IDJC', event)" tabindex="0"><img id="IDJCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDJCSection" class="collapsibleSection"><div id="IDAJC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAJC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAJC','cs','1','4');return false;">C#</a></div><div id="IDAJC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAJC','vb','2','4');return false;">VB</a></div><div id="IDAJC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAJC','cpp','3','4');return false;">C++</a></div><div id="IDAJC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAJC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAJC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAJC');return false;" title="Copy">Copy</a></div></div><div id="IDAJC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> CreateLink(Document doc, AnalyticalElement fi1, AnalyticalElement fi2)
{
    FilteredElementCollector hubCollector = <span class="highlight-keyword">new</span> FilteredElementCollector(doc);
    hubCollector.OfClass(<span class="highlight-keyword">typeof</span>(Hub));  <span class="highlight-comment">//Get all hubs</span>
    ICollection&lt;Element&gt; allHubs = hubCollector.ToElements();
    FilteredElementCollector linktypeCollector = <span class="highlight-keyword">new</span> FilteredElementCollector(doc);
    linktypeCollector.OfClass(<span class="highlight-keyword">typeof</span>(AnalyticalLinkType));
    ElementId firstLinkType = linktypeCollector.ToElementIds().First();  <span class="highlight-comment">//Get the first analytical link type.  </span>
    <span class="highlight-comment">// Get hub Ids from two selected family instance items</span>
    ElementId startHubId = GetHub(fi1.Id, allHubs); 
    ElementId endHubId = GetHub(fi2.Id, allHubs);
    Transaction tran = <span class="highlight-keyword">new</span> Transaction(doc, <span class="highlight-literal">"Create Link"</span>);
    tran.Start();
    <span class="highlight-comment">//Create a link between these two hubs.</span>
    AnalyticalLink createdLink = AnalyticalLink.Create(doc, firstLinkType, startHubId, endHubId);  
    tran.Commit();
}

<span class="highlight-comment">//Get the first Hub on a given AnalyticalModel element</span>
<span class="highlight-keyword">private</span> ElementId GetHub(ElementId hostId, ICollection&lt;Element&gt; allHubs)
{
    <span class="highlight-keyword">foreach</span> (Element ehub <span class="highlight-keyword">in</span> allHubs)
    {
        Hub hub = ehub <span class="highlight-keyword">as</span> Hub;
        ConnectorManager manager = hub.GetHubConnectorManager();
        ConnectorSet connectors = manager.Connectors;
        <span class="highlight-keyword">foreach</span> (Connector connector <span class="highlight-keyword">in</span> connectors)
        {
            ConnectorSet refConnectors = connector.AllRefs;
            <span class="highlight-keyword">foreach</span> (Connector refConnector <span class="highlight-keyword">in</span> refConnectors)
            {
                <span class="highlight-keyword">if</span> (refConnector.Owner.Id == hostId)
                {
                    <span class="highlight-keyword">return</span> hub.Id;
                }
            }
        }
    }
    <span class="highlight-keyword">return</span> ElementId.InvalidElementId;
}</pre></div><div id="IDAJC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> CreateLink(doc <span class="highlight-keyword">As</span> Document, fi1 <span class="highlight-keyword">As</span> AnalyticalElement, fi2 <span class="highlight-keyword">As</span> AnalyticalElement)
    <span class="highlight-keyword">Dim</span> hubCollector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(doc)
    hubCollector.OfClass(<span class="highlight-keyword">GetType</span>(Hub))
    <span class="highlight-comment">'Get all hubs</span>
    <span class="highlight-keyword">Dim</span> allHubs <span class="highlight-keyword">As</span> ICollection(<span class="highlight-keyword">Of</span> Element) = hubCollector.ToElements()
    <span class="highlight-keyword">Dim</span> linktypeCollector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(doc)
    linktypeCollector.OfClass(<span class="highlight-keyword">GetType</span>(AnalyticalLinkType))
    <span class="highlight-keyword">Dim</span> firstLinkType <span class="highlight-keyword">As</span> ElementId = linktypeCollector.ToElementIds().First()
    <span class="highlight-comment">'Get the first analytical link type.  </span>
    <span class="highlight-comment">' Get hub Ids from two selected family instance items</span>
    <span class="highlight-keyword">Dim</span> startHubId <span class="highlight-keyword">As</span> ElementId = GetHub(fi1.Id, allHubs)
    <span class="highlight-keyword">Dim</span> endHubId <span class="highlight-keyword">As</span> ElementId = GetHub(fi2.Id, allHubs)
    <span class="highlight-keyword">Dim</span> tran <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Transaction(doc, <span class="highlight-literal">"Create Link"</span>)
    tran.Start()
    <span class="highlight-comment">'Create a link between these two hubs.</span>
    <span class="highlight-keyword">Dim</span> createdLink <span class="highlight-keyword">As</span> AnalyticalLink = AnalyticalLink.Create(doc, firstLinkType, startHubId, endHubId)
    tran.Commit()
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>

<span class="highlight-comment">'Get the first Hub on a given AnalyticalModel element</span>
<span class="highlight-keyword">Private</span> <span class="highlight-keyword">Function</span> GetHub(hostId <span class="highlight-keyword">As</span> ElementId, allHubs <span class="highlight-keyword">As</span> ICollection(<span class="highlight-keyword">Of</span> Element)) <span class="highlight-keyword">As</span> ElementId
    <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> ehub <span class="highlight-keyword">As</span> Element <span class="highlight-keyword">In</span> allHubs
        <span class="highlight-keyword">Dim</span> hub <span class="highlight-keyword">As</span> Hub = <span class="highlight-keyword">TryCast</span>(ehub, Hub)
        <span class="highlight-keyword">Dim</span> manager <span class="highlight-keyword">As</span> ConnectorManager = hub.GetHubConnectorManager()
        <span class="highlight-keyword">Dim</span> connectors <span class="highlight-keyword">As</span> ConnectorSet = manager.Connectors
        <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> connector <span class="highlight-keyword">As</span> Connector <span class="highlight-keyword">In</span> connectors
            <span class="highlight-keyword">Dim</span> refConnectors <span class="highlight-keyword">As</span> ConnectorSet = connector.AllRefs
            <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> refConnector <span class="highlight-keyword">As</span> Connector <span class="highlight-keyword">In</span> refConnectors
                <span class="highlight-keyword">If</span> refConnector.Owner.Id = hostId <span class="highlight-keyword">Then</span>
                    <span class="highlight-keyword">Return</span> hub.Id
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
            <span class="highlight-keyword">Next</span>
        <span class="highlight-keyword">Next</span>
    <span class="highlight-keyword">Next</span>
    <span class="highlight-keyword">Return</span> ElementId.InvalidElementId
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></pre></div><div id="IDAJC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDAJC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="b552fb54-8dff-6690-e16e-cc46cbc46d6b.htm">AnalyticalLink Class</a></div><div><a href="d586b341-f687-9d90-e96d-255806b7d4fc.htm">Autodesk.Revit.DB.Structure Namespace</a></div></div></div></div>
        </div></body></html>
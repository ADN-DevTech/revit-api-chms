<html><head><title>FamilyItemFactory.NewExtrusionForm Method</title><meta name="Title" content="NewExtrusionForm Method" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.Creation.FamilyItemFactory.NewExtrusionForm(System.Boolean,Autodesk.Revit.DB.ReferenceArray,Autodesk.Revit.DB.XYZ)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="FamilyItemFactory.NewExtrusionForm method" /><meta name="System.Keywords" content="NewExtrusionForm method" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.Creation.FamilyItemFactory.NewExtrusionForm" /><meta name="Microsoft.Help.F1" content="FamilyItemFactory.NewExtrusionForm" /><meta name="Microsoft.Help.F1" content="NewExtrusionForm" /><meta name="container" content="Autodesk.Revit.Creation" /><meta name="file" content="4830510f-f19e-f1e2-c1c5-b4eade8f4af2" /><meta name="guid" content="4830510f-f19e-f1e2-c1c5-b4eade8f4af2" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="Create new Form element by Extrude operation, and add it into the Autodesk Revit family document." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /></head><body onload="SetDefaultLanguage('cs');"><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Family<wbr />Item<wbr />Factory<span id="LSTFFF8D606_0" data-languageSpecificText="cpp=::|nu=."></span>New<wbr />Extrusion<wbr />Form Method</h1></td></tr></table><div class="summary">Create new Form element by Extrude operation, and add it into the Autodesk Revit family document.</div><br /><strong>Namespace:</strong> <a href="ded320da-058a-4edd-0418-0582389559a7.htm">Autodesk.Revit.Creation</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">Form</span> <span class="identifier">NewExtrusionForm</span>(
	<span class="identifier">bool</span> <span class="parameter">isSolid</span>,
	<span class="identifier">ReferenceArray</span> <span class="parameter">profile</span>,
	<span class="identifier">XYZ</span> <span class="parameter">direction</span>
)</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">NewExtrusionForm</span> ( 
	<span class="parameter">isSolid</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>,
	<span class="parameter">profile</span> <span class="keyword">As</span> <span class="identifier">ReferenceArray</span>,
	<span class="parameter">direction</span> <span class="keyword">As</span> <span class="identifier">XYZ</span>
) <span class="keyword">As</span> <span class="identifier">Form</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="identifier">Form</span>^ <span class="identifier">NewExtrusionForm</span>(
	<span class="identifier">bool</span> <span class="parameter">isSolid</span>, 
	<span class="identifier">ReferenceArray</span>^ <span class="parameter">profile</span>, 
	<span class="identifier">XYZ</span>^ <span class="parameter">direction</span>
)</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">member</span> <span class="identifier">NewExtrusionForm</span> : 
        <span class="parameter">isSolid</span> : <span class="identifier">bool</span> * 
        <span class="parameter">profile</span> : <span class="identifier">ReferenceArray</span> * 
        <span class="parameter">direction</span> : <span class="identifier">XYZ</span> <span class="keyword">-&gt;</span> <span class="identifier">Form</span> </pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">isSolid</span>  <a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noopener noreferrer">Boolean</a></dt><dd>Indicates if the Form is Solid or Void.</dd><dt class="has-text-weight-normal"><span class="parameter">profile</span>  <a href="bc9192b5-6666-a8de-0128-87dae479fd6a.htm">ReferenceArray</a></dt><dd>The profile of extrusion. It should consist of only one curve loop.</dd><dt class="has-text-weight-normal"><span class="parameter">direction</span>  <a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">XYZ</a></dt><dd>The direction of extrusion, with its length the length of the extrusion. The direction must be perpendicular to the plane determined by profile. The length of vector must be non-zero.</dd></dl><h4>Return Value</h4><a href="49f6ae4c-1629-98ef-d9a9-799bb1fd43ec.htm">Form</a><br />If creation was successful new form is returned.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDEC')" onkeypress="SectionExpandCollapse_CheckKey('IDEC', event)" tabindex="0"><img id="IDECToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="IDECSection" class="collapsibleSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">InvalidOperationException</a></td><td>
Thrown when creation is attempted in Conceptual Mass, 2D, or other family where extrusions cannot be created.
</td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDGC')" onkeypress="SectionExpandCollapse_CheckKey('IDGC', event)" tabindex="0"><img id="IDGCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDGCSection" class="collapsibleSection"><div id="IDAGC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAGC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAGC','cs','1','4');return false;">C#</a></div><div id="IDAGC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAGC','vb','2','4');return false;">VB</a></div><div id="IDAGC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAGC','cpp','3','4');return false;">C++</a></div><div id="IDAGC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAGC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAGC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAGC');return false;" title="Copy">Copy</a></div></div><div id="IDAGC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">private</span> Form CreateExtrusionForm(Autodesk.Revit.DB.Document document)
{
    Form extrusionForm = <span class="highlight-keyword">null</span>;

    <span class="highlight-comment">// Create one profile</span>
    ReferenceArray ref_ar = <span class="highlight-keyword">new</span> ReferenceArray();

    XYZ ptA = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>);
    XYZ ptB = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">90</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>);
    ModelCurve modelcurve = MakeLine(document, ptA, ptB);
    ref_ar.Append(modelcurve.GeometryCurve.Reference);

    ptA = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">90</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>);
    ptB = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">90</span>, <span class="highlight-number">0</span>);
    modelcurve = MakeLine(document, ptA, ptB);
    ref_ar.Append(modelcurve.GeometryCurve.Reference);

    ptA = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">90</span>, <span class="highlight-number">0</span>);
    ptB = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>);
    modelcurve = MakeLine(document, ptA, ptB);
    ref_ar.Append(modelcurve.GeometryCurve.Reference);

    <span class="highlight-comment">// The extrusion form direction</span>
    XYZ direction = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">50</span>);

    extrusionForm = document.FamilyCreate.NewExtrusionForm(<span class="highlight-keyword">true</span>, ref_ar, direction);

    <span class="highlight-keyword">int</span> profileCount = extrusionForm.ProfileCount;

    <span class="highlight-keyword">return</span> extrusionForm;
}

<span class="highlight-keyword">public</span> ModelCurve MakeLine(Document doc, XYZ ptA, XYZ ptB)
{
    Autodesk.Revit.ApplicationServices.Application app = doc.Application;
    <span class="highlight-comment">// Create plane by the points</span>
    Line line = Line.CreateBound(ptA, ptB);
    XYZ norm = ptA.CrossProduct(ptB);
    <span class="highlight-keyword">if</span> (norm.IsZeroLength()) norm = XYZ.BasisZ;
    Plane plane = Plane.CreateByNormalAndOrigin(norm, ptB);
    SketchPlane skplane = SketchPlane.Create(doc, plane);
    <span class="highlight-comment">// Create line here</span>
    ModelCurve modelcurve = doc.FamilyCreate.NewModelCurve(line, skplane);
    <span class="highlight-keyword">return</span> modelcurve;
}</pre></div><div id="IDAGC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Function</span> CreateExtrusionForm(document <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Document) <span class="highlight-keyword">As</span> Form
    <span class="highlight-keyword">Dim</span> extrusionForm <span class="highlight-keyword">As</span> Form = <span class="highlight-keyword">Nothing</span>

    <span class="highlight-comment">' Create one profile</span>
    <span class="highlight-keyword">Dim</span> ref_ar <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> ReferenceArray()

    <span class="highlight-keyword">Dim</span> ptA <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>)
    <span class="highlight-keyword">Dim</span> ptB <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">90</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>)
    <span class="highlight-keyword">Dim</span> modelcurve <span class="highlight-keyword">As</span> ModelCurve = MakeLine(document, ptA, ptB)
    ref_ar.Append(modelcurve.GeometryCurve.Reference)

    ptA = <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">90</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>)
    ptB = <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">90</span>, <span class="highlight-number">0</span>)
    modelcurve = MakeLine(document, ptA, ptB)
    ref_ar.Append(modelcurve.GeometryCurve.Reference)

    ptA = <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">90</span>, <span class="highlight-number">0</span>)
    ptB = <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>)
    modelcurve = MakeLine(document, ptA, ptB)
    ref_ar.Append(modelcurve.GeometryCurve.Reference)

    <span class="highlight-comment">' The extrusion form direction</span>
    <span class="highlight-keyword">Dim</span> direction <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">50</span>)

    extrusionForm = document.FamilyCreate.NewExtrusionForm(<span class="highlight-keyword">True</span>, ref_ar, direction)

    <span class="highlight-keyword">Dim</span> profileCount <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = extrusionForm.ProfileCount

    <span class="highlight-keyword">Return</span> extrusionForm
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>

<span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> MakeLine(doc <span class="highlight-keyword">As</span> Document, ptA <span class="highlight-keyword">As</span> XYZ, ptB <span class="highlight-keyword">As</span> XYZ) <span class="highlight-keyword">As</span> ModelCurve
    <span class="highlight-keyword">Dim</span> app <span class="highlight-keyword">As</span> Autodesk.Revit.ApplicationServices.Application = doc.Application
    <span class="highlight-comment">' Create plane by the points</span>
    <span class="highlight-keyword">Dim</span> line__1 <span class="highlight-keyword">As</span> Line = Line.CreateBound(ptA, ptB)
    <span class="highlight-keyword">Dim</span> norm <span class="highlight-keyword">As</span> XYZ = ptA.CrossProduct(ptB)
    <span class="highlight-keyword">If</span> norm.IsZeroLength() <span class="highlight-keyword">Then</span>
        norm = XYZ.BasisZ
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
 <span class="highlight-keyword">Dim</span> plane <span class="highlight-keyword">As</span> Plane = plane.CreateByNormalAndOrigin(norm, ptB)
    <span class="highlight-keyword">Dim</span> skplane <span class="highlight-keyword">As</span> SketchPlane = SketchPlane.Create(doc, plane)
    <span class="highlight-comment">' Create line here</span>
    <span class="highlight-keyword">Dim</span> modelcurve <span class="highlight-keyword">As</span> ModelCurve = doc.FamilyCreate.NewModelCurve(line__1, skplane)
    <span class="highlight-keyword">Return</span> modelcurve
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></pre></div><div id="IDAGC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDAGC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="a7622967-1381-c17f-ed04-1ebe40da0440.htm">FamilyItemFactory Class</a></div><div><a href="ded320da-058a-4edd-0418-0582389559a7.htm">Autodesk.Revit.Creation Namespace</a></div></div></div></div>
        </div></body></html>
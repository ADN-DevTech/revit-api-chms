<html><head><title>AssetProperty.AddCopyAsConnectedAsset Method</title><meta name="Title" content="AddCopyAsConnectedAsset Method" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.DB.Visual.AssetProperty.AddCopyAsConnectedAsset(Autodesk.Revit.DB.Visual.Asset)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="AssetProperty.AddCopyAsConnectedAsset method" /><meta name="System.Keywords" content="AddCopyAsConnectedAsset method" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.Visual.AssetProperty.AddCopyAsConnectedAsset" /><meta name="Microsoft.Help.F1" content="AssetProperty.AddCopyAsConnectedAsset" /><meta name="Microsoft.Help.F1" content="AddCopyAsConnectedAsset" /><meta name="container" content="Autodesk.Revit.DB.Visual" /><meta name="file" content="dce50799-b956-e3f9-86c2-e67aaf78c69c" /><meta name="guid" content="dce50799-b956-e3f9-86c2-e67aaf78c69c" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="Makes a copy of the asset and connects it to this property." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /></head><body onload="SetDefaultLanguage('cs');"><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Asset<wbr />Property<span id="LSTA0D80796_0" data-languageSpecificText="cpp=::|nu=."></span>Add<wbr />Copy<wbr />As<wbr />Connected<wbr />Asset Method</h1></td></tr></table><div class="summary">
   Makes a copy of the asset and connects it to this property.
</div><br /><strong>Namespace:</strong> <a href="f5a10581-6ac2-be19-0e32-f87d05bc8b83.htm">Autodesk.Revit.DB.Visual</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">void</span> <span class="identifier">AddCopyAsConnectedAsset</span>(
	<span class="identifier">Asset</span> <span class="parameter">pRenderingAsset</span>
)</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Sub</span> <span class="identifier">AddCopyAsConnectedAsset</span> ( 
	<span class="parameter">pRenderingAsset</span> <span class="keyword">As</span> <span class="identifier">Asset</span>
)</pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">void</span> <span class="identifier">AddCopyAsConnectedAsset</span>(
	<span class="identifier">Asset</span>^ <span class="parameter">pRenderingAsset</span>
)</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">member</span> <span class="identifier">AddCopyAsConnectedAsset</span> : 
        <span class="parameter">pRenderingAsset</span> : <span class="identifier">Asset</span> <span class="keyword">-&gt;</span> <span class="keyword">unit</span> </pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">pRenderingAsset</span>  <a href="598e104b-b6ec-9ebe-7a93-ec96b8cbeba9.htm">Asset</a></dt><dd>
   The asset to duplicate and associate with this property as a connected asset.
</dd></dl></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDCC')" onkeypress="SectionExpandCollapse_CheckKey('IDCC', event)" tabindex="0"><img id="IDCCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="IDCCSection" class="collapsibleSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">ArgumentNullException</a></td><td>
   A non-optional argument was null
</td></tr><tr><td><a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">InvalidOperationException</a></td><td>
   The asset property is not editable.
   -or-
   Cannot check validity for a property not being edited in AppearanceAssetEditScope.
   -or-
   Asset property is already connected to one asset.
</td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDFC')" onkeypress="SectionExpandCollapse_CheckKey('IDFC', event)" tabindex="0"><img id="IDFCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDFCSection" class="collapsibleSection"><div id="IDAFC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAFC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAFC','cs','1','4');return false;">C#</a></div><div id="IDAFC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAFC','vb','2','4');return false;">VB</a></div><div id="IDAFC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAFC','cpp','3','4');return false;">C++</a></div><div id="IDAFC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAFC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAFC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAFC');return false;" title="Copy">Copy</a></div></div><div id="IDAFC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> CopyAndAddConnectedAsset(Material sourceMaterial, Material targetMaterial)
{
   Document doc = targetMaterial.Document;

   <span class="highlight-comment">// Get the appearance asset of the source material</span>

   ElementId otherAppearanceAssetId = sourceMaterial.AppearanceAssetId;

   AppearanceAssetElement otherAssetElem = doc.GetElement(otherAppearanceAssetId) <span class="highlight-keyword">as</span> AppearanceAssetElement;

   Asset otherAsset = otherAssetElem.GetRenderingAsset();

   <span class="highlight-comment">// Get the connected asset of the source material appearance asset (that contains the bitmap)</span>

   AssetProperty otherGenericDiffuseProperty = otherAsset.FindByName(Generic.GenericDiffuse);

   Asset otherGenericDiffuseConnectedAsset = otherGenericDiffuseProperty.GetSingleConnectedAsset();

   <span class="highlight-keyword">using</span> (Transaction t = <span class="highlight-keyword">new</span> Transaction(doc, <span class="highlight-literal">"Change a connected asset by a copy"</span>))
   {
      t.Start();

      <span class="highlight-keyword">using</span> (AppearanceAssetEditScope editScope = <span class="highlight-keyword">new</span> AppearanceAssetEditScope(doc))
      {
         ElementId appearanceAssetId = targetMaterial.AppearanceAssetId;

         Asset editableAsset = editScope.Start(appearanceAssetId);   <span class="highlight-comment">// returns an editable copy of the appearance asset                   </span>

         AssetProperty genericDiffuseProperty = editableAsset.FindByName(Generic.GenericDiffuse);

         <span class="highlight-comment">// Find the connected asset (with a shortcut to get the only one)</span>

         Asset genericDiffuseConnectedAsset = genericDiffuseProperty.GetSingleConnectedAsset();

         <span class="highlight-keyword">if</span> (genericDiffuseConnectedAsset == <span class="highlight-keyword">null</span>)
         {
            <span class="highlight-comment">// Target material has only a color for �GenericDiffuse�</span>
            <span class="highlight-comment">// This will assign a bitmap to it instead</span>
            <span class="highlight-comment">// by making a copy of the asset and use it as connected asset</span>
            genericDiffuseProperty.AddCopyAsConnectedAsset(otherGenericDiffuseConnectedAsset);
         }       

         editScope.Commit(<span class="highlight-keyword">true</span>);
      }

      t.Commit();
   }
}</pre></div><div id="IDAFC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> CopyAndAddConnectedAsset(sourceMaterial <span class="highlight-keyword">As</span> Material, targetMaterial <span class="highlight-keyword">As</span> Material)
    <span class="highlight-keyword">Dim</span> doc <span class="highlight-keyword">As</span> Document = targetMaterial.Document

    <span class="highlight-comment">' Get the appearance asset of the source material</span>

    <span class="highlight-keyword">Dim</span> otherAppearanceAssetId <span class="highlight-keyword">As</span> ElementId = sourceMaterial.AppearanceAssetId

    <span class="highlight-keyword">Dim</span> otherAssetElem <span class="highlight-keyword">As</span> AppearanceAssetElement = <span class="highlight-keyword">TryCast</span>(doc.GetElement(otherAppearanceAssetId), AppearanceAssetElement)

    <span class="highlight-keyword">Dim</span> otherAsset <span class="highlight-keyword">As</span> Asset = otherAssetElem.GetRenderingAsset()

 <span class="highlight-comment">' Get the connected asset of the source material appearance asset (that contains the bitmap)</span>

 <span class="highlight-keyword">Dim</span> otherGenericDiffuseProperty <span class="highlight-keyword">As</span> AssetProperty = otherAsset.FindByName(Generic.GenericDiffuse)

 <span class="highlight-keyword">Dim</span> otherGenericDiffuseConnectedAsset <span class="highlight-keyword">As</span> Asset = otherGenericDiffuseProperty.GetSingleConnectedAsset()

    <span class="highlight-keyword">Using</span> t <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Transaction(doc, <span class="highlight-literal">"Change a connected asset by a copy"</span>)
        t.Start()

        <span class="highlight-keyword">Using</span> editScope <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> AppearanceAssetEditScope(doc)
            <span class="highlight-keyword">Dim</span> appearanceAssetId <span class="highlight-keyword">As</span> ElementId = targetMaterial.AppearanceAssetId

            <span class="highlight-keyword">Dim</span> editableAsset <span class="highlight-keyword">As</span> Asset = editScope.Start(appearanceAssetId)
       <span class="highlight-comment">' returns an editable copy of the appearance asset                   </span>
       <span class="highlight-keyword">Dim</span> genericDiffuseProperty <span class="highlight-keyword">As</span> AssetProperty = editableAsset.FindByName(Generic.GenericDiffuse)

       <span class="highlight-comment">' Find the connected asset (with a shortcut to get the only one)</span>

       <span class="highlight-keyword">Dim</span> genericDiffuseConnectedAsset <span class="highlight-keyword">As</span> Asset = genericDiffuseProperty.GetSingleConnectedAsset()

            <span class="highlight-keyword">If</span> genericDiffuseConnectedAsset <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
                <span class="highlight-comment">' Target material has only a color for “GenericDiffuse”</span>
                <span class="highlight-comment">' This will assign a bitmap to it instead</span>
                <span class="highlight-comment">' by making a copy of the asset and use it as connected asset</span>
                genericDiffuseProperty.AddCopyAsConnectedAsset(otherGenericDiffuseConnectedAsset)
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

            editScope.Commit(<span class="highlight-keyword">True</span>)
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>

        t.Commit()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div><div id="IDAFC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDAFC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="7be89499-d011-ab43-4715-0ee6f9335970.htm">AssetProperty Class</a></div><div><a href="f5a10581-6ac2-be19-0e32-f87d05bc8b83.htm">Autodesk.Revit.DB.Visual Namespace</a></div></div></div></div>
        </div></body></html>
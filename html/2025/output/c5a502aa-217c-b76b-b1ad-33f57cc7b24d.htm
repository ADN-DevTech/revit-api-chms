<html><head><title>CompoundStructureLayer.MaterialId Property</title><meta name="Title" content="MaterialId Property" /><meta name="Microsoft.Help.Id" content="P:Autodesk.Revit.DB.CompoundStructureLayer.MaterialId" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="CompoundStructureLayer.MaterialId property" /><meta name="System.Keywords" content="MaterialId property" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.CompoundStructureLayer.MaterialId" /><meta name="Microsoft.Help.F1" content="CompoundStructureLayer.MaterialId" /><meta name="Microsoft.Help.F1" content="MaterialId" /><meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="c5a502aa-217c-b76b-b1ad-33f57cc7b24d" /><meta name="guid" content="c5a502aa-217c-b76b-b1ad-33f57cc7b24d" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="Id of the material assigned to this layer." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /></head><body onload="SetDefaultLanguage('cs');"><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Compound<wbr />Structure<wbr />Layer<span id="LSTEFC3771A_0" data-languageSpecificText="cpp=::|nu=."></span>Material<wbr />Id Property</h1></td></tr></table><div class="summary">
   Id of the material assigned to this layer.
</div><br /><strong>Namespace:</strong> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">ElementId</span> <span class="identifier">MaterialId</span> { <span class="keyword">get</span>; <span class="keyword">set</span>; }</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Property</span> <span class="identifier">MaterialId</span> <span class="keyword">As</span> <span class="identifier">ElementId</span>
	<span class="keyword">Get</span>
	<span class="keyword">Set</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">property</span> <span class="identifier">ElementId</span>^ <span class="identifier">MaterialId</span> {
	<span class="identifier">ElementId</span>^ <span class="keyword">get</span> ();
	<span class="keyword">void</span> <span class="keyword">set</span> (<span class="identifier">ElementId</span>^ <span class="parameter">value</span>);
}</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">member</span> <span class="identifier">MaterialId</span> : <span class="identifier">ElementId</span> <span class="keyword">with</span> <span class="keyword">get</span>, <span class="keyword">set</span></pre></div></div></div><h4>Property Value</h4><a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a><br />
   The default is InvalidElementId.
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDCC')" onkeypress="SectionExpandCollapse_CheckKey('IDCC', event)" tabindex="0"><img id="IDCCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="IDCCSection" class="collapsibleSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">ArgumentNullException</a></td><td>
   When setting this property: A non-optional argument was null
</td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDC')" onkeypress="SectionExpandCollapse_CheckKey('IDDC', event)" tabindex="0"><img id="IDDCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDDCSection" class="collapsibleSection"><div id="IDADC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDADC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDADC','cs','1','4');return false;">C#</a></div><div id="IDADC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDADC','vb','2','4');return false;">VB</a></div><div id="IDADC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDADC','cpp','3','4');return false;">C++</a></div><div id="IDADC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDADC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDADC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDADC');return false;" title="Copy">Copy</a></div></div><div id="IDADC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> GetWallLayerMaterial(Autodesk.Revit.DB.Document document, Wall wall)
{
    <span class="highlight-comment">// get WallType of wall</span>
    WallType aWallType = wall.WallType;
    <span class="highlight-comment">// Only Basic Wall has compoundStructure</span>
    <span class="highlight-keyword">if</span> (WallKind.Basic == aWallType.Kind)
    {
        <span class="highlight-comment">// Get CompoundStructure</span>
        CompoundStructure comStruct = aWallType.GetCompoundStructure();
        Categories allCategories = document.Settings.Categories;

        <span class="highlight-comment">// Get the category OST_Walls default Material; </span>
        <span class="highlight-comment">// use if that layer's default Material is &lt;By Category&gt;</span>
        Category wallCategory = allCategories.get_Item(BuiltInCategory.OST_Walls);
        Autodesk.Revit.DB.Material wallMaterial = wallCategory.Material;

        <span class="highlight-keyword">foreach</span> (CompoundStructureLayer structLayer <span class="highlight-keyword">in</span> comStruct.GetLayers())
        {
            Autodesk.Revit.DB.Material layerMaterial = document.GetElement(structLayer.MaterialId) <span class="highlight-keyword">as</span> Material;

            <span class="highlight-comment">// If CompoundStructureLayer's Material is specified, use default</span>
            <span class="highlight-comment">// Material of its Category</span>
            <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> == layerMaterial)
            {
                <span class="highlight-keyword">switch</span> (structLayer.Function)
                {
                    <span class="highlight-keyword">case</span> MaterialFunctionAssignment.Finish1:
                        layerMaterial = 
                            allCategories.get_Item(BuiltInCategory.OST_WallsFinish1).Material;
                        <span class="highlight-keyword">break</span>;
                    <span class="highlight-keyword">case</span> MaterialFunctionAssignment.Finish2:
                        layerMaterial = 
                            allCategories.get_Item(BuiltInCategory.OST_WallsFinish2).Material;
                        <span class="highlight-keyword">break</span>;
                    <span class="highlight-keyword">case</span> MaterialFunctionAssignment.Membrane:
                        layerMaterial = 
                            allCategories.get_Item(BuiltInCategory.OST_WallsMembrane).Material;
                        <span class="highlight-keyword">break</span>;
                    <span class="highlight-keyword">case</span> MaterialFunctionAssignment.Structure:
                        layerMaterial =  
                            allCategories.get_Item(BuiltInCategory.OST_WallsStructure).Material;
                        <span class="highlight-keyword">break</span>;
                    <span class="highlight-keyword">case</span> MaterialFunctionAssignment.Substrate:
                        layerMaterial = 
                            allCategories.get_Item(BuiltInCategory.OST_WallsSubstrate).Material;
                        <span class="highlight-keyword">break</span>;
                    <span class="highlight-keyword">case</span> MaterialFunctionAssignment.Insulation:
                        layerMaterial = 
                            allCategories.get_Item(BuiltInCategory.OST_WallsInsulation).Material;
                        <span class="highlight-keyword">break</span>;
                    <span class="highlight-keyword">default</span>:
                        <span class="highlight-comment">// It is impossible to reach here</span>
                        <span class="highlight-keyword">break</span>;
                }
                <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> == layerMaterial)
                {
                    <span class="highlight-comment">// CompoundStructureLayer's default Material is its SubCategory</span>
                    layerMaterial = wallMaterial;
                }
            }
            TaskDialog.Show(<span class="highlight-literal">"Revit"</span>,<span class="highlight-literal">"Layer Material: "</span> + layerMaterial);
        }
    }
}</pre></div><div id="IDADC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> GetWallLayerMaterial(document <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Document, wall <span class="highlight-keyword">As</span> Wall)
    <span class="highlight-comment">' get WallType of wall</span>
    <span class="highlight-keyword">Dim</span> aWallType <span class="highlight-keyword">As</span> WallType = wall.WallType
    <span class="highlight-comment">' Only Basic Wall has compoundStructure</span>
    <span class="highlight-keyword">If</span> WallKind.Basic = aWallType.Kind <span class="highlight-keyword">Then</span>
        <span class="highlight-comment">' Get CompoundStructure</span>
        <span class="highlight-keyword">Dim</span> comStruct <span class="highlight-keyword">As</span> CompoundStructure = aWallType.GetCompoundStructure()
        <span class="highlight-keyword">Dim</span> allCategories <span class="highlight-keyword">As</span> Categories = document.Settings.Categories

        <span class="highlight-comment">' Get the category OST_Walls default Material; </span>
        <span class="highlight-comment">' use if that layer's default Material is &lt;By Category&gt;</span>
        <span class="highlight-keyword">Dim</span> wallCategory <span class="highlight-keyword">As</span> Category = allCategories.Item(BuiltInCategory.OST_Walls)
        <span class="highlight-keyword">Dim</span> wallMaterial <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Material = wallCategory.Material

        <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> structLayer <span class="highlight-keyword">As</span> CompoundStructureLayer <span class="highlight-keyword">In</span> comStruct.GetLayers()
            <span class="highlight-keyword">Dim</span> layerMaterial <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Material = <span class="highlight-keyword">TryCast</span>(document.GetElement(structLayer.MaterialId), Material)

            <span class="highlight-comment">' If CompoundStructureLayer's Material is specified, use default</span>
            <span class="highlight-comment">' Material of its Category</span>
            <span class="highlight-keyword">If</span> layerMaterial <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
                <span class="highlight-keyword">Select</span> <span class="highlight-keyword">Case</span> structLayer.[<span class="highlight-keyword">Function</span>]
                    <span class="highlight-keyword">Case</span> MaterialFunctionAssignment.Finish1
                        layerMaterial = allCategories.Item(BuiltInCategory.OST_WallsFinish1).Material
                        <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
                    <span class="highlight-keyword">Case</span> MaterialFunctionAssignment.Finish2
                        layerMaterial = allCategories.Item(BuiltInCategory.OST_WallsFinish2).Material
                        <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
                    <span class="highlight-keyword">Case</span> MaterialFunctionAssignment.Membrane
                        layerMaterial = allCategories.Item(BuiltInCategory.OST_WallsMembrane).Material
                        <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
                    <span class="highlight-keyword">Case</span> MaterialFunctionAssignment.[<span class="highlight-keyword">Structure</span>]
                        layerMaterial = allCategories.Item(BuiltInCategory.OST_WallsStructure).Material
                        <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
                    <span class="highlight-keyword">Case</span> MaterialFunctionAssignment.Substrate
                        layerMaterial = allCategories.Item(BuiltInCategory.OST_WallsSubstrate).Material
                        <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
                    <span class="highlight-keyword">Case</span> MaterialFunctionAssignment.Insulation
                        layerMaterial = allCategories.Item(BuiltInCategory.OST_WallsInsulation).Material
                        <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
                    <span class="highlight-keyword">Case</span> <span class="highlight-keyword">Else</span>
                        <span class="highlight-comment">' It is impossible to reach here</span>
                        <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">Select</span>
                <span class="highlight-keyword">If</span> layerMaterial <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
                    <span class="highlight-comment">' CompoundStructureLayer's default Material is its SubCategory</span>
                    layerMaterial = wallMaterial
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
            TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-literal">"Layer Material: "</span> &amp; layerMaterial.ToString())
        <span class="highlight-keyword">Next</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div><div id="IDADC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDADC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="faece83a-6d49-41b0-2713-fe6cfaa5a3b5.htm">CompoundStructureLayer Class</a></div><div><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div>
        </div></body></html>
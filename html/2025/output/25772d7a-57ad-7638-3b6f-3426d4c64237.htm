<html><head><title>TextElement.GetMinimumAllowedWidth(Document, ElementId) Method</title><meta name="Title" content="GetMinimumAllowedWidth(Document, ElementId) Method" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.DB.TextElement.GetMinimumAllowedWidth(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.ElementId)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="25772d7a-57ad-7638-3b6f-3426d4c64237" /><meta name="guid" content="25772d7a-57ad-7638-3b6f-3426d4c64237" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="Returns the minimum width a text element can be created with." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /></head><body onload="SetDefaultLanguage('cs');"><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Text<wbr />Element<span id="LSTCBCE1052_0" data-languageSpecificText="cpp=::|nu=."></span>Get<wbr />Minimum<wbr />Allowed<wbr />Width(Document, Element<wbr />Id) Method</h1></td></tr></table><div class="summary">
   Returns the minimum width a text element can be created with.
</div><br /><strong>Namespace:</strong> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">double</span> <span class="identifier">GetMinimumAllowedWidth</span>(
	<span class="identifier">Document</span> <span class="parameter">cdda</span>,
	<span class="identifier">ElementId</span> <span class="parameter">typeId</span>
)</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">GetMinimumAllowedWidth</span> ( 
	<span class="parameter">cdda</span> <span class="keyword">As</span> <span class="identifier">Document</span>,
	<span class="parameter">typeId</span> <span class="keyword">As</span> <span class="identifier">ElementId</span>
) <span class="keyword">As</span> <span class="identifier">Double</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="identifier">double</span> <span class="identifier">GetMinimumAllowedWidth</span>(
	<span class="identifier">Document</span>^ <span class="parameter">cdda</span>, 
	<span class="identifier">ElementId</span>^ <span class="parameter">typeId</span>
)</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">GetMinimumAllowedWidth</span> : 
        <span class="parameter">cdda</span> : <span class="identifier">Document</span> * 
        <span class="parameter">typeId</span> : <span class="identifier">ElementId</span> <span class="keyword">-&gt;</span> <span class="identifier">float</span> </pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">cdda</span>  <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a></dt><dd>
   A document containing the new text element's type
</dd><dt class="has-text-weight-normal"><span class="parameter">typeId</span>  <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a></dt><dd>
   Id of the text type
</dd></dl><h4>Return Value</h4><a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a><br />
   The minimum allowed width in paper space [ft].
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDFC')" onkeypress="SectionExpandCollapse_CheckKey('IDFC', event)" tabindex="0"><img id="IDFCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="IDFCSection" class="collapsibleSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">ArgumentNullException</a></td><td>
   A non-optional argument was null
</td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection">
   Note that it is not necessarily a constant; it can be affected
   by properties of the text type, such as the width factor.
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDHC')" onkeypress="SectionExpandCollapse_CheckKey('IDHC', event)" tabindex="0"><img id="IDHCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDHCSection" class="collapsibleSection"><div id="IDAHC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAHC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAHC','cs','1','4');return false;">C#</a></div><div id="IDAHC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAHC','vb','2','4');return false;">VB</a></div><div id="IDAHC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAHC','cpp','3','4');return false;">C++</a></div><div id="IDAHC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAHC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAHC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAHC');return false;" title="Copy">Copy</a></div></div><div id="IDAHC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> TextNote AddNewTextNote(UIDocument uiDoc)
{
    Document doc = uiDoc.Document;
    XYZ textLoc = uiDoc.Selection.PickPoint(<span class="highlight-literal">"Pick a point for sample text."</span>);
    ElementId defaultTextTypeId = doc.GetDefaultElementTypeId(ElementTypeGroup.TextNoteType);
    <span class="highlight-keyword">double</span> noteWidth = .<span class="highlight-number">2</span>;

    <span class="highlight-comment">// make sure note width works for the text type</span>
    <span class="highlight-keyword">double</span> minWidth = TextNote.GetMinimumAllowedWidth(doc, defaultTextTypeId);
    <span class="highlight-keyword">double</span> maxWidth = TextNote.GetMaximumAllowedWidth(doc, defaultTextTypeId);
    <span class="highlight-keyword">if</span> (noteWidth &lt; minWidth)
    {
        noteWidth = minWidth;
    }
    <span class="highlight-keyword">else</span> <span class="highlight-keyword">if</span> (noteWidth &gt; maxWidth)
    {
        noteWidth = maxWidth;
    }

    TextNoteOptions opts = <span class="highlight-keyword">new</span> TextNoteOptions(defaultTextTypeId);
    opts.HorizontalAlignment = HorizontalTextAlignment.Left;
    opts.Rotation = Math.PI / <span class="highlight-number">4</span>;

    TextNote textNote = TextNote.Create(doc, doc.ActiveView.Id, textLoc, noteWidth, <span class="highlight-literal">"New sample text"</span>, opts);

    <span class="highlight-keyword">return</span> textNote;
}</pre></div><div id="IDAHC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> AddNewTextNote(uiDoc <span class="highlight-keyword">As</span> UIDocument) <span class="highlight-keyword">As</span> TextNote
    <span class="highlight-keyword">Dim</span> doc <span class="highlight-keyword">As</span> Document = uiDoc.Document
    <span class="highlight-keyword">Dim</span> textLoc <span class="highlight-keyword">As</span> XYZ = uiDoc.Selection.PickPoint(<span class="highlight-literal">"Pick a point for sample text."</span>)
    <span class="highlight-keyword">Dim</span> defaultTextTypeId <span class="highlight-keyword">As</span> ElementId = doc.GetDefaultElementTypeId(ElementTypeGroup.TextNoteType)
    <span class="highlight-keyword">Dim</span> noteWidth <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = <span class="highlight-number">0.2</span>

    <span class="highlight-comment">' make sure note width works for the text type</span>
    <span class="highlight-keyword">Dim</span> minWidth <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = TextNote.GetMinimumAllowedWidth(doc, defaultTextTypeId)
    <span class="highlight-keyword">Dim</span> maxWidth <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = TextNote.GetMaximumAllowedWidth(doc, defaultTextTypeId)
    <span class="highlight-keyword">If</span> noteWidth &lt; minWidth <span class="highlight-keyword">Then</span>
        noteWidth = minWidth
    <span class="highlight-keyword">ElseIf</span> noteWidth &gt; maxWidth <span class="highlight-keyword">Then</span>
        noteWidth = maxWidth
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Dim</span> opts <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> TextNoteOptions(defaultTextTypeId)
    opts.HorizontalAlignment = HorizontalTextAlignment.Left
    opts.Rotation = Math.PI / <span class="highlight-number">4</span>

    <span class="highlight-keyword">Dim</span> textNote__1 <span class="highlight-keyword">As</span> TextNote = TextNote.Create(doc, doc.ActiveView.Id, textLoc, noteWidth, <span class="highlight-literal">"New sample text"</span>, opts)

    <span class="highlight-keyword">Return</span> textNote__1
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></pre></div><div id="IDAHC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDAHC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="013e58c3-f3d2-d976-89f0-ff4ff701951d.htm">TextElement Class</a></div><div><a href="aa4e4123-2e4e-880e-e410-ec9fe2045628.htm">GetMinimumAllowedWidth Overload</a></div><div><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div>
        </div></body></html>
<html><head><title>RebarFreeFormAccessor.GetHookTypeIdAtIndex Method</title><meta name="Title" content="GetHookTypeIdAtIndex Method" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.DB.Structure.RebarFreeFormAccessor.GetHookTypeIdAtIndex(System.Int32,System.Int32)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="RebarFreeFormAccessor.GetHookTypeIdAtIndex method" /><meta name="System.Keywords" content="GetHookTypeIdAtIndex method" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.Structure.RebarFreeFormAccessor.GetHookTypeIdAtIndex" /><meta name="Microsoft.Help.F1" content="RebarFreeFormAccessor.GetHookTypeIdAtIndex" /><meta name="Microsoft.Help.F1" content="GetHookTypeIdAtIndex" /><meta name="container" content="Autodesk.Revit.DB.Structure" /><meta name="file" content="27a70740-3367-6509-aeae-e58fb578e763" /><meta name="guid" content="27a70740-3367-6509-aeae-e58fb578e763" /><meta name="Description" content="Gets the id of the RebarHookType that is applied to this Rebar at the bar with index barPositionIndex at the specified end." /></head><body onload="SetDefaultLanguage('cs');"><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Rebar<wbr />Free<wbr />Form<wbr />Accessor<span id="LST5B6D1F9C_0" data-languageSpecificText="cpp=::|nu=."></span>Get<wbr />Hook<wbr />Type<wbr />Id<wbr />At<wbr />Index Method</h1></td></tr></table><div class="summary">
   Gets the id of the RebarHookType that is applied to this Rebar at the bar with index barPositionIndex at the specified end.
</div><br /><strong>Namespace:</strong> <a href="d586b341-f687-9d90-e96d-255806b7d4fc.htm">Autodesk.Revit.DB.Structure</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">ElementId</span> <span class="identifier">GetHookTypeIdAtIndex</span>(
	<span class="identifier">int</span> <span class="parameter">barPositionIndex</span>,
	<span class="identifier">int</span> <span class="parameter">end</span>
)</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">GetHookTypeIdAtIndex</span> ( 
	<span class="parameter">barPositionIndex</span> <span class="keyword">As</span> <span class="identifier">Integer</span>,
	<span class="parameter">end</span> <span class="keyword">As</span> <span class="identifier">Integer</span>
) <span class="keyword">As</span> <span class="identifier">ElementId</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="identifier">ElementId</span>^ <span class="identifier">GetHookTypeIdAtIndex</span>(
	<span class="identifier">int</span> <span class="parameter">barPositionIndex</span>, 
	<span class="identifier">int</span> <span class="parameter">end</span>
)</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">member</span> <span class="identifier">GetHookTypeIdAtIndex</span> : 
        <span class="parameter">barPositionIndex</span> : <span class="identifier">int</span> * 
        <span class="parameter">end</span> : <span class="identifier">int</span> <span class="keyword">-&gt;</span> <span class="identifier">ElementId</span> </pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">barPositionIndex</span>  <a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noopener noreferrer">Int32</a></dt><dd>
   An index between 0 and (NumberOfBarPositions-1).
</dd><dt class="has-text-weight-normal"><span class="parameter">end</span>  <a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noopener noreferrer">Int32</a></dt><dd>
   0 for the start hook, 1 for the end hook.
</dd></dl><h4>Return Value</h4><a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a><br />
   The id of a RebarHookType, or invalidElementId if the rebar has no hook at the specified end.
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDFC')" onkeypress="SectionExpandCollapse_CheckKey('IDFC', event)" tabindex="0"><img id="IDFCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="IDFCSection" class="collapsibleSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="60f148c9-ece0-a6bb-4e12-bb4a9c8c8a24.htm">ArgumentOutOfRangeException</a></td><td>
   end must be 0 or 1.
   -or-
   barPositionIndex is not in the range [ 0, NumberOfBarPositions-1 ].
</td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection"><p>If this Rebar has Workshop Instructions set to Straight will return the same value for all barPositionIndex between 0 and (NumberOfBarPositions-1). This value will be the same as Rebar.GetHookTypeId(int end).</p><p>If this Rebar has Workshop Instructions set to Bent there are different cases:
   <ul><li>All bars are matched exactly with a shape. In this case will return the same value for all barPositionIndex between 0 and (NumberOfBarPositions-1). This value will be the same as Rebar.GetHookTypeId(int end).</li><li>All bars are matched in reversed order with a shape. In this case will return the same value for all barPositionIndex between 0 and (NumberOfBarPositions-1). This value will be the same as Rebar.GetHookTypeId(int end).</li><li>Some bars are matched in reversed order and the others are matched exactly with a shape. In this case for bars that are matched reversed will return the id of the RebarHookType at the opposite end. For the others bars will return the same as Rebar.GetHookTypeId(int end).</li></ul></p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="bf146aa3-f780-646e-c3cd-42e7a61d18e6.htm">RebarFreeFormAccessor Class</a></div><div><a href="d586b341-f687-9d90-e96d-255806b7d4fc.htm">Autodesk.Revit.DB.Structure Namespace</a></div></div></div></div>
        </div></body></html>
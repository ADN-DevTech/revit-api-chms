<html><head><title>CurveLoop Class</title><meta name="Title" content="CurveLoop Class" /><meta name="Microsoft.Help.Id" content="T:Autodesk.Revit.DB.CurveLoop" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="Autodesk.Revit.DB.CurveLoop class" /><meta name="System.Keywords" content="CurveLoop class" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.CurveLoop" /><meta name="Microsoft.Help.F1" content="CurveLoop" /><meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="84824924-cb89-9e20-de6e-3461f429dfd6" /><meta name="guid" content="84824924-cb89-9e20-de6e-3461f429dfd6" /><meta name="Description" content="A class that represents a chain of curves." /></head><body onload="SetDefaultLanguage('cs');"><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Curve<wbr />Loop Class</h1></td></tr></table><div class="summary">
   A class that represents a chain of curves.
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDA')" onkeypress="SectionExpandCollapse_CheckKey('IDDA', event)" tabindex="0"><img id="IDDAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="IDDASection" class="collapsibleSection"><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">System<span id="LST43D1F86A_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Object</a><br />  <span class="selflink">Autodesk.Revit.DB<span id="LST43D1F86A_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>CurveLoop</span><br /></div><br /><strong>Namespace:</strong> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">CurveLoop</span> : <span class="identifier">IEnumerable</span>&lt;<span class="identifier">Curve</span>&gt;, 
	<span class="identifier">IDisposable</span></pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">CurveLoop</span>
	<span class="keyword">Implements</span> <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> <span class="identifier">Curve</span>), <span class="identifier">IDisposable</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">CurveLoop</span> : <span class="identifier">IEnumerable</span>&lt;<span class="identifier">Curve</span>^&gt;, 
	<span class="identifier">IDisposable</span></pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">type</span> <span class="identifier">CurveLoop</span> = 
    <span class="keyword">class</span>
        <span class="keyword">interface</span> <span class="identifier">IEnumerable</span>&lt;<span class="identifier">Curve</span>&gt;
        <span class="keyword">interface</span> <span class="identifier">IDisposable</span>
    <span class="keyword">end</span></pre></div></div></div></div><p>The <span class="selflink">CurveLoop</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDAFA')" onkeypress="SectionExpandCollapse_CheckKey('IDAFA', event)" tabindex="0"><img id="IDAFAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="IDAFASection" class="collapsibleSection"><table id="ConstructorList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="24352cb6-d39e-afbc-800e-38d0ebf98fe6.htm">CurveLoop</a></td><td>
   Constructs a new empty curve loop.
</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1FA')" onkeypress="SectionExpandCollapse_CheckKey('ID1FA', event)" tabindex="0"><img id="ID1FAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID1FASection" class="collapsibleSection"><table id="PropertyList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="32444567-8b25-6cce-f0de-2bedf9f2da2e.htm">IsValidObject</a></td><td>
   Specifies whether the .NET object represents a valid Revit entity.
</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBFA')" onkeypress="SectionExpandCollapse_CheckKey('IDBFA', event)" tabindex="0"><img id="IDBFAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="IDBFASection" class="collapsibleSection"><table id="MethodList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="9ecde812-a299-b823-35fc-4428e9298602.htm">Append</a></td><td>
   Append the curve to this loop.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="5422ec92-2b9e-6b33-80ac-417b8336ae18.htm">Create</a></td><td>
   Creates a new curve loop.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="ea9a14d7-4b74-009e-b26e-5a90da82de2a.htm">CreateViaCopy</a></td><td>
   Creates a new curve loop as a copy of the input.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="3097f423-9b0e-5496-bae2-3a82b6875414.htm">CreateViaOffset(CurveLoop, IList<span id="LST43D1F86A_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST43D1F86A_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, XYZ)</a></td><td>
   Creates a new curve loop that is an offset of the existing curve loop.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="6cffc624-d197-0f3b-b68c-26b9c9a0adf8.htm">CreateViaOffset(CurveLoop, Double, XYZ)</a></td><td>
   Creates a new curve loop that is an offset of the existing curve loop.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="596ccb71-a32f-0a01-8366-58619263c733.htm">CreateViaThicken(Curve, Double, XYZ)</a></td><td>
   Creates a new closed curve loop by thickening the input curve with respect to a given plane.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="1755d6bf-5993-58dd-a966-98c83ef86891.htm">CreateViaThicken(CurveLoop, Double, XYZ)</a></td><td>
   Creates a new closed curve loop by thickening the input open curve loop with respect to a given plane.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="050e66f2-9202-ef95-2723-f19d8f4dcf5b.htm">CreateViaTransform</a></td><td>
   Creates a new curve loop as a transformed copy of the input curve loop.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="77bad211-6dcf-cb86-c66f-ac25384ccd31.htm">Dispose</a></td><td>Releases all resources used by the <span class="selflink">CurveLoop</span></td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noopener noreferrer">Equals</a></td><td>Determines whether the specified object is equal to the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="a7067941-9bcf-791b-9f1f-ae6284332e54.htm">Flip</a></td><td>
   Reverses the orientation of the curve loop.
</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="b55fa6c3-c8fe-38c5-877f-7fdfe3faf4b6.htm">GetBasicIEnumerator</a></td><td>Returns an enumerator that iterates through a collection.</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="56bdb38b-2385-7e32-13db-6cfd6dbe3e65.htm">GetCurveLoopIterator</a></td><td>
   Returns a curve that iterates through the curve loop.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="4a4f54be-6f2c-e526-8515-58d00364212a.htm">GetEnumerator</a></td><td>Returns an enumerator that iterates through a collection.</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="67e54cf8-f9ba-fb2c-5519-6b54bdb1c51d.htm">GetExactLength</a></td><td>
   Returns the sum of exact lengths of all curves in the loop.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode#system-object-gethashcode" target="_blank" rel="noopener noreferrer">GetHashCode</a></td><td>Serves as the default hash function.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="87e64330-90d4-c6bb-944d-d2dbb1529948.htm">GetPlane</a></td><td>
   Gets the plane of the curve loop, if it is planar.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="f4bafc6a-1218-6c24-e806-c4d92204cbaa.htm">GetRectangularHeight</a></td><td>
   Returns the width of a curve loop if it is rectangular with respect to the projection plane.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="dc6685c1-6c19-34a7-dd7f-5d37b7446649.htm">GetRectangularWidth</a></td><td>
   Returns the width of a curve loop if it is rectangular with respect to the projection plane.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gettype#system-object-gettype" target="_blank" rel="noopener noreferrer">GetType</a></td><td>Gets the <a href="https://learn.microsoft.com/dotnet/api/system.type" target="_blank" rel="noopener noreferrer">Type</a> of the current instance.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="69c92503-2025-ddab-ba91-3085aa2e8117.htm">HasPlane</a></td><td>
   Identifies if the CurveLoop is planar.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="ca966f5d-7db8-b28a-928e-12063dd143e6.htm">IsCounterclockwise</a></td><td>
   Determines if this CurveLoop is oriented counter-clockwise (CCW) or clockwise (CW) with
   respect to the specified 3D direction.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="ac68d75b-1fda-28f2-c5b2-01c24ff1b8b8.htm">IsOpen</a></td><td>
   Returns whether the curve loop is open or closed, as determined by an internal flag.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="5a82c7ad-4b6e-a62c-6b0c-7fe790886995.htm">IsRectangular</a></td><td>
   Identifies if the curve loop is rectangular with respect to a given projection plane.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="1b5d6569-0550-4113-f8d1-3cc94201c5a4.htm">NumberOfCurves</a></td><td>
   Returns the number of curves in the curve loop.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.tostring#system-object-tostring" target="_blank" rel="noopener noreferrer">ToString</a></td><td>Returns a string that represents the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="01e7c70f-9458-128f-b6bc-84acfd658dc5.htm">Transform</a></td><td>
   Transforms this curve loop and all of its component curves by the supplied transformation.
</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection">
   There are specific requirements for how valid CurveLoops must be formed:
   <ul><li>The curves should typically be contiguous.</li><li>The CurveLoop may be either closed (where the start and end points coincide) or open.</li><li>There should be no self-intersections.</li></ul><p>
   A CurveLoop is said to be "continuous" if either:
   <ul><li>the loop contains at most one curve</li><li>the end of each curve coincides with the start of the next one (if there is a next curve).</li></ul></p><p>
   Many geometry utilities require CurveLoops to be continuous, but discontinuous CurveLoops are sometimes used. For example, the curves
   in a continuous CurveLoop may be offset, resulting in a discontinuous loop if the offset curves overlap or do not meet, and the offset
   curves might then be extended or trimmed to form a continuous CurveLoop.
   </p><p>
   A CurveLoop is said to be "closed" if it is non-empty, continuous, and if either:
   <ul><li>the loop contains just one curve, which is unbounded and periodic</li><li>the loop's end point coincides with its start point</li></ul>
   For example, a CurveLoop comprising four lines forming a rectangle, listed in order around the rectangle, with each curve oriented in direction
   in which the curves are listed is closed. As another example, a CurveLoop consisting of just one unbounded circle is closed.
   </p><p>
   A CurveLoop is said to be "open" if it is not closed. For example, a CurveLoop consisting of a single line is open, as is the "offset CurveLoop"
   mentioned above. Note that an open CurveLoop may be continuous or discontinuous, and a continuous CurveLoop may be open or closed. The definitions
   imply that a discontinuous CurveLoop is necessarily open and an empty CurveLoop is open.
   </p><p>
   It should also be noted that these definitions take the order of the curves and the curves' directions into account. For example, a CurveLoop
   comprising the four edges of a rectangle in the order {bottom, top, left, right} is discontinuous. Similarly, a CurveLoop comprising the four
   edges of a rectangle in the order {bottom, right, top, left}, with three of the lines oriented in the counter-clockwise direction of
   the rectangle and the fourth oriented in the clockwise direction, is discontinuous.
   </p><p>
   Finally, note that some routines in Revit may set the CurveLoop to be marked "open" or "closed" in spite of the actual geometry of the curves.
   In these special cases, the CurveLoop class does not require that the CurveLoop is correctly marked.
   </p><p> In the API, the members of the CurveLoop may be directly iterated, as the class implements IEnumerable&lt;Curve&gt;.  The iteration
   provides copies of the curves directly contained in the loop; modification of the curves will not affect the curves that are contained in the loop.
   </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div>
        </div></body></html>
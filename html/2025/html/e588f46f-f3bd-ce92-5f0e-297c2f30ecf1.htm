<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>MechanicalUtils.ConnectDuctPlaceholdersAtElbow(Document, Connector, Connector) Method</title><meta name="Title" content="ConnectDuctPlaceholdersAtElbow(Document, Connector, Connector) Method" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.DB.Mechanical.MechanicalUtils.ConnectDuctPlaceholdersAtElbow(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.Connector,Autodesk.Revit.DB.Connector)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="container" content="Autodesk.Revit.DB.Mechanical" /><meta name="file" content="e588f46f-f3bd-ce92-5f0e-297c2f30ecf1" /><meta name="guid" content="e588f46f-f3bd-ce92-5f0e-297c2f30ecf1" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="Connects a pair of placeholders that can intersect in an Elbow connection." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" /></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">Revit 2025 API</div><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Mechanical<wbr />Utils<span id="LST6E9BF874_0" data-languageSpecificText="cpp=::|nu=."></span>Connect<wbr />Duct<wbr />Placeholders<wbr />At<wbr />Elbow(Document, Connector, Connector) Method</h1></td></tr></table><div class="summary">
   Connects a pair of placeholders that can intersect in an Elbow connection.
</div><br /><strong>Namespace:</strong> <a href="0eafd899-5912-56fd-94b1-d286156e26fc.htm">Autodesk.Revit.DB.Mechanical</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">bool</span> <span class="identifier">ConnectDuctPlaceholdersAtElbow</span>(
	<span class="identifier">Document</span> <span class="parameter">document</span>,
	<span class="identifier">Connector</span> <span class="parameter">connector1</span>,
	<span class="identifier">Connector</span> <span class="parameter">connector2</span>
)</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">ConnectDuctPlaceholdersAtElbow</span> ( 
	<span class="parameter">document</span> <span class="keyword">As</span> <span class="identifier">Document</span>,
	<span class="parameter">connector1</span> <span class="keyword">As</span> <span class="identifier">Connector</span>,
	<span class="parameter">connector2</span> <span class="keyword">As</span> <span class="identifier">Connector</span>
) <span class="keyword">As</span> <span class="identifier">Boolean</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="identifier">bool</span> <span class="identifier">ConnectDuctPlaceholdersAtElbow</span>(
	<span class="identifier">Document</span>^ <span class="parameter">document</span>, 
	<span class="identifier">Connector</span>^ <span class="parameter">connector1</span>, 
	<span class="identifier">Connector</span>^ <span class="parameter">connector2</span>
)</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">ConnectDuctPlaceholdersAtElbow</span> : 
        <span class="parameter">document</span> : <span class="identifier">Document</span> * 
        <span class="parameter">connector1</span> : <span class="identifier">Connector</span> * 
        <span class="parameter">connector2</span> : <span class="identifier">Connector</span> <span class="keyword">-&gt;</span> <span class="identifier">bool</span> </pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">document</span>  <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a></dt><dd>
   The document.
</dd><dt class="has-text-weight-normal"><span class="parameter">connector1</span>  <a href="11e07082-b3f2-26a1-de79-16535f44716c.htm">Connector</a></dt><dd>
   The end connector of the first placeholder.
</dd><dt class="has-text-weight-normal"><span class="parameter">connector2</span>  <a href="11e07082-b3f2-26a1-de79-16535f44716c.htm">Connector</a></dt><dd>
   The end connector of the second placeholder.
</dd></dl><h4>Return Value</h4><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noopener noreferrer">Boolean</a><br />
   True if connection succeeds, false otherwise.
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDGC')" onkeypress="SectionExpandCollapse_CheckKey('IDGC', event)" tabindex="0"><img id="IDGCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="IDGCSection" class="collapsibleSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">ArgumentException</a></td><td>
   The owner of connector is not duct placeholder.
   -or-
   The owners of connectors belong to different types of system.
</td></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">ArgumentNullException</a></td><td>
   A non-optional argument was null
</td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection">
   The placeholders may have a physical intersection but this is not required.
   If they are not intersecting the connectors must be coplanar and able to be moved to
   intersect each other.
   If connection fails, the placeholders cannot be physically connected.
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDJC')" onkeypress="SectionExpandCollapse_CheckKey('IDJC', event)" tabindex="0"><img id="IDJCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDJCSection" class="collapsibleSection"><div id="IDAJC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAJC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAJC','cs','1','4');return false;">C#</a></div><div id="IDAJC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAJC','vb','2','4');return false;">VB</a></div><div id="IDAJC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAJC','cpp','3','4');return false;">C++</a></div><div id="IDAJC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAJC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAJC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAJC');return false;" title="Copy">Copy</a></div></div><div id="IDAJC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">//Create a point to be the connection point of two ductPlaceholders</span>
XYZ connectionPoint = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">150</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>);

<span class="highlight-comment">//Create two new ductPlaceholders, duct1 and duct2, each ductPlaceholder has connectionPoint as its parameter</span>
Duct duct1 = Duct.CreatePlaceholder(document, systemTypeId, ductTypeId, levelId, <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>), connectionPoint);
Duct duct2 = Duct.CreatePlaceholder(document, systemTypeId, ductTypeId, levelId, connectionPoint, <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">150</span>, <span class="highlight-number">50</span>, <span class="highlight-number">0</span>));

<span class="highlight-comment">//Get Connectors of duct1 and duct2's ConnectorManager and change their type to IEnumerable&lt;Connector&gt;</span>
<span class="highlight-comment">//Get the first connector from the IEnumerable where the origin of the connector is almost equal to connectionPoint</span>
Connector connector1 = duct1.ConnectorManager.Connectors.Cast&lt;Connector&gt;().Where(c =&gt; c.Origin.IsAlmostEqualTo(connectionPoint)).First();
Connector connector2 = duct2.ConnectorManager.Connectors.Cast&lt;Connector&gt;().Where(c =&gt; c.Origin.IsAlmostEqualTo(connectionPoint)).First();

<span class="highlight-comment">//Connect duct1 and duct2 with elbow fitting by their intersecting connectors(whose origin is almost equal to connectionPoint)</span>
<span class="highlight-keyword">bool</span> connectResult = MechanicalUtils.ConnectDuctPlaceholdersAtElbow(document, connector1, connector2);

<span class="highlight-comment">//Convert duct1 and duct2 to real ducts</span>
ICollection&lt;ElementId&gt; convertedElementsId = MechanicalUtils.ConvertDuctPlaceholders(document, <span class="highlight-keyword">new</span> ElementId[] { duct1.Id, duct2.Id });</pre></div><div id="IDAJC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-comment">'Create a point to be the connection point of two ductPlaceholders</span>
<span class="highlight-keyword">Dim</span> connectionPoint <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">150</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>)

<span class="highlight-comment">'Create two new ductPlaceholders, duct1 and duct2, each ductPlaceholder has connectionPoint as its parameter</span>
<span class="highlight-keyword">Dim</span> duct1 <span class="highlight-keyword">As</span> Duct = Duct.CreatePlaceholder(document, systemTypeId, ductTypeId, levelId, <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>), connectionPoint)
<span class="highlight-keyword">Dim</span> duct2 <span class="highlight-keyword">As</span> Duct = Duct.CreatePlaceholder(document, systemTypeId, ductTypeId, levelId, connectionPoint, <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">150</span>, <span class="highlight-number">50</span>, <span class="highlight-number">0</span>))

<span class="highlight-comment">'Get Connectors of duct1 and duct2's ConnectorManager and change their type to IEnumerable&lt;Connector&gt;</span>
<span class="highlight-comment">'Get the first connector from the IEnumerable where the origin of the connector is almost equal to connectionPoint</span>
<span class="highlight-keyword">Dim</span> connector1 <span class="highlight-keyword">As</span> Connector = duct1.ConnectorManager.Connectors.Cast(<span class="highlight-keyword">Of</span> Connector)().Where(<span class="highlight-keyword">Function</span>(c) c.Origin.IsAlmostEqualTo(connectionPoint)).First()
<span class="highlight-keyword">Dim</span> connector2 <span class="highlight-keyword">As</span> Connector = duct2.ConnectorManager.Connectors.Cast(<span class="highlight-keyword">Of</span> Connector)().Where(<span class="highlight-keyword">Function</span>(c) c.Origin.IsAlmostEqualTo(connectionPoint)).First()

<span class="highlight-comment">'Connect duct1 and duct2 with elbow fitting by their intersecting connectors(whose origin is almost equal to connectionPoint)</span>
<span class="highlight-keyword">Dim</span> connectResult <span class="highlight-keyword">As</span> <span class="highlight-keyword">Boolean</span> = MechanicalUtils.ConnectDuctPlaceholdersAtElbow(document, connector1, connector2)

<span class="highlight-comment">'Convert duct1 and duct2 to real ducts</span>
<span class="highlight-keyword">Dim</span> convertedElementsId <span class="highlight-keyword">As</span> ICollection(<span class="highlight-keyword">Of</span> ElementId) = MechanicalUtils.ConvertDuctPlaceholders(document, <span class="highlight-keyword">New</span> ElementId() {duct1.Id, duct2.Id})</pre></div><div id="IDAJC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDAJC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="f7cbd23a-1b69-d9bf-88b4-df10a8c4be0b.htm">MechanicalUtils Class</a></div><div><a href="7b82eb6f-4daf-cc0b-0ae6-9468c95a7245.htm">ConnectDuctPlaceholdersAtElbow Overload</a></div><div><a href="0eafd899-5912-56fd-94b1-d286156e26fc.htm">Autodesk.Revit.DB.Mechanical Namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter"><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:revitapifeedback%40autodesk.com?Subject=Revit%202025%20API">Autodesk</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>
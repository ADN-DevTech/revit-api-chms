<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>FamilyItemFactory.NewRevolveForms Method</title><meta name="Title" content="NewRevolveForms Method" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.Creation.FamilyItemFactory.NewRevolveForms(System.Boolean,Autodesk.Revit.DB.ReferenceArray,Autodesk.Revit.DB.Reference,System.Double,System.Double)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="FamilyItemFactory.NewRevolveForms method" /><meta name="System.Keywords" content="NewRevolveForms method" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.Creation.FamilyItemFactory.NewRevolveForms" /><meta name="Microsoft.Help.F1" content="FamilyItemFactory.NewRevolveForms" /><meta name="Microsoft.Help.F1" content="NewRevolveForms" /><meta name="container" content="Autodesk.Revit.Creation" /><meta name="file" content="7ec1ce49-eba0-2d74-0c10-0e97ee9ebca8" /><meta name="guid" content="7ec1ce49-eba0-2d74-0c10-0e97ee9ebca8" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="Create new Form elements by revolve operation, and add them into the Autodesk Revit family document." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" /></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">Revit 2025 API</div><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Family<wbr />Item<wbr />Factory<span id="LST27229332_0" data-languageSpecificText="cpp=::|nu=."></span>New<wbr />Revolve<wbr />Forms Method</h1></td></tr></table><div class="summary">Create new Form elements by revolve operation, and add them into the Autodesk Revit family document.</div><br /><strong>Namespace:</strong> <a href="ded320da-058a-4edd-0418-0582389559a7.htm">Autodesk.Revit.Creation</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">FormArray</span> <span class="identifier">NewRevolveForms</span>(
	<span class="identifier">bool</span> <span class="parameter">isSolid</span>,
	<span class="identifier">ReferenceArray</span> <span class="parameter">profile</span>,
	<span class="identifier">Reference</span> <span class="parameter">axis</span>,
	<span class="identifier">double</span> <span class="parameter">startAngle</span>,
	<span class="identifier">double</span> <span class="parameter">endAngle</span>
)</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">NewRevolveForms</span> ( 
	<span class="parameter">isSolid</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>,
	<span class="parameter">profile</span> <span class="keyword">As</span> <span class="identifier">ReferenceArray</span>,
	<span class="parameter">axis</span> <span class="keyword">As</span> <span class="identifier">Reference</span>,
	<span class="parameter">startAngle</span> <span class="keyword">As</span> <span class="identifier">Double</span>,
	<span class="parameter">endAngle</span> <span class="keyword">As</span> <span class="identifier">Double</span>
) <span class="keyword">As</span> <span class="identifier">FormArray</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="identifier">FormArray</span>^ <span class="identifier">NewRevolveForms</span>(
	<span class="identifier">bool</span> <span class="parameter">isSolid</span>, 
	<span class="identifier">ReferenceArray</span>^ <span class="parameter">profile</span>, 
	<span class="identifier">Reference</span>^ <span class="parameter">axis</span>, 
	<span class="identifier">double</span> <span class="parameter">startAngle</span>, 
	<span class="identifier">double</span> <span class="parameter">endAngle</span>
)</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">member</span> <span class="identifier">NewRevolveForms</span> : 
        <span class="parameter">isSolid</span> : <span class="identifier">bool</span> * 
        <span class="parameter">profile</span> : <span class="identifier">ReferenceArray</span> * 
        <span class="parameter">axis</span> : <span class="identifier">Reference</span> * 
        <span class="parameter">startAngle</span> : <span class="identifier">float</span> * 
        <span class="parameter">endAngle</span> : <span class="identifier">float</span> <span class="keyword">-&gt;</span> <span class="identifier">FormArray</span> </pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">isSolid</span>  <a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noopener noreferrer">Boolean</a></dt><dd>Indicates if the Form is Solid or Void.</dd><dt class="has-text-weight-normal"><span class="parameter">profile</span>  <a href="bc9192b5-6666-a8de-0128-87dae479fd6a.htm">ReferenceArray</a></dt><dd>The profile of the newly created revolution. It should consist of only one curve loop.
The profile must be in the same plane as the axis.</dd><dt class="has-text-weight-normal"><span class="parameter">axis</span>  <a href="d28155ae-817b-1f31-9c3f-c9c6a28acc0d.htm">Reference</a></dt><dd>The axis of revolution. The axis is a line that must lie in the same plane as the curves in the profile.</dd><dt class="has-text-weight-normal"><span class="parameter">startAngle</span>  <a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a></dt><dd>The start angle of Revolution in radians.</dd><dt class="has-text-weight-normal"><span class="parameter">endAngle</span>  <a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a></dt><dd>The end angle of Revolution in radians.</dd></dl><h4>Return Value</h4><a href="24506527-802b-2487-919e-14a4a06f60be.htm">FormArray</a><br />If creation was successful new forms are returned.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDHC')" onkeypress="SectionExpandCollapse_CheckKey('IDHC', event)" tabindex="0"><img id="IDHCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDHCSection" class="collapsibleSection">Typically this operation produces only a single form, but some combinations of arguments will create multiple forms from a single profile.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDIC')" onkeypress="SectionExpandCollapse_CheckKey('IDIC', event)" tabindex="0"><img id="IDICToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDICSection" class="collapsibleSection"><div id="IDAIC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAIC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAIC','cs','1','4');return false;">C#</a></div><div id="IDAIC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAIC','vb','2','4');return false;">VB</a></div><div id="IDAIC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAIC','cpp','3','4');return false;">C++</a></div><div id="IDAIC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAIC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAIC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAIC');return false;" title="Copy">Copy</a></div></div><div id="IDAIC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">private</span> FormArray CreateRevolveForm(Document document)
{
    FormArray revolveForms = <span class="highlight-keyword">null</span>;

    <span class="highlight-comment">// Create one profile</span>
    ReferenceArray ref_ar = <span class="highlight-keyword">new</span> ReferenceArray();

    XYZ ptA = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">10</span>);
    XYZ ptB = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">0</span>, <span class="highlight-number">10</span>);
    Line line = Line.CreateBound(ptA, ptB);
    ModelCurve modelcurve = MakeLine(document, ptA, ptB);
    ref_ar.Append(modelcurve.GeometryCurve.Reference);

    ptA = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">0</span>, <span class="highlight-number">10</span>);
    ptB = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">100</span>, <span class="highlight-number">10</span>);
    modelcurve = MakeLine(document, ptA, ptB);
    ref_ar.Append(modelcurve.GeometryCurve.Reference);

    ptA = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">100</span>, <span class="highlight-number">10</span>);
    ptB = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">10</span>);
    modelcurve = MakeLine(document, ptA, ptB);
    ref_ar.Append(modelcurve.GeometryCurve.Reference);

    <span class="highlight-comment">// Create axis for revolve form</span>
    ptA = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">-5</span>, <span class="highlight-number">0</span>, <span class="highlight-number">10</span>);
    ptB = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">-5</span>, <span class="highlight-number">10</span>, <span class="highlight-number">10</span>);
    ModelCurve axis = MakeLine(document, ptA, ptB);

    <span class="highlight-comment">// make axis a Reference Line</span>
    axis.ChangeToReferenceLine();

    <span class="highlight-comment">// Typically this operation produces only a single form, </span>
    <span class="highlight-comment">// but some combinations of arguments will create multiple froms from a single profile.</span>
    revolveForms = document.FamilyCreate.NewRevolveForms(<span class="highlight-keyword">true</span>, ref_ar, axis.GeometryCurve.Reference, <span class="highlight-number">0</span>, Math.PI / <span class="highlight-number">4</span>);

    <span class="highlight-keyword">return</span> revolveForms;
}

<span class="highlight-keyword">public</span> ModelCurve MakeLine(Document doc, XYZ ptA, XYZ ptB)
{
    Autodesk.Revit.ApplicationServices.Application app = doc.Application;
    <span class="highlight-comment">// Create plane by the points</span>
    Line line = Line.CreateBound(ptA, ptB);
    XYZ norm = ptA.CrossProduct(ptB);
    <span class="highlight-keyword">if</span> (norm.IsZeroLength()) norm = XYZ.BasisZ;
    Plane plane = Plane.CreateByNormalAndOrigin(norm, ptB);
    SketchPlane skplane = SketchPlane.Create(doc, plane);
    <span class="highlight-comment">// Create line here</span>
    ModelCurve modelcurve = doc.FamilyCreate.NewModelCurve(line, skplane);
    <span class="highlight-keyword">return</span> modelcurve;
}</pre></div><div id="IDAIC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Function</span> CreateRevolveForm(document <span class="highlight-keyword">As</span> Document) <span class="highlight-keyword">As</span> FormArray
    <span class="highlight-keyword">Dim</span> revolveForms <span class="highlight-keyword">As</span> FormArray = <span class="highlight-keyword">Nothing</span>

    <span class="highlight-comment">' Create one profile</span>
    <span class="highlight-keyword">Dim</span> ref_ar <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> ReferenceArray()

    <span class="highlight-keyword">Dim</span> ptA <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">10</span>)
    <span class="highlight-keyword">Dim</span> ptB <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">0</span>, <span class="highlight-number">10</span>)
    <span class="highlight-keyword">Dim</span> line__1 <span class="highlight-keyword">As</span> Line = Line.CreateBound(ptA, ptB)
    <span class="highlight-keyword">Dim</span> modelcurve <span class="highlight-keyword">As</span> ModelCurve = MakeLine(document, ptA, ptB)
    ref_ar.Append(modelcurve.GeometryCurve.Reference)

    ptA = <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">0</span>, <span class="highlight-number">10</span>)
    ptB = <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">100</span>, <span class="highlight-number">10</span>)
    modelcurve = MakeLine(document, ptA, ptB)
    ref_ar.Append(modelcurve.GeometryCurve.Reference)

    ptA = <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">100</span>, <span class="highlight-number">10</span>)
    ptB = <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">10</span>)
    modelcurve = MakeLine(document, ptA, ptB)
    ref_ar.Append(modelcurve.GeometryCurve.Reference)

    <span class="highlight-comment">' Create axis for revolve form</span>
    ptA = <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">-5</span>, <span class="highlight-number">0</span>, <span class="highlight-number">10</span>)
    ptB = <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">-5</span>, <span class="highlight-number">10</span>, <span class="highlight-number">10</span>)
    <span class="highlight-keyword">Dim</span> axis <span class="highlight-keyword">As</span> ModelCurve = MakeLine(document, ptA, ptB)

    <span class="highlight-comment">' make axis a Reference Line</span>
    axis.ChangeToReferenceLine()

    <span class="highlight-comment">' Typically this operation produces only a single form, </span>
    <span class="highlight-comment">' but some combinations of arguments will create multiple froms from a single profile.</span>
    revolveForms = document.FamilyCreate.NewRevolveForms(<span class="highlight-keyword">True</span>, ref_ar, axis.GeometryCurve.Reference, <span class="highlight-number">0</span>, Math.PI / <span class="highlight-number">4</span>)

    <span class="highlight-keyword">Return</span> revolveForms
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>

<span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> MakeLine(doc <span class="highlight-keyword">As</span> Document, ptA <span class="highlight-keyword">As</span> XYZ, ptB <span class="highlight-keyword">As</span> XYZ) <span class="highlight-keyword">As</span> ModelCurve
    <span class="highlight-keyword">Dim</span> app <span class="highlight-keyword">As</span> Autodesk.Revit.ApplicationServices.Application = doc.Application
    <span class="highlight-comment">' Create plane by the points</span>
    <span class="highlight-keyword">Dim</span> line__1 <span class="highlight-keyword">As</span> Line = Line.CreateBound(ptA, ptB)
    <span class="highlight-keyword">Dim</span> norm <span class="highlight-keyword">As</span> XYZ = ptA.CrossProduct(ptB)
    <span class="highlight-keyword">If</span> norm.IsZeroLength() <span class="highlight-keyword">Then</span>
        norm = XYZ.BasisZ
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
 <span class="highlight-keyword">Dim</span> plane <span class="highlight-keyword">As</span> Plane = plane.CreateByNormalAndOrigin(norm, ptB)
    <span class="highlight-keyword">Dim</span> skplane <span class="highlight-keyword">As</span> SketchPlane = SketchPlane.Create(doc, plane)
    <span class="highlight-comment">' Create line here</span>
    <span class="highlight-keyword">Dim</span> modelcurve <span class="highlight-keyword">As</span> ModelCurve = doc.FamilyCreate.NewModelCurve(line__1, skplane)
    <span class="highlight-keyword">Return</span> modelcurve
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></pre></div><div id="IDAIC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDAIC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="a7622967-1381-c17f-ed04-1ebe40da0440.htm">FamilyItemFactory Class</a></div><div><a href="ded320da-058a-4edd-0418-0582389559a7.htm">Autodesk.Revit.Creation Namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter"><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:revitapifeedback%40autodesk.com?Subject=Revit%202025%20API">Autodesk</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>
<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>Transaction.RollBack(FailureHandlingOptions) Method</title><meta name="Title" content="RollBack(FailureHandlingOptions) Method" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.DB.Transaction.RollBack(Autodesk.Revit.DB.FailureHandlingOptions)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="d99de9ee-168e-a114-1255-0cea9f317efb" /><meta name="guid" content="d99de9ee-168e-a114-1255-0cea9f317efb" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="Rolls back all changes made to the model during the transaction." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" /></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">Revit 2025 API</div><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Transaction<span id="LST25F3EE3F_0" data-languageSpecificText="cpp=::|nu=."></span>Roll<wbr />Back(Failure<wbr />Handling<wbr />Options) Method</h1></td></tr></table><div class="summary">
   Rolls back all changes made to the model during the transaction.
</div><br /><strong>Namespace:</strong> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">TransactionStatus</span> <span class="identifier">RollBack</span>(
	<span class="identifier">FailureHandlingOptions</span> <span class="parameter">options</span>
)</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">RollBack</span> ( 
	<span class="parameter">options</span> <span class="keyword">As</span> <span class="identifier">FailureHandlingOptions</span>
) <span class="keyword">As</span> <span class="identifier">TransactionStatus</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="identifier">TransactionStatus</span> <span class="identifier">RollBack</span>(
	<span class="identifier">FailureHandlingOptions</span>^ <span class="parameter">options</span>
)</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">member</span> <span class="identifier">RollBack</span> : 
        <span class="parameter">options</span> : <span class="identifier">FailureHandlingOptions</span> <span class="keyword">-&gt;</span> <span class="identifier">TransactionStatus</span> </pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">options</span>  <a href="c03bb2e5-f679-bf24-4e87-08b3c3a08385.htm">FailureHandlingOptions</a></dt><dd>
   A set of <a href="c03bb2e5-f679-bf24-4e87-08b3c3a08385.htm">options</a>
   to be used for handling eventual failures during this call.
   <p>The options are only used temporarily during this rolling back process. After
   the transaction is finished, the options will be reset to their default values.</p></dd></dl><h4>Return Value</h4><a href="29b9a7a8-6754-8310-e063-622b569bb6d5.htm">TransactionStatus</a><br />
   If finished successfully, this method returns TransactionStatus.RolledBack.
   <p>Be aware that the returned status does not have to be necessarily the same like
   the status returned by <a href="fdf98941-eee4-d8af-e3f7-5b6c7ccc3c74.htm">GetStatus<span id="LST25F3EE3F_1" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> even when the method is called
   immediately after rolling back the transaction. Such difference may happen due to actions
   made by a transaction finalizer, if there was one set.
   (See <a href="c03bb2e5-f679-bf24-4e87-08b3c3a08385.htm">FailureHandlingOptions</a> for more details.)</p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDEC')" onkeypress="SectionExpandCollapse_CheckKey('IDEC', event)" tabindex="0"><img id="IDECToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="IDECSection" class="collapsibleSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">ArgumentNullException</a></td><td>
   A non-optional argument was null
</td></tr><tr><td><a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">InvalidOperationException</a></td><td>
   The current status of the transaction is not 'Started'.
   Transaction must be started before calling Commit or Rollback.
   -or-
   The transaction's document is currently in failure mode.
   No transaction operations are permitted until failure handling is finished.
</td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection">
   By rolling back a transaction, all changes made to the model are discarded.
   RollBack may only be called for a transaction that has been started.
   (Use the <a href="fdf98941-eee4-d8af-e3f7-5b6c7ccc3c74.htm">GetStatus<span id="LST25F3EE3F_2" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> method to check the current state.)
   Be aware that rolling back may be delayed (as a result of failure handling.)
   Callers should always check the returned status to test whether a transaction
   was rolled back successfully. Only after rolling back is fully completed,
   the transaction may be started again.
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDGC')" onkeypress="SectionExpandCollapse_CheckKey('IDGC', event)" tabindex="0"><img id="IDGCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDGCSection" class="collapsibleSection"><div id="IDAGC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAGC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAGC','cs','1','4');return false;">C#</a></div><div id="IDAGC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAGC','vb','2','4');return false;">VB</a></div><div id="IDAGC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAGC','cpp','3','4');return false;">C++</a></div><div id="IDAGC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAGC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAGC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAGC');return false;" title="Copy">Copy</a></div></div><div id="IDAGC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// All and any transaction should be enclosed in a 'using'</span>
<span class="highlight-comment">// block or guarded within a try-catch-finally blocks</span>
<span class="highlight-comment">// to guarantee that a transaction does not out-live its scope.</span>
<span class="highlight-keyword">using</span> (Transaction transaction = <span class="highlight-keyword">new</span> Transaction(document))
{
   <span class="highlight-comment">// Must start the transaction first to be able to modify a document</span>
   transaction.Start(<span class="highlight-literal">"Creating Grid"</span>);

   <span class="highlight-comment">// We create a line and use it as an argument to create a grid</span>
   Line gridLine = Line.CreateBound(<span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, elevation), <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">20</span>, <span class="highlight-number">0</span>, elevation));

   <span class="highlight-keyword">if</span> ((<span class="highlight-keyword">null</span> != gridLine) &amp;&amp; (<span class="highlight-keyword">null</span> != Grid.Create(document, gridLine)))
   {
      <span class="highlight-keyword">if</span> (TransactionStatus.Committed == transaction.Commit())
      {
         <span class="highlight-keyword">return</span> <span class="highlight-keyword">true</span>;
      }
   }

   <span class="highlight-comment">// We could not create the grid, so we roll the transaction back.</span>

   <span class="highlight-comment">// To demonstrate one particular property of failure handling options,</span>
   <span class="highlight-comment">// we can set clearing of accumulated warnings (if any) for this</span>
   <span class="highlight-comment">// transaction which is about to get rolled back anyway.</span>
   <span class="highlight-comment">// Clearing warnings is rarely desirable, but sometimes it is convenient.</span>
   FailureHandlingOptions options = transaction.GetFailureHandlingOptions();

   transaction.RollBack(options.SetClearAfterRollback(<span class="highlight-keyword">true</span>));
}</pre></div><div id="IDAGC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-comment">' All and any transaction should be enclosed in a 'using'</span>
<span class="highlight-comment">' block or guarded within a try-catch-finally blocks</span>
<span class="highlight-comment">' to guarantee that a transaction does not out-live its scope.</span>
<span class="highlight-keyword">Using</span> transaction <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Transaction(document)
    <span class="highlight-comment">' Must start the transaction first to be able to modify a document</span>
    transaction.Start(<span class="highlight-literal">"Creating Grid"</span>)

    <span class="highlight-comment">' We create a line and use it as an argument to create a grid</span>
    <span class="highlight-keyword">Dim</span> gridLine <span class="highlight-keyword">As</span> Line = Line.CreateBound(<span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, elevation), <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">20</span>, <span class="highlight-number">0</span>, elevation))

<span class="highlight-keyword">If</span> (gridLine <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span>) <span class="highlight-keyword">AndAlso</span> (Grid.Create(document, gridLine) <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span>) <span class="highlight-keyword">Then</span>
   <span class="highlight-keyword">If</span> TransactionStatus.Committed = transaction.Commit() <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> <span class="highlight-keyword">True</span>
   <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' We could not create the grid, so we roll the transaction back.</span>

    <span class="highlight-comment">' To demonstrate one particular property of failure handling options,</span>
    <span class="highlight-comment">' we can set clearing of accumulated warnings (if any) for this</span>
    <span class="highlight-comment">' transaction which is about to get rolled back anyway.</span>
    <span class="highlight-comment">' Clearing warnings is rarely desirable, but sometimes it is convenient.</span>
    <span class="highlight-keyword">Dim</span> options <span class="highlight-keyword">As</span> FailureHandlingOptions = transaction.GetFailureHandlingOptions()

    transaction.RollBack(options.SetClearAfterRollback(<span class="highlight-keyword">True</span>))
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span></pre></div><div id="IDAGC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDAGC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="308ebf8d-d96d-4643-cd1d-34fffcea53fd.htm">Transaction Class</a></div><div><a href="2b534cc2-e464-d424-d504-d2ae260bd937.htm">RollBack Overload</a></div><div><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter"><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:revitapifeedback%40autodesk.com?Subject=Revit%202025%20API">Autodesk</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>
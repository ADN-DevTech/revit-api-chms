<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>TransactionGroup.Commit Method</title><meta name="Title" content="Commit Method" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.DB.TransactionGroup.Commit" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="TransactionGroup.Commit method" /><meta name="System.Keywords" content="Commit method" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.TransactionGroup.Commit" /><meta name="Microsoft.Help.F1" content="TransactionGroup.Commit" /><meta name="Microsoft.Help.F1" content="Commit" /><meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="11878443-43f2-63fb-a95d-baa1eeab776d" /><meta name="guid" content="11878443-43f2-63fb-a95d-baa1eeab776d" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="Commits the transaction group." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" /></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">Revit 2025 API</div><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Transaction<wbr />Group<span id="LST60C24124_0" data-languageSpecificText="cpp=::|nu=."></span>Commit Method</h1></td></tr></table><div class="summary">
   Commits the transaction group.
</div><br /><strong>Namespace:</strong> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">TransactionStatus</span> <span class="identifier">Commit</span>()</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">Commit</span> <span class="keyword">As</span> <span class="identifier">TransactionStatus</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="identifier">TransactionStatus</span> <span class="identifier">Commit</span>()</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">member</span> <span class="identifier">Commit</span> : <span class="keyword">unit</span> <span class="keyword">-&gt;</span> <span class="identifier">TransactionStatus</span> </pre></div></div></div><h4>Return Value</h4><a href="29b9a7a8-6754-8310-e063-622b569bb6d5.htm">TransactionStatus</a><br />
   If finished successfully, this method returns TransactionStatus.Committed.
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDC')" onkeypress="SectionExpandCollapse_CheckKey('IDDC', event)" tabindex="0"><img id="IDDCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="IDDCSection" class="collapsibleSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">InvalidOperationException</a></td><td>
   The Transaction group has not been started (its status is not 'Started')..
   -or-
   The transaction's document is currently in failure mode.
   Transaction groups cannot be closed until failure handling is finished.
   You may use a transaction finalizer to close a group after the failure handling ends.
</td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection"><p>Committing a group does not change the model.
   It only confirms the commitment of all inner groups and transactions.</p><p>Commit can be called only when all inner transaction groups and transactions are finished,
   i.e. after they were either committed or rolled back. If there is still a transaction or an inner
   transaction group open, an attempt to commit this outer group will cause an exception.</p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDFC')" onkeypress="SectionExpandCollapse_CheckKey('IDFC', event)" tabindex="0"><img id="IDFCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDFCSection" class="collapsibleSection"><div id="IDAFC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAFC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAFC','cs','1','4');return false;">C#</a></div><div id="IDAFC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAFC','vb','2','4');return false;">VB</a></div><div id="IDAFC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAFC','cpp','3','4');return false;">C++</a></div><div id="IDAFC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAFC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAFC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAFC');return false;" title="Copy">Copy</a></div></div><div id="IDAFC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> GroupedOperations(Autodesk.Revit.DB.Document document)
{
   <span class="highlight-comment">// All and any transaction group should be enclosed in a 'using' block or guarded within </span>
   <span class="highlight-comment">// a try-catch-finally blocks to guarantee that the group does not out-live its scope.</span>
   <span class="highlight-keyword">using</span> (TransactionGroup transGroup = <span class="highlight-keyword">new</span> TransactionGroup(document, <span class="highlight-literal">"Level and Grid"</span>))
   {
      <span class="highlight-keyword">if</span> (transGroup.Start() == TransactionStatus.Started)
      {
         <span class="highlight-comment">// We are going to call two methods, each having its own local transaction.</span>
         <span class="highlight-comment">// For our compound operation to be considered successful, both the individual</span>
         <span class="highlight-comment">// transactions must succeed. If either one fails, we will roll our group back,</span>
         <span class="highlight-comment">// regardless of what transactions might have already been committed.</span>

         <span class="highlight-keyword">if</span> (CreateLevel(document, <span class="highlight-number">35.0</span>) &amp;&amp; CreateGrid(document, <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>)))
         {
            <span class="highlight-comment">// The process of committing of a group does not do anything to the already committed</span>
            <span class="highlight-comment">// transactions. They will stay available on the undo menu and may still be undone</span>
            <span class="highlight-comment">// individually. If it is not desirable if one transaction from a multi-transaction</span>
            <span class="highlight-comment">// operation can be undone by th end user, then the transaction group must be</span>
            <span class="highlight-comment">// assimilated instead of committed. See TransactionGroup.Assimilate for details.</span>
            transGroup.Commit();
         }
         <span class="highlight-keyword">else</span>
         {
            <span class="highlight-comment">// Since we could not successfully finish at least one of the individual</span>
            <span class="highlight-comment">// operation, we are going to roll the entire group back, which will</span>
            <span class="highlight-comment">// undo any transaction already committed while this group was open.</span>
            transGroup.RollBack();
         }
      }
   }
}</pre></div><div id="IDAFC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> GroupedOperations(document <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Document)
    <span class="highlight-comment">' All and any transaction group should be enclosed in a 'using' block or guarded within </span>
    <span class="highlight-comment">' a try-catch-finally blocks to guarantee that the group does not out-live its scope.</span>
    <span class="highlight-keyword">Using</span> transGroup <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> TransactionGroup(document, <span class="highlight-literal">"Level and Grid"</span>)
        <span class="highlight-keyword">If</span> transGroup.Start() = TransactionStatus.Started <span class="highlight-keyword">Then</span>
            <span class="highlight-comment">' We are going to call two methods, each having its own local transaction.</span>
            <span class="highlight-comment">' For our compound operation to be considered successful, both the individual</span>
            <span class="highlight-comment">' transactions must succeed. If either one fails, we will roll our group back,</span>
            <span class="highlight-comment">' regardless of what transactions might have already been committed.</span>

            <span class="highlight-keyword">If</span> CreateLevel(document, <span class="highlight-number">35.0</span>) <span class="highlight-keyword">AndAlso</span> CreateGrid(document, <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>)) <span class="highlight-keyword">Then</span>
                <span class="highlight-comment">' The process of committing of a group does not do anything to the already committed</span>
                <span class="highlight-comment">' transactions. They will stay available on the undo menu and may still be undone</span>
                <span class="highlight-comment">' individually. If it is not desirable if one transaction from a multi-transaction</span>
                <span class="highlight-comment">' operation can be undone by th end user, then the transaction group must be</span>
                <span class="highlight-comment">' assimilated instead of committed. See TransactionGroup.Assimilate for details.</span>
                transGroup.Commit()
            <span class="highlight-keyword">Else</span>
                <span class="highlight-comment">' Since we could not successfully finish at least one of the individual</span>
                <span class="highlight-comment">' operation, we are going to roll the entire group back, which will</span>
                <span class="highlight-comment">' undo any transaction already committed while this group was open.</span>
                transGroup.RollBack()
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div><div id="IDAFC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDAFC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="f1113d30-4c36-7844-1537-aad7f095cea0.htm">TransactionGroup Class</a></div><div><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter"><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:revitapifeedback%40autodesk.com?Subject=Revit%202025%20API">Autodesk</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>
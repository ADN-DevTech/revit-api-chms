<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>FormattedText Class</title><meta name="Title" content="FormattedText Class" /><meta name="Microsoft.Help.Id" content="T:Autodesk.Revit.DB.FormattedText" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="Autodesk.Revit.DB.FormattedText class" /><meta name="System.Keywords" content="FormattedText class" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.FormattedText" /><meta name="Microsoft.Help.F1" content="FormattedText" /><meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="79a92343-2342-8325-1b51-f12c4fb05481" /><meta name="guid" content="79a92343-2342-8325-1b51-f12c4fb05481" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="FormattedText is used to create, edit and format text in a or to query the text and format properties of a" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" /></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">Revit 2025 API</div><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Formatted<wbr />Text Class</h1></td></tr></table><div class="summary">
   FormattedText is used to create, edit and format text in a <a href="ecc1ce1c-d754-96d0-35db-ca2d1d84c57c.htm">TextNote</a>
   or to query the text and format properties of a <a href="9a06448a-1c82-7fd7-8be7-9113dc1ce86a.htm">TextNode</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDA')" onkeypress="SectionExpandCollapse_CheckKey('IDDA', event)" tabindex="0"><img id="IDDAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="IDDASection" class="collapsibleSection"><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">System<span id="LST4BEF705D_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Object</a><br />  <span class="selflink">Autodesk.Revit.DB<span id="LST4BEF705D_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>FormattedText</span><br /></div><br /><strong>Namespace:</strong> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">FormattedText</span> : <span class="identifier">IDisposable</span></pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">FormattedText</span>
	<span class="keyword">Implements</span> <span class="identifier">IDisposable</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">FormattedText</span> : <span class="identifier">IDisposable</span></pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">type</span> <span class="identifier">FormattedText</span> = 
    <span class="keyword">class</span>
        <span class="keyword">interface</span> <span class="identifier">IDisposable</span>
    <span class="keyword">end</span></pre></div></div></div></div><p>The <span class="selflink">FormattedText</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDAAFA')" onkeypress="SectionExpandCollapse_CheckKey('IDAAFA', event)" tabindex="0"><img id="IDAAFAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="IDAAFASection" class="collapsibleSection"><table id="ConstructorList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="955fef3d-d39a-69e0-efea-3195003858de.htm">FormattedText<span id="LST4BEF705D_2" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
   Creates a new default FormattedText object, which contains only a carriage return character and has no formatting.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="86332d2f-1939-4985-f428-24ee8b19072e.htm">FormattedText(String)</a></td><td>
   Creates a new FormattedText object with unformatted text.
</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6FA')" onkeypress="SectionExpandCollapse_CheckKey('ID6FA', event)" tabindex="0"><img id="ID6FAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID6FASection" class="collapsibleSection"><table id="PropertyList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="35187b1c-c476-7fe5-e0f9-8ddd963face2.htm">IsValidObject</a></td><td>
   Specifies whether the .NET object represents a valid Revit entity.
</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBFA')" onkeypress="SectionExpandCollapse_CheckKey('IDBFA', event)" tabindex="0"><img id="IDBFAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="IDBFASection" class="collapsibleSection"><table id="MethodList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="a9cd63f5-8458-a362-723d-3db060d29b75.htm">AsTextRange</a></td><td>
   Returns a <a href="8a00baaf-8cb8-d9f0-e0a0-eaa5aa16e55e.htm">TextRange</a> object that represents the entire text.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="b9fff006-84a5-3e0f-a6db-1d939a0e7ccc.htm">Dispose</a></td><td>Releases all resources used by the <span class="selflink">FormattedText</span></td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noopener noreferrer">Equals</a></td><td>Determines whether the specified object is equal to the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="79034f02-9ca0-ebe5-8d16-112d674dbdb4.htm">Find</a></td><td>
   Returns a text range identifying the first occurrence of the given string within the text,
   starting from a given index.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="4d35db5f-70f5-1c08-0fee-a0f8ffd1652b.htm">GetAllCapsStatus<span id="LST4BEF705D_3" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
   Returns whether <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">All</a>, <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">None</a> or a <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">Mixed</a> of characters in the entire text are in all caps.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="0e9f9439-eb01-6844-992a-2128ffddedef.htm">GetAllCapsStatus(TextRange)</a></td><td>
   Returns whether <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">All</a>, <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">None</a> or a <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">Mixed</a> set of characters in a given text range are in all caps.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="b18ada19-3b5c-0a5a-aeb0-93585774efe2.htm">GetBoldStatus<span id="LST4BEF705D_4" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
   Returns whether <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">All</a>, <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">None</a> or a <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">Mixed</a> of characters in the entire text are bold.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="654707e3-5575-a8a5-8eaf-e83425f5c50d.htm">GetBoldStatus(TextRange)</a></td><td>
   Returns whether <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">All</a>, <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">None</a> or a <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">Mixed</a> set of characters in a given text range are bold.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode#system-object-gethashcode" target="_blank" rel="noopener noreferrer">GetHashCode</a></td><td>Serves as the default hash function.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="2bb008be-f3b5-f0cd-bc1b-6879101ef84a.htm">GetIndentLevel</a></td><td>
   Returns the indent level of the paragraphs in the text range.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="3a30affe-5cdd-1042-45ae-046c2c0d3454.htm">GetItalicStatus<span id="LST4BEF705D_5" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
   Returns whether <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">All</a>, <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">None</a> or a <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">Mixed</a> of characters in the entire text are italic.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="a4df0e88-31d5-4e75-fb17-d68ad22bf89d.htm">GetItalicStatus(TextRange)</a></td><td>
   Returns whether <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">All</a>, <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">None</a> or a <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">Mixed</a> set of characters in a given text range are italic.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="52b2530b-0a0a-1873-e38d-726680a09f06.htm">GetListStartNumber</a></td><td>
   Returns the list start number of the paragraphs in a given text range.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="36f7629b-c347-20c8-eb28-925ae4392d87.htm">GetListType</a></td><td>
   Returns the <a href="7163554f-3446-22eb-afa4-5490d5df29c8.htm">ListType</a> of a paragraph.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="3f77a7ca-54e8-28b5-e1e6-cee57afd13e6.htm">GetMaximumIndentLevel</a></td><td>
   Returns the maximum allowed indent level
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="8bb4b3f7-9053-c9cb-751a-98803e7828eb.htm">GetMaximumListStartNumber</a></td><td>
   Returns the maximum allowed list start number.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="35eab58f-9a75-db03-4182-e8a17ab2a55c.htm">GetMinimumListStartNumber</a></td><td>
   Returns the minumum allowed list start number.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="86974db8-8f2a-354f-f7f7-99542cbdff76.htm">GetPlainText<span id="LST4BEF705D_6" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
   Returns the entire text in a plain text form.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="3a6f5412-1efd-c4c0-b35b-621c9a29a1a5.htm">GetPlainText(TextRange)</a></td><td>
   Returns a substring of the text in a plain text form. The start and end of the substring is identified
   by a given <a href="8a00baaf-8cb8-d9f0-e0a0-eaa5aa16e55e.htm">TextRange</a>.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="05b66803-bb4a-4d59-b3c2-c69d5932cadd.htm">GetSubscriptStatus<span id="LST4BEF705D_7" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
   Returns whether <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">All</a>, <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">None</a> or a <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">Mixed</a> of characters in the entire text are subscripted.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="50803bb1-2ba6-63c5-0ddf-a0bf0f40c58c.htm">GetSubscriptStatus(TextRange)</a></td><td>
   Returns whether <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">All</a>, <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">None</a> or a <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">Mixed</a> set of characters in a given text range are subscripted.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="3c2fe0d9-3c34-077a-63da-6549bbeaf852.htm">GetSuperscriptStatus<span id="LST4BEF705D_8" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
   Returns whether <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">All</a>, <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">None</a> or a <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">Mixed</a> of characters in the entire text are superscripted.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="3ad2a7db-b1c9-ba0e-661e-bb4117e3a538.htm">GetSuperscriptStatus(TextRange)</a></td><td>
   Returns whether <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">All</a>, <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">None</a> or a <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">Mixed</a> set of characters in a given text range are superscripted.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gettype#system-object-gettype" target="_blank" rel="noopener noreferrer">GetType</a></td><td>Gets the <a href="https://learn.microsoft.com/dotnet/api/system.type" target="_blank" rel="noopener noreferrer">Type</a> of the current instance.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="57d45fc6-f706-e3d6-5425-37e084bf854c.htm">GetUnderlineStatus<span id="LST4BEF705D_9" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
   Returns whether <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">All</a>, <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">None</a> or a <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">Mixed</a> of characters in the entire text are underlined.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="0ece8fda-443b-7247-9b1c-4eb493850344.htm">GetUnderlineStatus(TextRange)</a></td><td>
   Returns whether <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">All</a>, <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">None</a> or a <a href="81333f80-2181-8faa-9c1e-cadcda7f3b5e.htm">Mixed</a> set of characters in a given text range are underlined.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="b5469022-01b8-d5cb-5f3d-7a418fa37dd6.htm">SetAllCapsStatus(Boolean)</a></td><td>
   Sets the characters in the entire text to be in all caps or not.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="03a3a6c3-9195-25a1-abaa-641f00cbc930.htm">SetAllCapsStatus(TextRange, Boolean)</a></td><td>
   Sets the characters in a given text range to be in all caps or not.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="5147f4db-4b72-0596-cecb-dac6487ca178.htm">SetBoldStatus(Boolean)</a></td><td>
   Sets the characters in the entire text to be bold or not bold.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="fd0eab6d-0808-63ff-3cb0-a014f2adbbd7.htm">SetBoldStatus(TextRange, Boolean)</a></td><td>
   Sets the characters in a given text range to be bold or not bold.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="a2e6561d-da40-b701-967f-aadbe6b153f5.htm">SetIndentLevel</a></td><td>
   Sets the number of tab stops that the paragraph should be indented.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="e61a4fe2-42f4-ba27-885d-eaa1576dcc48.htm">SetItalicStatus(Boolean)</a></td><td>
   Sets the characters in the entire text to be italic or not italic.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="310407e6-1244-24cb-c033-e9620068e62e.htm">SetItalicStatus(TextRange, Boolean)</a></td><td>
   Sets the characters in a given text range to be italic or not italic.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="f82173d6-552d-d9c3-e0b8-e6a1805bdb10.htm">SetListStartNumber</a></td><td>
   Sets the list start number on the paragraphs in a given text range.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="c0bb9933-9825-a28a-a09c-8b319f089b36.htm">SetListType</a></td><td>
   Sets the <a href="7163554f-3446-22eb-afa4-5490d5df29c8.htm">ListType</a> of a paragraph.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="b2efd1c2-7e1f-2def-f72b-a22066a8b415.htm">SetPlainText(String)</a></td><td>
   Sets the entire text with the given text in a plain text form.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="ef85472c-c691-77f8-5823-33da6ea43832.htm">SetPlainText(TextRange, String)</a></td><td>
   Sets the text with the given text in a plain text form in a range.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="a08a6223-938b-43cc-f78f-f5743378614b.htm">SetSubscriptStatus(Boolean)</a></td><td>
   Sets the characters in the entire text to be subscript or not subscript.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="bc2efdbe-7706-0e4d-82ce-39ab7d039c7c.htm">SetSubscriptStatus(TextRange, Boolean)</a></td><td>
   Sets the characters in a given text range to be subscript or not subscript.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="9f4fc913-e71a-d57b-29ac-e1b8ea650737.htm">SetSuperscriptStatus(Boolean)</a></td><td>
   Sets the characters in the entire text to be superscript or not superscript.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="357540c0-f99c-94da-f3f3-585308c6543f.htm">SetSuperscriptStatus(TextRange, Boolean)</a></td><td>
   Sets the characters in a given text range to be superscript or not superscript.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="01c61fb6-104d-d594-0365-b493bb0165b5.htm">SetUnderlineStatus(Boolean)</a></td><td>
   Sets the characters in the entire text to be underlined or not underlined.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="d5f9ca3c-4631-ad4a-5a40-b7103611e254.htm">SetUnderlineStatus(TextRange, Boolean)</a></td><td>
   Sets the characters in a given text range to be underlined or not underlined.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.tostring#system-object-tostring" target="_blank" rel="noopener noreferrer">ToString</a></td><td>Returns a string that represents the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection"><p>
   An instance of FormattedText can be obtained from a <a href="ecc1ce1c-d754-96d0-35db-ca2d1d84c57c.htm">TextNote</a>
   (See <b>TextNote.GetFormattedText()</b>)
   or from a <a href="9a06448a-1c82-7fd7-8be7-9113dc1ce86a.htm">TextNode</a>
   (See <b>TextNode.GetFormattedText()</b>)
   </p><p>
   It is also possible to create a new instance of FormattedText and assign it
   to a <a href="ecc1ce1c-d754-96d0-35db-ca2d1d84c57c.htm">TextNote</a>
   (See <b>TextNote.SetFormattedText()</b>)
   This will result in a <a href="ecc1ce1c-d754-96d0-35db-ca2d1d84c57c.htm">TextNote</a> with text with the specified formatting applied
   </p><p>
   Formatted text can be used to:
   <ul><li>Create formatted text for a new <a href="ecc1ce1c-d754-96d0-35db-ca2d1d84c57c.htm">TextNote</a></li><li>Edit, Find and Replace text in an existing <a href="ecc1ce1c-d754-96d0-35db-ca2d1d84c57c.htm">TextNote</a></li><li>Modify formatting of text in an existing <a href="ecc1ce1c-d754-96d0-35db-ca2d1d84c57c.htm">TextNote</a></li><li>Or query the text and formatting a <a href="ecc1ce1c-d754-96d0-35db-ca2d1d84c57c.htm">TextNote</a> or a <a href="9a06448a-1c82-7fd7-8be7-9113dc1ce86a.htm">TextNode</a></li></ul></p><p>
   Formatted text can be populated with plain text by using its
   constructor <a href="86332d2f-1939-4985-f428-24ee8b19072e.htm">FormattedText(String)</a> that takes a string,
   or by using the <a href="b2efd1c2-7e1f-2def-f72b-a22066a8b415.htm">SetPlainText(String)</a> method.
   </p><p>
   In addition, selected ranges of text can be added, removed, or replaced with the
   <a href="ef85472c-c691-77f8-5823-33da6ea43832.htm">SetPlainText(TextRange, String)</a> method
   by specifying a <a href="8a00baaf-8cb8-d9f0-e0a0-eaa5aa16e55e.htm">TextRange</a>.
   </p><p>
   Use the <a href="79034f02-9ca0-ebe5-8d16-112d674dbdb4.htm">Find(String, Int32, Boolean, Boolean)</a> method to find the location of existing text.
   </p><p>
   Formatted text can have up to 30,000 characters.
   All characters, except the linefeed character ('\n'), are allowed.
   This means that you should not use the 'Environment.NewLine' property, since that includes a linefeed character.
   Use the carriage return character ('\r') to terminate a paragraph.
   And use a vertical tab character ('\v') to create a new line without terminating the paragraph.
   </p><p>
   Formatted text allows for individual characters to be formatted.
   The following formatting can be applied.
   <ul><li> Bold                  </li><li> Italic                </li><li> Underline             </li><li> Superscript/Subscript </li><li> All Caps              </li></ul>
   Use <a href="fd0eab6d-0808-63ff-3cb0-a014f2adbbd7.htm">SetBoldStatus(TextRange, Boolean)</a>)
   , <a href="310407e6-1244-24cb-c033-e9620068e62e.htm">SetItalicStatus(TextRange, Boolean)</a>)
   , <a href="d5f9ca3c-4631-ad4a-5a40-b7103611e254.htm">SetUnderlineStatus(TextRange, Boolean)</a>)
   , <a href="357540c0-f99c-94da-f3f3-585308c6543f.htm">SetSuperscriptStatus(TextRange, Boolean)</a>)
   , <a href="bc2efdbe-7706-0e4d-82ce-39ab7d039c7c.htm">SetSubscriptStatus(TextRange, Boolean)</a>)
   , or <a href="03a3a6c3-9195-25a1-abaa-641f00cbc930.htm">SetAllCapsStatus(TextRange, Boolean)</a>)
   to set the character formatting on a range of text.
   </p><p>
   Use <a href="654707e3-5575-a8a5-8eaf-e83425f5c50d.htm">GetBoldStatus(TextRange)</a>)
   , <a href="a4df0e88-31d5-4e75-fb17-d68ad22bf89d.htm">GetItalicStatus(TextRange)</a>)
   , <a href="0ece8fda-443b-7247-9b1c-4eb493850344.htm">GetUnderlineStatus(TextRange)</a>)
   , <a href="3ad2a7db-b1c9-ba0e-661e-bb4117e3a538.htm">GetSuperscriptStatus(TextRange)</a>)
   , <a href="50803bb1-2ba6-63c5-0ddf-a0bf0f40c58c.htm">GetSubscriptStatus(TextRange)</a>)
   , or <a href="0e9f9439-eb01-6844-992a-2128ffddedef.htm">GetAllCapsStatus(TextRange)</a>)
   to get the character formatting of a range of text.
   </p><p>
   Text can be broken up in paragraphs.  Paragraphs are terminated by a carriage return character ('\r').
   </p><p>
   Each paragraph can be indented several levels deep.
   For each additional level the indentation increments by one tab size.
   The total indentation is the product of a tab size and the indent level.
   Use <a href="a2e6561d-da40-b701-967f-aadbe6b153f5.htm">SetIndentLevel(TextRange, Int32)</a> to set the level of indenting
   up to a maximum indent level that can be obtained from
   <a href="3f77a7ca-54e8-28b5-e1e6-cee57afd13e6.htm">GetMaximumIndentLevel<span id="LST4BEF705D_10" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>
   Use <a href="2bb008be-f3b5-f0cd-bc1b-6879101ef84a.htm">GetIndentLevel(TextRange)</a> to find the indent level of a given range of text.
   </p><p>
   Note that the tab size is determined by the object that will contain the FormattedText.
   </p><p>
   In the case of a <a href="ecc1ce1c-d754-96d0-35db-ca2d1d84c57c.htm">TextNote</a> the tab size is a property of the <a href="2991b6af-daf6-463d-3796-8b83fdbd344f.htm">TextNoteType</a>
   returned from <b>TextNote.TextNoteType</b>.
   The tab size can be found by calling the <a href="2e852bc4-46c6-5598-cc45-0eaf38cf8973.htm">Parameter<span id="LST4BEF705D_11" data-languageSpecificText="cs=[|vb=(|cpp=[|nu=(|fs= "></span>Guid<span id="LST4BEF705D_12" data-languageSpecificText="cs=]|vb=)|cpp=]|nu=)|fs= "></span></a>
   with <a href="fb011c91-be7e-f737-28c7-3f1e1917a0e0.htm">TEXT_TAB_SIZE</a> on the <a href="2991b6af-daf6-463d-3796-8b83fdbd344f.htm">TextNoteType</a> obtained from the <a href="ecc1ce1c-d754-96d0-35db-ca2d1d84c57c.htm">TextNote</a></p><p>
   In the case of a <a href="9a06448a-1c82-7fd7-8be7-9113dc1ce86a.htm">TextNode</a> the tab size can be obtained from its <b>TabSize</b> property
   </p><p>
   Formatted text can also be used to create numbered or bulleted paragraphs with the
   <a href="c0bb9933-9825-a28a-a09c-8b319f089b36.htm">SetListType(TextRange, ListType)</a> method.
   </p><p>
   The following <a href="7163554f-3446-22eb-afa4-5490d5df29c8.htm">ListType</a> options are available:
   <ul><li><a href="7163554f-3446-22eb-afa4-5490d5df29c8.htm">Bullet</a></li><li><a href="7163554f-3446-22eb-afa4-5490d5df29c8.htm">ArabicNumbers</a></li><li><a href="7163554f-3446-22eb-afa4-5490d5df29c8.htm">LowerCaseLetters</a></li><li><a href="7163554f-3446-22eb-afa4-5490d5df29c8.htm">UpperCaseLetters</a></li></ul>
   Paragraphs with a <a href="7163554f-3446-22eb-afa4-5490d5df29c8.htm">ListType</a> other than <a href="7163554f-3446-22eb-afa4-5490d5df29c8.htm">None</a> are considered
   to be 'list' paragraphs.
   Consecutive list paragraphs with the same indentation level are treated as part of the same list.
   A list ends when a list paragraph is followed by
   <ul><li>a paragraph that has <a href="7163554f-3446-22eb-afa4-5490d5df29c8.htm">None</a></li><li>or a list paragraph that has a lower indentation level, i.e. is indented less.
   (See <a href="2bb008be-f3b5-f0cd-bc1b-6879101ef84a.htm">GetIndentLevel(TextRange)</a>)</li></ul>
   Note that a list will continue uninterrupted after list paragraphs that have higher indentation level.
   These paragraphs form a 'sub-list' of the list they interrupt.
   Sub-lists can have their own sub-sub-lists.
   The nesting level is only limited by the maximum indent level.
   Using <a href="a2e6561d-da40-b701-967f-aadbe6b153f5.htm">SetIndentLevel(TextRange, Int32)</a> it is therefore possible to create multi-level lists.
   </p><p>
   FormattedText will keep lists consistent.
   That means that list paragraphs will automatically get sequential numbers or letters.
   It also means that if the list type of one of the paragraphs in a list
   is changed then that change is propagated to all the paragraphs in that list.
   Note that this will not affect the list type of any nested sub-lists.
   </p><p>
   Use a vertical tab character ('\v') to insert a line without a bullet or number.
   Since this does not end the paragraph this will allow the list to continue to the next paragraph.
   </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDC')" onkeypress="SectionExpandCollapse_CheckKey('IDDC', event)" tabindex="0"><img id="IDDCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDDCSection" class="collapsibleSection"><div id="IDADC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDADC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDADC','cs','1','4');return false;">C#</a></div><div id="IDADC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDADC','vb','2','4');return false;">VB</a></div><div id="IDADC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDADC','cpp','3','4');return false;">C++</a></div><div id="IDADC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDADC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDADC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDADC');return false;" title="Copy">Copy</a></div></div><div id="IDADC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> FormatText(TextNote textNote)
{
    <span class="highlight-comment">// TextNote created with "New sample text"</span>
    FormattedText formatText = textNote.GetFormattedText();

    <span class="highlight-comment">// italicize "New"</span>
    TextRange range = <span class="highlight-keyword">new</span> TextRange(<span class="highlight-number">0</span>, <span class="highlight-number">3</span>);
    formatText.SetItalicStatus(range, <span class="highlight-keyword">true</span>);

    <span class="highlight-comment">// make "sample" bold</span>
    range = formatText.Find(<span class="highlight-literal">"sample"</span>, <span class="highlight-number">0</span>, <span class="highlight-keyword">false</span>, <span class="highlight-keyword">true</span>);
    <span class="highlight-keyword">if</span> (range.Length &gt; <span class="highlight-number">0</span>)
        formatText.SetBoldStatus(range, <span class="highlight-keyword">true</span>);

    <span class="highlight-comment">// make "text" underlined</span>
    range = formatText.Find(<span class="highlight-literal">"text"</span>, <span class="highlight-number">0</span>, <span class="highlight-keyword">false</span>, <span class="highlight-keyword">true</span>);
    <span class="highlight-keyword">if</span> (range.Length &gt; <span class="highlight-number">0</span>)
        formatText.SetUnderlineStatus(range, <span class="highlight-keyword">true</span>);

    <span class="highlight-comment">// make all text uppercase</span>
    formatText.SetAllCapsStatus(<span class="highlight-keyword">true</span>);

    textNote.SetFormattedText(formatText);
}</pre></div><div id="IDADC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> FormatText(textNote <span class="highlight-keyword">As</span> TextNote)
    <span class="highlight-comment">' TextNote created with "New sample text"</span>
    <span class="highlight-keyword">Dim</span> formatText__1 <span class="highlight-keyword">As</span> FormattedText = textNote.GetFormattedText()

    <span class="highlight-comment">' italicize "New"</span>
    <span class="highlight-keyword">Dim</span> range <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> TextRange(<span class="highlight-number">0</span>, <span class="highlight-number">3</span>)
    formatText__1.SetItalicStatus(range, <span class="highlight-keyword">True</span>)

    <span class="highlight-comment">' make "sample" bold</span>
    range = formatText__1.Find(<span class="highlight-literal">"sample"</span>, <span class="highlight-number">0</span>, <span class="highlight-keyword">False</span>, <span class="highlight-keyword">True</span>)
    <span class="highlight-keyword">If</span> range.Length &gt; <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
        formatText__1.SetBoldStatus(range, <span class="highlight-keyword">True</span>)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' make "text" underlined</span>
    range = formatText__1.Find(<span class="highlight-literal">"text"</span>, <span class="highlight-number">0</span>, <span class="highlight-keyword">False</span>, <span class="highlight-keyword">True</span>)
    <span class="highlight-keyword">If</span> range.Length &gt; <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
        formatText__1.SetUnderlineStatus(range, <span class="highlight-keyword">True</span>)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' make all text uppercase</span>
    formatText__1.SetAllCapsStatus(<span class="highlight-keyword">True</span>)

    textNote.SetFormattedText(formatText__1)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div><div id="IDADC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDADC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter"><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:revitapifeedback%40autodesk.com?Subject=Revit%202025%20API">Autodesk</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>
<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>ItemFactoryBase.NewFamilyInstance(XYZ, FamilySymbol, XYZ, Element, StructuralType) Method</title><meta name="Title" content="NewFamilyInstance(XYZ, FamilySymbol, XYZ, Element, StructuralType) Method" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.Creation.ItemFactoryBase.NewFamilyInstance(Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.FamilySymbol,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.Element,Autodesk.Revit.DB.Structure.StructuralType)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="container" content="Autodesk.Revit.Creation" /><meta name="file" content="7febcfdb-dbfa-317a-1c5e-882621f3e846" /><meta name="guid" content="7febcfdb-dbfa-317a-1c5e-882621f3e846" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="Inserts a new instance of a family into the document, using a location, type/symbol, the host element and a reference direction." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" /></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">Revit 2025 API</div><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Item<wbr />Factory<wbr />Base<span id="LST73107C50_0" data-languageSpecificText="cpp=::|nu=."></span>New<wbr />Family<wbr />Instance(XYZ, Family<wbr />Symbol, XYZ, Element, Structural<wbr />Type) Method</h1></td></tr></table><div class="summary">Inserts a new instance of a family into the document,
using a location, type/symbol, the host element and a reference direction.</div><br /><strong>Namespace:</strong> <a href="ded320da-058a-4edd-0418-0582389559a7.htm">Autodesk.Revit.Creation</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">FamilyInstance</span> <span class="identifier">NewFamilyInstance</span>(
	<span class="identifier">XYZ</span> <span class="parameter">location</span>,
	<span class="identifier">FamilySymbol</span> <span class="parameter">symbol</span>,
	<span class="identifier">XYZ</span> <span class="parameter">referenceDirection</span>,
	<span class="identifier">Element</span> <span class="parameter">host</span>,
	<span class="identifier">StructuralType</span> <span class="parameter">structuralType</span>
)</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">NewFamilyInstance</span> ( 
	<span class="parameter">location</span> <span class="keyword">As</span> <span class="identifier">XYZ</span>,
	<span class="parameter">symbol</span> <span class="keyword">As</span> <span class="identifier">FamilySymbol</span>,
	<span class="parameter">referenceDirection</span> <span class="keyword">As</span> <span class="identifier">XYZ</span>,
	<span class="parameter">host</span> <span class="keyword">As</span> <span class="identifier">Element</span>,
	<span class="parameter">structuralType</span> <span class="keyword">As</span> <span class="identifier">StructuralType</span>
) <span class="keyword">As</span> <span class="identifier">FamilyInstance</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="identifier">FamilyInstance</span>^ <span class="identifier">NewFamilyInstance</span>(
	<span class="identifier">XYZ</span>^ <span class="parameter">location</span>, 
	<span class="identifier">FamilySymbol</span>^ <span class="parameter">symbol</span>, 
	<span class="identifier">XYZ</span>^ <span class="parameter">referenceDirection</span>, 
	<span class="identifier">Element</span>^ <span class="parameter">host</span>, 
	<span class="identifier">StructuralType</span> <span class="parameter">structuralType</span>
)</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">member</span> <span class="identifier">NewFamilyInstance</span> : 
        <span class="parameter">location</span> : <span class="identifier">XYZ</span> * 
        <span class="parameter">symbol</span> : <span class="identifier">FamilySymbol</span> * 
        <span class="parameter">referenceDirection</span> : <span class="identifier">XYZ</span> * 
        <span class="parameter">host</span> : <span class="identifier">Element</span> * 
        <span class="parameter">structuralType</span> : <span class="identifier">StructuralType</span> <span class="keyword">-&gt;</span> <span class="identifier">FamilyInstance</span> </pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">location</span>  <a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">XYZ</a></dt><dd>The physical location where the instance is to be placed.</dd><dt class="has-text-weight-normal"><span class="parameter">symbol</span>  <a href="a1acaed0-6a62-4c1d-94f5-4e27ce0923d3.htm">FamilySymbol</a></dt><dd>A FamilySymbol object that represents the type of the instance that is to be inserted.</dd><dt class="has-text-weight-normal"><span class="parameter">referenceDirection</span>  <a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">XYZ</a></dt><dd> A vector that dictates the direction of certain family instances. </dd><dt class="has-text-weight-normal"><span class="parameter">host</span>  <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a></dt><dd> A host object into which the instance will be embedded </dd><dt class="has-text-weight-normal"><span class="parameter">structuralType</span>  <a href="0a0a3793-5fce-283d-4953-a137f5593db9.htm">StructuralType</a></dt><dd> If structural then specify the type of the component. </dd></dl><h4>Return Value</h4><a href="0d2231f8-91e6-794f-92ae-16aad8014b27.htm">FamilyInstance</a><br />If creation was successful then an instance to the new object is returned, otherwise <span class="keyword"><span id="LST73107C50_1" data-languageSpecificText="cpp=nullptr|vb=Nothing|nu=null"></span></span>.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDJC')" onkeypress="SectionExpandCollapse_CheckKey('IDJC', event)" tabindex="0"><img id="IDJCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="IDJCSection" class="collapsibleSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">ArgumentException</a></td><td>Thrown if The symbol is not active.</td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDIC')" onkeypress="SectionExpandCollapse_CheckKey('IDIC', event)" tabindex="0"><img id="IDICToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDICSection" class="collapsibleSection">This method allows you to create FamilyInstance objects that require both a location and direction. 
If the instance fails to be created an exception may be thrown. 
<p>The type/symbol that is used must be loaded into the document
before this method is called. Families and their symbols can be loaded using the Document.LoadFamily
or Document.LoadFamilySymbol methods. </p><p>Some Families, such as Beams, have more than one endpoint and
are inserted in the same manner as single point instances. Once inserted these linear family instances
can have their endpoints changed by using the instance's Element.Location property.</p><p>Note: if the created family instance includes nested instances, the API framework will automatically regenerate 
the document during this method call.</p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDKC')" onkeypress="SectionExpandCollapse_CheckKey('IDKC', event)" tabindex="0"><img id="IDKCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDKCSection" class="collapsibleSection"><div id="IDAKC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAKC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAKC','cs','1','4');return false;">C#</a></div><div id="IDAKC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAKC','vb','2','4');return false;">VB</a></div><div id="IDAKC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAKC','cpp','3','4');return false;">C++</a></div><div id="IDAKC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAKC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAKC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAKC');return false;" title="Copy">Copy</a></div></div><div id="IDAKC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Get a floor to place the beds</span>
 FilteredElementCollector collector = <span class="highlight-keyword">new</span> FilteredElementCollector(document);
 Floor floor = collector.OfClass(<span class="highlight-keyword">typeof</span>(Floor)).FirstElement() <span class="highlight-keyword">as</span> Floor;
 <span class="highlight-keyword">if</span> (floor != <span class="highlight-keyword">null</span>)
 {
     <span class="highlight-comment">// Find a Bed-Box family</span>
     Family family = <span class="highlight-keyword">null</span>;
     FilteredElementCollector famCollector = <span class="highlight-keyword">new</span> FilteredElementCollector(document);
     famCollector.OfClass(<span class="highlight-keyword">typeof</span>(Family));
     ICollection&lt;Element&gt; collection = famCollector.ToElements();
     <span class="highlight-keyword">foreach</span> (Element element <span class="highlight-keyword">in</span> collection)
     {

         <span class="highlight-keyword">if</span> (element.Name.CompareTo(<span class="highlight-literal">"Bed-Box"</span>) == <span class="highlight-number">0</span>)
         {
             family = element <span class="highlight-keyword">as</span> Family;
             <span class="highlight-keyword">break</span>;
         }
     }

     <span class="highlight-keyword">if</span> (family != <span class="highlight-keyword">null</span>)
     {
         <span class="highlight-comment">// Enumerate the beds in the Bed-Box family</span>
         FilteredElementCollector fsCollector = <span class="highlight-keyword">new</span> FilteredElementCollector(document);
         ICollection&lt;Element&gt; fsCollection = fsCollector.WherePasses(<span class="highlight-keyword">new</span> FamilySymbolFilter(family.Id)).ToElements();
         IEnumerator&lt;Element&gt; symbolItor = fsCollection.GetEnumerator();

         <span class="highlight-keyword">int</span> x = <span class="highlight-number">0</span>, y = <span class="highlight-number">0</span>;
         <span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>;
         <span class="highlight-keyword">while</span> (symbolItor.MoveNext())
         {
             FamilySymbol symbol = symbolItor.Current <span class="highlight-keyword">as</span> FamilySymbol;
             XYZ location = <span class="highlight-keyword">new</span> XYZ(x, y, <span class="highlight-number">0</span>);
             XYZ direction = <span class="highlight-keyword">new</span> XYZ();
             <span class="highlight-keyword">switch</span> (i % <span class="highlight-number">3</span>)
             {
                 <span class="highlight-keyword">case</span> <span class="highlight-number">0</span>:
                     direction = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>);
                     <span class="highlight-keyword">break</span>;
                 <span class="highlight-keyword">case</span> <span class="highlight-number">1</span>:
                     direction = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>);
                     <span class="highlight-keyword">break</span>;
                 <span class="highlight-keyword">case</span> <span class="highlight-number">2</span>:
                     direction = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>);
                     <span class="highlight-keyword">break</span>;
             }
             FamilyInstance instance = document.Create.NewFamilyInstance(location, symbol, direction, floor, StructuralType.NonStructural);
             x += <span class="highlight-number">10</span>;
             i++;
         }
     }
 }</pre></div><div id="IDAKC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-comment">' Get a floor to place the beds</span>
<span class="highlight-keyword">Dim</span> collector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(document)
<span class="highlight-keyword">Dim</span> floor <span class="highlight-keyword">As</span> Floor = <span class="highlight-keyword">TryCast</span>(collector.OfClass(<span class="highlight-keyword">GetType</span>(Floor)).FirstElement(), Floor)
<span class="highlight-keyword">If</span> floor <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
    <span class="highlight-comment">' Find a Bed-Box family</span>
    <span class="highlight-keyword">Dim</span> family <span class="highlight-keyword">As</span> Family = <span class="highlight-keyword">Nothing</span>
    <span class="highlight-keyword">Dim</span> famCollector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(document)
    famCollector.OfClass(<span class="highlight-keyword">GetType</span>(Family))
    <span class="highlight-keyword">Dim</span> collection <span class="highlight-keyword">As</span> ICollection(<span class="highlight-keyword">Of</span> Element) = famCollector.ToElements()
    <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> element <span class="highlight-keyword">As</span> Element <span class="highlight-keyword">In</span> collection

        <span class="highlight-keyword">If</span> element.Name.CompareTo(<span class="highlight-literal">"Bed-Box"</span>) = <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
            family = <span class="highlight-keyword">TryCast</span>(element, Family)
            <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">For</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Next</span>

    <span class="highlight-keyword">If</span> family <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-comment">' Enumerate the beds in the Bed-Box family</span>
        <span class="highlight-keyword">Dim</span> fsCollector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(document)
        <span class="highlight-keyword">Dim</span> fsCollection <span class="highlight-keyword">As</span> ICollection(<span class="highlight-keyword">Of</span> Element) = fsCollector.WherePasses(<span class="highlight-keyword">New</span> FamilySymbolFilter(family.Id)).ToElements()
        <span class="highlight-keyword">Dim</span> symbolItor <span class="highlight-keyword">As</span> IEnumerator(<span class="highlight-keyword">Of</span> Element) = fsCollection.GetEnumerator()

        <span class="highlight-keyword">Dim</span> x <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span>, y <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span>
        <span class="highlight-keyword">Dim</span> i <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span>
        <span class="highlight-keyword">While</span> symbolItor.MoveNext()
            <span class="highlight-keyword">Dim</span> symbol <span class="highlight-keyword">As</span> FamilySymbol = <span class="highlight-keyword">TryCast</span>(symbolItor.Current, FamilySymbol)
            <span class="highlight-keyword">Dim</span> location <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(x, y, <span class="highlight-number">0</span>)
            <span class="highlight-keyword">Dim</span> direction <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ()
            <span class="highlight-keyword">Select</span> <span class="highlight-keyword">Case</span> i <span class="highlight-keyword">Mod</span> <span class="highlight-number">3</span>
                <span class="highlight-keyword">Case</span> <span class="highlight-number">0</span>
                    direction = <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>)
                    <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
                <span class="highlight-keyword">Case</span> <span class="highlight-number">1</span>
                    direction = <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>)
                    <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
                <span class="highlight-keyword">Case</span> <span class="highlight-number">2</span>
                    direction = <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>)
                    <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">Select</span>
            <span class="highlight-keyword">Dim</span> instance <span class="highlight-keyword">As</span> FamilyInstance = document.Create.NewFamilyInstance(location, symbol, direction, floor, StructuralType.NonStructural)
            x += <span class="highlight-number">10</span>
            i += <span class="highlight-number">1</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">While</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span></pre></div><div id="IDAKC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDAKC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="cba2c84a-22c0-e6e7-a99c-67656901853a.htm">ItemFactoryBase Class</a></div><div><a href="451ee414-cea0-e9bd-227b-c73bc93507dd.htm">NewFamilyInstance Overload</a></div><div><a href="ded320da-058a-4edd-0418-0582389559a7.htm">Autodesk.Revit.Creation Namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter"><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:revitapifeedback%40autodesk.com?Subject=Revit%202025%20API">Autodesk</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>
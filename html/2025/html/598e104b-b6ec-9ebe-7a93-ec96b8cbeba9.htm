<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>Asset Class</title><meta name="Title" content="Asset Class" /><meta name="Microsoft.Help.Id" content="T:Autodesk.Revit.DB.Visual.Asset" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="Autodesk.Revit.DB.Visual.Asset class" /><meta name="System.Keywords" content="Asset class" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.Visual.Asset" /><meta name="Microsoft.Help.F1" content="Asset" /><meta name="container" content="Autodesk.Revit.DB.Visual" /><meta name="file" content="598e104b-b6ec-9ebe-7a93-ec96b8cbeba9" /><meta name="guid" content="598e104b-b6ec-9ebe-7a93-ec96b8cbeba9" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="Represents a connected property of material." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" /></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">Revit 2025 API</div><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Asset Class</h1></td></tr></table><div class="summary">
   Represents a connected property of material.
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDA')" onkeypress="SectionExpandCollapse_CheckKey('IDDA', event)" tabindex="0"><img id="IDDAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="IDDASection" class="collapsibleSection"><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">System<span id="LSTFBFD5B29_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Object</a><br />  <a href="7be89499-d011-ab43-4715-0ee6f9335970.htm">Autodesk.Revit.DB.Visual<span id="LSTFBFD5B29_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>AssetProperty</a><br />    <a href="45955e9d-7dd4-b06c-f71a-f9ae2cc1c34a.htm">Autodesk.Revit.DB.Visual<span id="LSTFBFD5B29_2" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>AssetProperties</a><br />      <span class="selflink">Autodesk.Revit.DB.Visual<span id="LSTFBFD5B29_3" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Asset</span><br /></div><br /><strong>Namespace:</strong> <a href="f5a10581-6ac2-be19-0e32-f87d05bc8b83.htm">Autodesk.Revit.DB.Visual</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">Asset</span> : <span class="identifier">AssetProperties</span></pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">Asset</span>
	<span class="keyword">Inherits</span> <span class="identifier">AssetProperties</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">Asset</span> : <span class="keyword">public</span> <span class="identifier">AssetProperties</span></pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">type</span> <span class="identifier">Asset</span> = 
    <span class="keyword">class</span>
        <span class="keyword">inherit</span> <span class="identifier">AssetProperties</span>
    <span class="keyword">end</span></pre></div></div></div></div><p>The <span class="selflink">Asset</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDQEA')" onkeypress="SectionExpandCollapse_CheckKey('IDQEA', event)" tabindex="0"><img id="IDQEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="IDQEASection" class="collapsibleSection"><table id="PropertyList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="a1dd18ea-4c8a-afc9-0633-94cc65953fb1.htm">AssetType</a></td><td>
   The type of RenderingAsset
</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="6d5fa82f-4a78-1928-b267-c33b92b6d6ea.htm">IsReadOnly</a></td><td>
   Identifies if the object is read-only or modifiable.
   If true, the object may not be modified.  If false, the object's contents may be modified.
<br />(Inherited from <a href="7be89499-d011-ab43-4715-0ee6f9335970.htm">AssetProperty</a>)</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="81e8a4a9-ad56-09e5-bcf8-9801a24dd636.htm">IsValidObject</a></td><td>
   Specifies whether the .NET object represents a valid Revit entity.
<br />(Inherited from <a href="7be89499-d011-ab43-4715-0ee6f9335970.htm">AssetProperty</a>)</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="825febaa-aba8-21e6-07bd-ad77d1b7e527.htm">Item</a></td><td><br />(Inherited from <a href="45955e9d-7dd4-b06c-f71a-f9ae2cc1c34a.htm">AssetProperties</a>)</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="1d2c7367-6db3-bfd6-57b8-37827f5156b4.htm">LibraryName</a></td><td>
   Library name
</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="57ab6af1-a4eb-8973-33b5-9a1f38796679.htm">Name</a></td><td>Get the name of the AssetProperty<br />(Inherited from <a href="7be89499-d011-ab43-4715-0ee6f9335970.htm">AssetProperty</a>)</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="4b7ace45-690c-f643-e9be-f333d0bb3bf2.htm">NumberOfConnectedProperties</a></td><td>
   The number of currently connected properties.
<br />(Inherited from <a href="7be89499-d011-ab43-4715-0ee6f9335970.htm">AssetProperty</a>)</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="6709faa0-bbd6-3a10-9269-67b9d1af11a6.htm">Size</a></td><td>
   The number of the AssetProperty(s) in the object.
<br />(Inherited from <a href="45955e9d-7dd4-b06c-f71a-f9ae2cc1c34a.htm">AssetProperties</a>)</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="bf0cfeff-1eba-4734-d2aa-96f23b7009a1.htm">Title</a></td><td>
   Asset title
</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="20d79fdf-59cf-67a7-3db1-c27955e48035.htm">Type</a></td><td>Returns the type of the AssetProperty<br />(Inherited from <a href="7be89499-d011-ab43-4715-0ee6f9335970.htm">AssetProperty</a>)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDAEA')" onkeypress="SectionExpandCollapse_CheckKey('IDAEA', event)" tabindex="0"><img id="IDAEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="IDAEASection" class="collapsibleSection"><table id="MethodList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="bb4fdff5-a1b3-c215-c8ac-c1e6abaaea69.htm">AddConnectedAsset</a></td><td>
   Adds a new connected asset attached to this asset property, if it allows it.
<br />(Inherited from <a href="7be89499-d011-ab43-4715-0ee6f9335970.htm">AssetProperty</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="dce50799-b956-e3f9-86c2-e67aaf78c69c.htm">AddCopyAsConnectedAsset</a></td><td>
   Makes a copy of the asset and connects it to this property.
<br />(Inherited from <a href="7be89499-d011-ab43-4715-0ee6f9335970.htm">AssetProperty</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="dc1aefa4-7c91-64e4-edc0-27e1cadeacc1.htm">Dispose</a></td><td><br />(Inherited from <a href="7be89499-d011-ab43-4715-0ee6f9335970.htm">AssetProperty</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noopener noreferrer">Equals</a></td><td>Determines whether the specified object is equal to the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="ff64717a-fa49-d828-7daa-941986971a61.htm">FindByName</a></td><td>
   Gets the property with the given name.
<br />(Inherited from <a href="45955e9d-7dd4-b06c-f71a-f9ae2cc1c34a.htm">AssetProperties</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="dcdee945-b819-c9da-22ea-4ef5f0b06065.htm">Get</a></td><td>
   Gets the property at the given index.
<br />(Inherited from <a href="45955e9d-7dd4-b06c-f71a-f9ae2cc1c34a.htm">AssetProperties</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="5f34b9bc-4e1b-a9db-5262-327fc22e10c1.htm">GetAllConnectedProperties</a></td><td>
   Gets the list of the connected properties.
   Connected properties are the detachable properties of an AssetProperty.
   e.g. diffuse property can have texture as its connected property. It can also detach texture on runtime.
<br />(Inherited from <a href="7be89499-d011-ab43-4715-0ee6f9335970.htm">AssetProperty</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="e12badf1-5be9-dc40-3d0a-10ba466e8e20.htm">GetConnectedProperty</a></td><td>
   Gets one connected property with specified index.
<br />(Inherited from <a href="7be89499-d011-ab43-4715-0ee6f9335970.htm">AssetProperty</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode#system-object-gethashcode" target="_blank" rel="noopener noreferrer">GetHashCode</a></td><td>Serves as the default hash function.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="3a190829-9269-0e56-8b9b-a53b89de35a6.htm">GetSingleConnectedAsset</a></td><td>
   Gets the single connected asset attached to this asset property, if it exists.
<br />(Inherited from <a href="7be89499-d011-ab43-4715-0ee6f9335970.htm">AssetProperty</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gettype#system-object-gettype" target="_blank" rel="noopener noreferrer">GetType</a></td><td>Gets the <a href="https://learn.microsoft.com/dotnet/api/system.type" target="_blank" rel="noopener noreferrer">Type</a> of the current instance.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="8e7fa788-9842-883d-16f1-73b5a0802d61.htm">IsEditable</a></td><td>
   Check if property can be edited.
<br />(Inherited from <a href="7be89499-d011-ab43-4715-0ee6f9335970.htm">AssetProperty</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="dea26a3b-bc9b-db11-447c-dd9698377155.htm">IsValidIndex</a></td><td>
   Returns true if the provided index is valid.
<br />(Inherited from <a href="45955e9d-7dd4-b06c-f71a-f9ae2cc1c34a.htm">AssetProperties</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="22a7e616-123f-ec35-b162-067dda3a6a60.htm">IsValidSchemaIdentifier</a></td><td>
   Check that schema name is valid
<br />(Inherited from <a href="7be89499-d011-ab43-4715-0ee6f9335970.htm">AssetProperty</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="1f25e33b-fd8b-692c-097d-f5eee8dfbd21.htm">RemoveConnectedAsset</a></td><td>
   Removes the connected asset attached to this asset property if any.
<br />(Inherited from <a href="7be89499-d011-ab43-4715-0ee6f9335970.htm">AssetProperty</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.tostring#system-object-tostring" target="_blank" rel="noopener noreferrer">ToString</a></td><td>Returns a string that represents the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDBCSection" class="collapsibleSection"><div id="IDABC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDABC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDABC','cs','1','4');return false;">C#</a></div><div id="IDABC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDABC','vb','2','4');return false;">VB</a></div><div id="IDABC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDABC','cpp','3','4');return false;">C++</a></div><div id="IDABC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDABC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDABC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDABC');return false;" title="Copy">Copy</a></div></div><div id="IDABC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> ReadAsset(Asset asset)
{
   <span class="highlight-comment">// Get the asset name, type and library name.</span>
   AssetType type = asset.AssetType;
   <span class="highlight-keyword">string</span> name = asset.Name;
   <span class="highlight-keyword">string</span> libraryName = asset.LibraryName;

   <span class="highlight-comment">// travel the asset properties in the asset.</span>
   <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> idx = <span class="highlight-number">0</span>; idx &lt; asset.Size; idx++)
   {
      AssetProperty prop = asset.Get(idx);
      ReadAssetProperty(prop);
   }
}

<span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> ReadAssetProperty(AssetProperty prop)
{
   <span class="highlight-keyword">switch</span> (prop.Type)
   {
      <span class="highlight-comment">// Retrieve the value from simple type property is easy.</span>
      <span class="highlight-comment">// for example, retrieve bool property value.</span>
      <span class="highlight-keyword">case</span> AssetPropertyType.Boolean:
         AssetPropertyBoolean boolProp = prop <span class="highlight-keyword">as</span> AssetPropertyBoolean;
         <span class="highlight-keyword">bool</span> propValue = boolProp.Value;
         <span class="highlight-keyword">break</span>;

      <span class="highlight-comment">// When you retrieve the value from the data array property,</span>
      <span class="highlight-comment">// you may need to get which value the property stands for.</span>
      <span class="highlight-comment">// for example, the APT_Double44 may be a transform data.</span>
      <span class="highlight-keyword">case</span> AssetPropertyType.Double44:
         AssetPropertyDoubleArray4d transformProp = prop <span class="highlight-keyword">as</span> AssetPropertyDoubleArray4d;
         IList&lt;<span class="highlight-keyword">double</span>&gt; tranformValue = transformProp.GetValueAsDoubles();
         <span class="highlight-keyword">break</span>;

      <span class="highlight-comment">// The APT_List contains a list of sub asset properties with same type.</span>
      <span class="highlight-keyword">case</span> AssetPropertyType.List:
         AssetPropertyList propList = prop <span class="highlight-keyword">as</span> AssetPropertyList;
         IList&lt;AssetProperty&gt; subProps = propList.GetValue();
         <span class="highlight-keyword">if</span> (subProps.Count == <span class="highlight-number">0</span>)
            <span class="highlight-keyword">break</span>;
         <span class="highlight-keyword">switch</span> (subProps[<span class="highlight-number">0</span>].Type)
         {
            <span class="highlight-keyword">case</span> AssetPropertyType.Integer:
               <span class="highlight-keyword">foreach</span> (AssetProperty subProp <span class="highlight-keyword">in</span> subProps)
               {
                  AssetPropertyInteger intProp = subProp <span class="highlight-keyword">as</span> AssetPropertyInteger;
                  <span class="highlight-keyword">int</span> intValue = intProp.Value;
               }
               <span class="highlight-keyword">break</span>;
         }
         <span class="highlight-keyword">break</span>;

      <span class="highlight-keyword">case</span> AssetPropertyType.Asset:
         Asset propAsset = prop <span class="highlight-keyword">as</span> Asset;
         ReadAsset(propAsset);
         <span class="highlight-keyword">break</span>;
      <span class="highlight-keyword">default</span>:
         <span class="highlight-keyword">break</span>;
   }

   <span class="highlight-comment">// Get the connected properties.</span>
   <span class="highlight-comment">// please notice that the information of many texture stores here.</span>
   <span class="highlight-keyword">if</span> (prop.NumberOfConnectedProperties == <span class="highlight-number">0</span>)
      <span class="highlight-keyword">return</span>;
   <span class="highlight-keyword">foreach</span> (AssetProperty connectedProp <span class="highlight-keyword">in</span> prop.GetAllConnectedProperties())
   {
      <span class="highlight-comment">// Note: Usually, the connected property is an Asset.</span>
      ReadAssetProperty(connectedProp);
   }
}</pre></div><div id="IDABC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> ReadAsset(asset <span class="highlight-keyword">As</span> Asset)
    <span class="highlight-comment">' Get the asset name, type and library name.</span>
    <span class="highlight-keyword">Dim</span> type <span class="highlight-keyword">As</span> AssetType = asset.AssetType
    <span class="highlight-keyword">Dim</span> name <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = asset.Name
    <span class="highlight-keyword">Dim</span> libraryName <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = asset.LibraryName

    <span class="highlight-comment">' travel the asset properties in the asset.</span>
    <span class="highlight-keyword">For</span> idx <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> asset.Size - <span class="highlight-number">1</span>
    <span class="highlight-keyword">Dim</span> prop <span class="highlight-keyword">As</span> AssetProperty = asset.<span class="highlight-keyword">Get</span>(idx)
    ReadAssetProperty(prop)
    <span class="highlight-keyword">Next</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>

<span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> ReadAssetProperty(prop <span class="highlight-keyword">As</span> AssetProperty)
    <span class="highlight-keyword">Select</span> <span class="highlight-keyword">Case</span> prop.Type
        <span class="highlight-comment">' Retrieve the value from simple type property is easy.</span>
        <span class="highlight-comment">' for example, retrieve bool property value.</span>
    <span class="highlight-keyword">Case</span> AssetPropertyType.<span class="highlight-keyword">Boolean</span>
       <span class="highlight-keyword">Dim</span> boolProp <span class="highlight-keyword">As</span> AssetPropertyBoolean = <span class="highlight-keyword">TryCast</span>(prop, AssetPropertyBoolean)
       <span class="highlight-keyword">Dim</span> propValue <span class="highlight-keyword">As</span> <span class="highlight-keyword">Boolean</span> = boolProp.Value
       <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>

            <span class="highlight-comment">' When you retrieve the value from the data array property,</span>
            <span class="highlight-comment">' you may need to get which value the property stands for.</span>
            <span class="highlight-comment">' for example, the APT_Double44 may be a transform data.</span>
    <span class="highlight-keyword">Case</span> AssetPropertyType.Double44
       <span class="highlight-keyword">Dim</span> transformProp <span class="highlight-keyword">As</span> AssetPropertyDoubleArray4d = <span class="highlight-keyword">TryCast</span>(prop, AssetPropertyDoubleArray4d)
       <span class="highlight-keyword">Dim</span> tranformValue <span class="highlight-keyword">As</span> IList(<span class="highlight-keyword">Of</span> <span class="highlight-keyword">Double</span>) = transformProp.GetValueAsDoubles()
       <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>

            <span class="highlight-comment">' The APT_List contains a list of sub asset properties with same type.</span>
    <span class="highlight-keyword">Case</span> AssetPropertyType.List
       <span class="highlight-keyword">Dim</span> propList <span class="highlight-keyword">As</span> AssetPropertyList = <span class="highlight-keyword">TryCast</span>(prop, AssetPropertyList)
       <span class="highlight-keyword">Dim</span> subProps <span class="highlight-keyword">As</span> IList(<span class="highlight-keyword">Of</span> AssetProperty) = propList.GetValue()
       <span class="highlight-keyword">If</span> subProps.Count = <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
          <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
       <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
       <span class="highlight-keyword">Select</span> <span class="highlight-keyword">Case</span> subProps(<span class="highlight-number">0</span>).Type
          <span class="highlight-keyword">Case</span> AssetPropertyType.<span class="highlight-keyword">Integer</span>
             <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> subProp <span class="highlight-keyword">As</span> AssetProperty <span class="highlight-keyword">In</span> subProps
                <span class="highlight-keyword">Dim</span> intProp <span class="highlight-keyword">As</span> AssetPropertyInteger = <span class="highlight-keyword">TryCast</span>(subProp, AssetPropertyInteger)
                <span class="highlight-keyword">Dim</span> intValue <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = intProp.Value
             <span class="highlight-keyword">Next</span>
             <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
       <span class="highlight-keyword">End</span> <span class="highlight-keyword">Select</span>
       <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>

    <span class="highlight-keyword">Case</span> AssetPropertyType.Asset
       <span class="highlight-keyword">Dim</span> propAsset <span class="highlight-keyword">As</span> Asset = <span class="highlight-keyword">TryCast</span>(prop, Asset)
            ReadAsset(propAsset)
            <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
        <span class="highlight-keyword">Case</span> <span class="highlight-keyword">Else</span>
            <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Select</span>

    <span class="highlight-comment">' Get the connected properties.</span>
    <span class="highlight-comment">' please notice that the information of many texture stores here.</span>
    <span class="highlight-keyword">If</span> prop.NumberOfConnectedProperties = <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> connectedProp <span class="highlight-keyword">As</span> AssetProperty <span class="highlight-keyword">In</span> prop.GetAllConnectedProperties()
        <span class="highlight-comment">' Note: Usually, the connected property is an Asset.</span>
        ReadAssetProperty(connectedProp)
    <span class="highlight-keyword">Next</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div><div id="IDABC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDABC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="f5a10581-6ac2-be19-0e32-f87d05bc8b83.htm">Autodesk.Revit.DB.Visual Namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter"><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:revitapifeedback%40autodesk.com?Subject=Revit%202025%20API">Autodesk</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>
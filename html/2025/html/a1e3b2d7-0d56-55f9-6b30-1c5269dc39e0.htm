<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>TextNote.GetFormattedText Method</title><meta name="Title" content="GetFormattedText Method" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.DB.TextNote.GetFormattedText" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="TextNote.GetFormattedText method" /><meta name="System.Keywords" content="GetFormattedText method" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.TextNote.GetFormattedText" /><meta name="Microsoft.Help.F1" content="TextNote.GetFormattedText" /><meta name="Microsoft.Help.F1" content="GetFormattedText" /><meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="a1e3b2d7-0d56-55f9-6b30-1c5269dc39e0" /><meta name="guid" content="a1e3b2d7-0d56-55f9-6b30-1c5269dc39e0" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="Returns an object that contains text and associated formatting of this note." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" /></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">Revit 2025 API</div><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Text<wbr />Note<span id="LSTDA2B4AA3_0" data-languageSpecificText="cpp=::|nu=."></span>Get<wbr />Formatted<wbr />Text Method</h1></td></tr></table><div class="summary">
   Returns an object that contains text and associated formatting of this note.
</div><br /><strong>Namespace:</strong> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">FormattedText</span> <span class="identifier">GetFormattedText</span>()</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">GetFormattedText</span> <span class="keyword">As</span> <span class="identifier">FormattedText</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="identifier">FormattedText</span>^ <span class="identifier">GetFormattedText</span>()</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">member</span> <span class="identifier">GetFormattedText</span> : <span class="keyword">unit</span> <span class="keyword">-&gt;</span> <span class="identifier">FormattedText</span> </pre></div></div></div><h4>Return Value</h4><a href="79a92343-2342-8325-1b51-f12c4fb05481.htm">FormattedText</a><br />
   The object that contains the text and associated formatting of of the text in this text note.
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection">
   The returned object is not attached to the text note and modifying it will not modify the contents of the text note.
   After changes are made to the FormattedText, use <a href="1bb2b0cc-04b1-9279-d21e-5b67d30dfe81.htm">SetFormattedText(FormattedText)</a>
   apply those changes to the TextNote.
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDEC')" onkeypress="SectionExpandCollapse_CheckKey('IDEC', event)" tabindex="0"><img id="IDECToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDECSection" class="collapsibleSection"><div id="IDAEC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAEC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAEC','cs','1','4');return false;">C#</a></div><div id="IDAEC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAEC','vb','2','4');return false;">VB</a></div><div id="IDAEC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAEC','cpp','3','4');return false;">C++</a></div><div id="IDAEC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAEC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAEC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAEC');return false;" title="Copy">Copy</a></div></div><div id="IDAEC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-preprocessor">#region</span> Autodesk.Revit.DB.FormattedText.SetListType(Autodesk.Revit.DB.TextRange, Autodesk.Revit.DB.ListType)
<span class="highlight-preprocessor">#region</span> Autodesk.Revit.DB.FormattedText.AsTextRange()
<span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> AppendText(TextNote textNote)
{
    FormattedText formatText = textNote.GetFormattedText();

    TextRange range = formatText.AsTextRange();

    range.Start = range.End - <span class="highlight-number">1</span>;
    <span class="highlight-comment">// set Length to 0 to insert</span>
    range.Length = <span class="highlight-number">0</span>;
    <span class="highlight-keyword">string</span> someNewText = <span class="highlight-literal">"\rThis is a new paragraph\vThis is a new line without a paragraph break\r"</span>;
    formatText.SetPlainText(range, someNewText);

    <span class="highlight-comment">// get range for entire text</span>
    range = formatText.AsTextRange();
    range.Start = range.End - <span class="highlight-number">1</span>;
    range.Length = <span class="highlight-number">0</span>;
    <span class="highlight-keyword">string</span> someListText = <span class="highlight-literal">"\rBulleted List item 1\rItem 2\vSecond line for Item 2\rThird bullet point"</span>;
    formatText.SetPlainText(range, someListText);
    range.Start++;
    range.Length = someListText.Length;
    formatText.SetListType(range, ListType.Bullet);

    <span class="highlight-keyword">if</span> (formatText.GetAllCapsStatus(range) != FormatStatus.None)
    {
        formatText.SetAllCapsStatus(range, <span class="highlight-keyword">false</span>);
    }

    textNote.SetFormattedText(formatText);
}
<span class="highlight-preprocessor">#endregion</span>
<span class="highlight-preprocessor">#endregion</span></pre></div><div id="IDAEC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-preprocessor">#Region</span> <span class="highlight-literal">"Autodesk.Revit.DB.FormattedText.SetListType(Autodesk.Revit.DB.TextRange, Autodesk.Revit.DB.ListType)"</span>
<span class="highlight-preprocessor">#Region</span> <span class="highlight-literal">"Autodesk.Revit.DB.FormattedText.AsTextRange()"</span>
        <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> AppendText(textNote <span class="highlight-keyword">As</span> TextNote)
            <span class="highlight-keyword">Dim</span> formatText <span class="highlight-keyword">As</span> FormattedText = textNote.GetFormattedText()

            <span class="highlight-keyword">Dim</span> range <span class="highlight-keyword">As</span> TextRange = formatText.AsTextRange()

            range.Start = range.[<span class="highlight-keyword">End</span>] - <span class="highlight-number">1</span>
            <span class="highlight-comment">' set Length to 0 to insert</span>
            range.Length = <span class="highlight-number">0</span>
            <span class="highlight-keyword">Dim</span> someNewText <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = vbCr &amp; <span class="highlight-literal">"This is a new paragraph"</span> &amp; vbVerticalTab &amp; <span class="highlight-literal">"This is a new line without a paragraph break"</span> &amp; vbCr
            formatText.SetPlainText(range, someNewText)

            <span class="highlight-comment">' get range for entire text</span>
            range = formatText.AsTextRange()
            range.Start = range.[<span class="highlight-keyword">End</span>] - <span class="highlight-number">1</span>
            range.Length = <span class="highlight-number">0</span>
            <span class="highlight-keyword">Dim</span> someListText <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = vbCr &amp; <span class="highlight-literal">"Bulleted List item 1"</span> &amp; vbCr &amp; <span class="highlight-literal">"Item 2"</span> &amp; vbVerticalTab &amp; <span class="highlight-literal">"Second line for Item 2"</span> &amp; vbCr &amp; <span class="highlight-literal">"Third bullet point"</span>
            formatText.SetPlainText(range, someListText)
            range.Start += <span class="highlight-number">1</span>
            range.Length = someListText.Length
            formatText.SetListType(range, ListType.Bullet)

            <span class="highlight-keyword">If</span> formatText.GetAllCapsStatus(range) &lt;&gt; FormatStatus.None <span class="highlight-keyword">Then</span>
                formatText.SetAllCapsStatus(range, <span class="highlight-keyword">False</span>)
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

            textNote.SetFormattedText(formatText)
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>
<span class="highlight-preprocessor">#End Region</span>
<span class="highlight-preprocessor">#End Region</span></pre></div><div id="IDAEC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDAEC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="ecc1ce1c-d754-96d0-35db-ca2d1d84c57c.htm">TextNote Class</a></div><div><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter"><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:revitapifeedback%40autodesk.com?Subject=Revit%202025%20API">Autodesk</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>
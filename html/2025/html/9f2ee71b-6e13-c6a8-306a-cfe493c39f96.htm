<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>Revision.CombineWithNext Method</title><meta name="Title" content="CombineWithNext Method" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.DB.Revision.CombineWithNext(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.ElementId)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="Revision.CombineWithNext method" /><meta name="System.Keywords" content="CombineWithNext method" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.Revision.CombineWithNext" /><meta name="Microsoft.Help.F1" content="Revision.CombineWithNext" /><meta name="Microsoft.Help.F1" content="CombineWithNext" /><meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="9f2ee71b-6e13-c6a8-306a-cfe493c39f96" /><meta name="guid" content="9f2ee71b-6e13-c6a8-306a-cfe493c39f96" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="Combines the specified Revision with the next Revision." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" /></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">Revit 2025 API</div><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Revision<span id="LST61D6CAA7_0" data-languageSpecificText="cpp=::|nu=."></span>Combine<wbr />With<wbr />Next Method</h1></td></tr></table><div class="summary">
   Combines the specified Revision with the next Revision.
</div><br /><strong>Namespace:</strong> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">ISet</span>&lt;<span class="identifier">ElementId</span>&gt; <span class="identifier">CombineWithNext</span>(
	<span class="identifier">Document</span> <span class="parameter">document</span>,
	<span class="identifier">ElementId</span> <span class="parameter">revisionId</span>
)</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">CombineWithNext</span> ( 
	<span class="parameter">document</span> <span class="keyword">As</span> <span class="identifier">Document</span>,
	<span class="parameter">revisionId</span> <span class="keyword">As</span> <span class="identifier">ElementId</span>
) <span class="keyword">As</span> <span class="identifier">ISet</span>(<span class="keyword">Of</span> <span class="identifier">ElementId</span>)</pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="identifier">ISet</span>&lt;<span class="identifier">ElementId</span>^&gt;^ <span class="identifier">CombineWithNext</span>(
	<span class="identifier">Document</span>^ <span class="parameter">document</span>, 
	<span class="identifier">ElementId</span>^ <span class="parameter">revisionId</span>
)</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">CombineWithNext</span> : 
        <span class="parameter">document</span> : <span class="identifier">Document</span> * 
        <span class="parameter">revisionId</span> : <span class="identifier">ElementId</span> <span class="keyword">-&gt;</span> <span class="identifier">ISet</span>&lt;<span class="identifier">ElementId</span>&gt; </pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">document</span>  <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a></dt><dd>
   The Document containing the Revisions.
</dd><dt class="has-text-weight-normal"><span class="parameter">revisionId</span>  <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a></dt><dd>
   The Revision that should have its clouds and tags associated with the next Revision.
</dd></dl><h4>Return Value</h4><a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1" target="_blank" rel="noopener noreferrer">ISet</a><span id="LST61D6CAA7_1" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a><span id="LST61D6CAA7_2" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><br />
   The ids of all RevisionClouds that were reassigned to the next Revision.
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDFC')" onkeypress="SectionExpandCollapse_CheckKey('IDFC', event)" tabindex="0"><img id="IDFCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="IDFCSection" class="collapsibleSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">ArgumentException</a></td><td>
   revisionId is not a valid Revision.
   -or-
   This operation cannot be performed because revisionId is an issued Revision.
   -or-
   revisionId cannot be combined with the next Revision because either revisionId is
   the last Revision or the next Revision has already been issued.
</td></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">ArgumentNullException</a></td><td>
   A non-optional argument was null
</td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection">
   All RevisionClouds and tags associated with the specified Revision will be reassigned
   to the next Revision in the model and the specified Revision will be deleted from
   the model.  The operation can only be performed if both the specified Revision and the
   next one are unissued.
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDIC')" onkeypress="SectionExpandCollapse_CheckKey('IDIC', event)" tabindex="0"><img id="IDICToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDICSection" class="collapsibleSection"><div id="IDAIC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAIC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAIC','cs','1','4');return false;">C#</a></div><div id="IDAIC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAIC','vb','2','4');return false;">VB</a></div><div id="IDAIC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAIC','cpp','3','4');return false;">C++</a></div><div id="IDAIC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDAIC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAIC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAIC');return false;" title="Copy">Copy</a></div></div><div id="IDAIC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">private</span> <span class="highlight-keyword">bool</span> CombineRevision(Document document, Revision revision)
{
    <span class="highlight-keyword">bool</span> combined = <span class="highlight-keyword">false</span>;
    <span class="highlight-comment">// Can only combine two revisions if neither have been issued</span>
    <span class="highlight-keyword">if</span> (revision.Issued == <span class="highlight-keyword">false</span>)
    {
        ElementId revisionId = revision.Id;
        Revision nextRevsion = GetNextRevision(document, revisionId);
        <span class="highlight-keyword">if</span> (nextRevsion != <span class="highlight-keyword">null</span> &amp;&amp; nextRevsion.Issued == <span class="highlight-keyword">false</span>)
        {
            ISet&lt;ElementId&gt; revisionCloudIds = Revision.CombineWithNext(document, revisionId);
            combined = <span class="highlight-keyword">true</span>;
            <span class="highlight-keyword">int</span> movedClouds = revisionCloudIds.Count;
            <span class="highlight-keyword">if</span> (movedClouds &gt; <span class="highlight-number">0</span>)
            {
                RevisionCloud cloud = document.GetElement(revisionCloudIds.ElementAt(<span class="highlight-number">0</span>)) <span class="highlight-keyword">as</span> RevisionCloud;
                <span class="highlight-keyword">if</span> (cloud != <span class="highlight-keyword">null</span>)
                {
                    <span class="highlight-keyword">string</span> msg = <span class="highlight-keyword">string</span>.Format(<span class="highlight-literal">"Revision {0} deleted and {1} revision clouds were added to Revsion {2}"</span>,
                        revisionId.ToString(), movedClouds, cloud.RevisionId.ToString());
                    TaskDialog.Show(<span class="highlight-literal">"Revision Combined"</span>, msg);
                }
            }
        }
    }

    <span class="highlight-keyword">return</span> combined;
}

<span class="highlight-keyword">private</span> Revision GetNextRevision(Document document, ElementId currentRevisionId)
{
    Revision nextRevision = <span class="highlight-keyword">null</span>;
    IList&lt;ElementId&gt; revisionIds = Revision.GetAllRevisionIds(document);
    <span class="highlight-keyword">int</span> currentRevisionIndex = <span class="highlight-number">-1</span>;
    <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> n = <span class="highlight-number">0</span>; n &lt; revisionIds.Count; n++)
    {
        <span class="highlight-keyword">if</span> (revisionIds[n] == currentRevisionId)
        {
            currentRevisionIndex = n;
            <span class="highlight-keyword">break</span>;
        }
    }

    <span class="highlight-comment">// if the current revision id was found and is not the last index</span>
    <span class="highlight-keyword">if</span> (currentRevisionIndex &gt;= <span class="highlight-number">0</span> &amp;&amp; currentRevisionIndex &lt; revisionIds.Count - <span class="highlight-number">1</span>)
    {
        ElementId nextRevisionId = revisionIds[currentRevisionIndex + <span class="highlight-number">1</span>];
        nextRevision = document.GetElement(nextRevisionId) <span class="highlight-keyword">as</span> Revision;
    }

    <span class="highlight-keyword">return</span> nextRevision;
}</pre></div><div id="IDAIC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Function</span> CombineRevision(document <span class="highlight-keyword">As</span> Document, revision__1 <span class="highlight-keyword">As</span> Revision) <span class="highlight-keyword">As</span> <span class="highlight-keyword">Boolean</span>
    <span class="highlight-keyword">Dim</span> combined <span class="highlight-keyword">As</span> <span class="highlight-keyword">Boolean</span> = <span class="highlight-keyword">False</span>
    <span class="highlight-comment">' Can only combine two revisions if neither have been issued</span>
    <span class="highlight-keyword">If</span> revision__1.Issued = <span class="highlight-keyword">False</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Dim</span> revisionId <span class="highlight-keyword">As</span> ElementId = revision__1.Id
        <span class="highlight-keyword">Dim</span> nextRevsion <span class="highlight-keyword">As</span> Revision = GetNextRevision(document, revisionId)
        <span class="highlight-keyword">If</span> nextRevsion <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">AndAlso</span> nextRevsion.Issued = <span class="highlight-keyword">False</span> <span class="highlight-keyword">Then</span>
            <span class="highlight-keyword">Dim</span> revisionCloudIds <span class="highlight-keyword">As</span> ISet(<span class="highlight-keyword">Of</span> ElementId) = Revision.CombineWithNext(document, revisionId)
            combined = <span class="highlight-keyword">True</span>
            <span class="highlight-keyword">Dim</span> movedClouds <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = revisionCloudIds.Count
            <span class="highlight-keyword">If</span> movedClouds &gt; <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
                <span class="highlight-keyword">Dim</span> cloud <span class="highlight-keyword">As</span> RevisionCloud = <span class="highlight-keyword">TryCast</span>(document.GetElement(revisionCloudIds.ElementAt(<span class="highlight-number">0</span>)), RevisionCloud)
                <span class="highlight-keyword">If</span> cloud <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
                    <span class="highlight-keyword">Dim</span> msg <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-keyword">String</span>.Format(<span class="highlight-literal">"Revision {0} deleted and {1} revision clouds were added to Revsion {2}"</span>, revisionId.ToString(), movedClouds, cloud.RevisionId.ToString())
                    TaskDialog.Show(<span class="highlight-literal">"Revision Combined"</span>, msg)
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Return</span> combined
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>

<span class="highlight-keyword">Private</span> <span class="highlight-keyword">Function</span> GetNextRevision(document <span class="highlight-keyword">As</span> Document, currentRevisionId <span class="highlight-keyword">As</span> ElementId) <span class="highlight-keyword">As</span> Revision
    <span class="highlight-keyword">Dim</span> nextRevision <span class="highlight-keyword">As</span> Revision = <span class="highlight-keyword">Nothing</span>
    <span class="highlight-keyword">Dim</span> revisionIds <span class="highlight-keyword">As</span> IList(<span class="highlight-keyword">Of</span> ElementId) = Revision.GetAllRevisionIds(document)
    <span class="highlight-keyword">Dim</span> currentRevisionIndex <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">-1</span>
    <span class="highlight-keyword">For</span> n <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> revisionIds.Count - <span class="highlight-number">1</span>
        <span class="highlight-keyword">If</span> revisionIds(n) = currentRevisionId <span class="highlight-keyword">Then</span>
            currentRevisionIndex = n
            <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">For</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Next</span>

    <span class="highlight-comment">' if the current revision id was found and is not the last index</span>
    <span class="highlight-keyword">If</span> currentRevisionIndex &gt;= <span class="highlight-number">0</span> <span class="highlight-keyword">AndAlso</span> currentRevisionIndex &lt; revisionIds.Count - <span class="highlight-number">1</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Dim</span> nextRevisionId <span class="highlight-keyword">As</span> ElementId = revisionIds(currentRevisionIndex + <span class="highlight-number">1</span>)
        nextRevision = <span class="highlight-keyword">TryCast</span>(document.GetElement(nextRevisionId), Revision)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Return</span> nextRevision
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></pre></div><div id="IDAIC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDAIC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="af882c60-68ae-2e53-5c41-7aa43cfc1df4.htm">Revision Class</a></div><div><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter"><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:revitapifeedback%40autodesk.com?Subject=Revit%202025%20API">Autodesk</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>
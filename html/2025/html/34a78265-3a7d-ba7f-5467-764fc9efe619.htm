<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>IFailuresProcessor Interface</title><meta name="Title" content="IFailuresProcessor Interface" /><meta name="Microsoft.Help.Id" content="T:Autodesk.Revit.DB.IFailuresProcessor" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="Autodesk.Revit.DB.IFailuresProcessor interface" /><meta name="System.Keywords" content="IFailuresProcessor interface" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.IFailuresProcessor" /><meta name="Microsoft.Help.F1" content="IFailuresProcessor" /><meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="34a78265-3a7d-ba7f-5467-764fc9efe619" /><meta name="guid" content="34a78265-3a7d-ba7f-5467-764fc9efe619" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="To create your own UI or fully automated tool to process Revit Failures, derive a class from this interface." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" /></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">Revit 2025 API</div><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>IFailures<wbr />Processor Interface</h1></td></tr></table><div class="summary">
   To create your own UI or fully automated tool to process Revit Failures, derive a class from this interface.
</div><br /><strong>Namespace:</strong> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="identifier">IFailuresProcessor</span></pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Interface</span> <span class="identifier">IFailuresProcessor</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface class</span> <span class="identifier">IFailuresProcessor</span></pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">type</span> <span class="identifier">IFailuresProcessor</span> = <span class="keyword">interface</span> <span class="keyword">end</span></pre></div></div></div></div><p>The <span class="selflink">IFailuresProcessor</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDADA')" onkeypress="SectionExpandCollapse_CheckKey('IDADA', event)" tabindex="0"><img id="IDADAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="IDADASection" class="collapsibleSection"><table id="MethodList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="349ad9c7-2b61-0324-d8d0-6c1647cbe7a0.htm">Dismiss</a></td><td>
   This method is being called in case of exception or document destruction to dismiss any possible pending failure UI that may
   have left on the screen
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="99bd820d-03a3-e434-f780-656a37e62f57.htm">ProcessFailures</a></td><td>
   Method that Revit will invoke to process failures at the end of transaction.
</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection">
   To override Revit default Failures Processing UI, instantiate your own processor derived from this interface
   and register it in Revit application.
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDCC')" onkeypress="SectionExpandCollapse_CheckKey('IDCC', event)" tabindex="0"><img id="IDCCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDCCSection" class="collapsibleSection"><div id="IDACC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDACC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDACC','cs','1','4');return false;">C#</a></div><div id="IDACC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDACC','vb','2','4');return false;">VB</a></div><div id="IDACC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDACC','cpp','3','4');return false;">C++</a></div><div id="IDACC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDACC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDACC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDACC');return false;" title="Copy">Copy</a></div></div><div id="IDACC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[Autodesk.Revit.Attributes.Transaction(Autodesk.Revit.Attributes.TransactionMode.Manual)]

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> MyFailuresUI : IExternalApplication
{
    <span class="highlight-keyword">static</span> AddInId m_appId = <span class="highlight-keyword">new</span> AddInId(<span class="highlight-keyword">new</span> Guid(<span class="highlight-literal">"9F179363-B349-4541-823F-A2DDB2B86AF3"</span>));
    <span class="highlight-keyword">public</span> Result OnStartup(UIControlledApplication application)
    {
        IFailuresProcessor myFailUI = <span class="highlight-keyword">new</span> FailUI();
        Autodesk.Revit.ApplicationServices.Application.RegisterFailuresProcessor(myFailUI);
        <span class="highlight-keyword">return</span> Result.Succeeded;
    }

    <span class="highlight-keyword">public</span> Result OnShutdown(UIControlledApplication application)
    {
        <span class="highlight-keyword">return</span> Result.Succeeded;
    }

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> FailUI : IFailuresProcessor
    {
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> Dismiss(Document document)
        {
            <span class="highlight-comment">// This method is being called in case of exception or document destruction to </span>
            <span class="highlight-comment">// dismiss any possible pending failure UI that may have left on the screen</span>
        }

        <span class="highlight-keyword">public</span> FailureProcessingResult ProcessFailures(FailuresAccessor failuresAccessor)
        {
            IList&lt;FailureResolutionType&gt; resolutionTypeList = <span class="highlight-keyword">new</span> List&lt;FailureResolutionType&gt;();
            IList&lt;FailureMessageAccessor&gt; failList = <span class="highlight-keyword">new</span> List&lt;FailureMessageAccessor&gt;();
            <span class="highlight-comment">// Inside event handler, get all warnings</span>
            failList = failuresAccessor.GetFailureMessages(); 
            <span class="highlight-keyword">string</span> errorString = <span class="highlight-literal">""</span>;
            <span class="highlight-keyword">bool</span> hasFailures = <span class="highlight-keyword">false</span>;
            <span class="highlight-keyword">foreach</span> (FailureMessageAccessor failure <span class="highlight-keyword">in</span> failList)
            {
                <span class="highlight-comment">// check how many resolutions types were attempted to try to prevent</span>
                <span class="highlight-comment">// entering infinite loop</span>
                resolutionTypeList = failuresAccessor.GetAttemptedResolutionTypes(failure);
                <span class="highlight-keyword">if</span> (resolutionTypeList.Count &gt;= <span class="highlight-number">3</span>)
                {
                    TaskDialog.Show(<span class="highlight-literal">"Error"</span>, <span class="highlight-literal">"Cannot resolve failures - transaction will be rolled back."</span>);
                    <span class="highlight-keyword">return</span> FailureProcessingResult.ProceedWithRollBack;
                }

                errorString += <span class="highlight-literal">"IDs "</span>;
                <span class="highlight-keyword">foreach</span> (ElementId id <span class="highlight-keyword">in</span> failure.GetFailingElementIds())
                {
                    errorString += id.ToString() + <span class="highlight-literal">", "</span>;
                    hasFailures = <span class="highlight-keyword">true</span>;
                }
                errorString += <span class="highlight-literal">"\nWill be deleted because: "</span> + failure.GetDescriptionText() + <span class="highlight-literal">"\n"</span>;
                failuresAccessor.DeleteElements(failure.GetFailingElementIds() <span class="highlight-keyword">as</span> IList&lt;ElementId&gt;);
            }
            <span class="highlight-keyword">if</span> (hasFailures)
            {
                TaskDialog.Show(<span class="highlight-literal">"Error"</span>, errorString);
                <span class="highlight-keyword">return</span> FailureProcessingResult.ProceedWithCommit;
            }

            <span class="highlight-keyword">return</span> FailureProcessingResult.Continue;
        }
    }
}</pre></div><div id="IDACC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">&lt;Autodesk.Revit.Attributes.Transaction(Autodesk.Revit.Attributes.TransactionMode.Manual)&gt; _
<span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> MyFailuresUI
    <span class="highlight-keyword">Implements</span> IExternalApplication
    <span class="highlight-keyword">Shared</span> m_appId <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> AddInId(<span class="highlight-keyword">New</span> Guid(<span class="highlight-literal">"9F179363-B349-4541-823F-A2DDB2B86AF3"</span>))
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> OnStartup(application <span class="highlight-keyword">As</span> UIControlledApplication) <span class="highlight-keyword">As</span> Autodesk.Revit.UI.Result <span class="highlight-keyword">Implements</span> IExternalApplication.OnStartup
        <span class="highlight-keyword">Dim</span> myFailUI <span class="highlight-keyword">As</span> IFailuresProcessor = <span class="highlight-keyword">New</span> FailUI()
        <span class="highlight-comment">'Autodesk.Revit.ApplicationServices.Application.RegisterFailuresProcessor(myFailUI);</span>
        <span class="highlight-keyword">Return</span> Result.Succeeded
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>

    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> OnShutdown(application <span class="highlight-keyword">As</span> UIControlledApplication) <span class="highlight-keyword">As</span> Autodesk.Revit.UI.Result <span class="highlight-keyword">Implements</span> IExternalApplication.OnShutdown
        <span class="highlight-keyword">Return</span> Result.Succeeded
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>

    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> FailUI
        <span class="highlight-keyword">Implements</span> IFailuresProcessor
        <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> Dismiss(document <span class="highlight-keyword">As</span> Document) <span class="highlight-keyword">Implements</span> IFailuresProcessor.Dismiss
            <span class="highlight-comment">' This method is being called in case of exception or document destruction to </span>
            <span class="highlight-comment">' dismiss any possible pending failure UI that may have left on the screen</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>

        <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> ProcessFailures(failuresAccessor <span class="highlight-keyword">As</span> FailuresAccessor) <span class="highlight-keyword">As</span> FailureProcessingResult <span class="highlight-keyword">Implements</span> IFailuresProcessor.ProcessFailures
            <span class="highlight-keyword">Dim</span> resolutionTypeList <span class="highlight-keyword">As</span> IList(<span class="highlight-keyword">Of</span> FailureResolutionType) = <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> FailureResolutionType)()
            <span class="highlight-keyword">Dim</span> failList <span class="highlight-keyword">As</span> IList(<span class="highlight-keyword">Of</span> FailureMessageAccessor) = <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> FailureMessageAccessor)()
            <span class="highlight-comment">' Inside event handler, get all warnings</span>
            failList = failuresAccessor.GetFailureMessages()
            <span class="highlight-keyword">Dim</span> errorString <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">""</span>
            <span class="highlight-keyword">Dim</span> hasFailures <span class="highlight-keyword">As</span> <span class="highlight-keyword">Boolean</span> = <span class="highlight-keyword">False</span>
            <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> failure <span class="highlight-keyword">As</span> FailureMessageAccessor <span class="highlight-keyword">In</span> failList
                <span class="highlight-comment">' check how many resolutions types were attempted to try to prevent</span>
                <span class="highlight-comment">' entering infinite loop</span>
                resolutionTypeList = failuresAccessor.GetAttemptedResolutionTypes(failure)
                <span class="highlight-keyword">If</span> resolutionTypeList.Count &gt;= <span class="highlight-number">3</span> <span class="highlight-keyword">Then</span>
                    TaskDialog.Show(<span class="highlight-literal">"Error"</span>, <span class="highlight-literal">"Cannot resolve failures - transaction will be rolled back."</span>)
                    <span class="highlight-keyword">Return</span> FailureProcessingResult.ProceedWithRollBack
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

                errorString += <span class="highlight-literal">"IDs "</span>
                <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> id <span class="highlight-keyword">As</span> ElementId <span class="highlight-keyword">In</span> failure.GetFailingElementIds()
                    errorString += id.ToString() + <span class="highlight-literal">", "</span>
                    hasFailures = <span class="highlight-keyword">True</span>
                <span class="highlight-keyword">Next</span>
                errorString += vbLf &amp; <span class="highlight-literal">"Will be deleted because: "</span> + failure.GetDescriptionText() + vbLf
                failuresAccessor.DeleteElements(<span class="highlight-keyword">TryCast</span>(failure.GetFailingElementIds(), IList(<span class="highlight-keyword">Of</span> ElementId)))
            <span class="highlight-keyword">Next</span>
            <span class="highlight-keyword">If</span> hasFailures <span class="highlight-keyword">Then</span>
                TaskDialog.Show(<span class="highlight-literal">"Error"</span>, errorString)
                <span class="highlight-keyword">Return</span> FailureProcessingResult.ProceedWithCommit
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

            <span class="highlight-keyword">Return</span> FailureProcessingResult.[<span class="highlight-keyword">Continue</span>]
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></pre></div><div id="IDACC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDACC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter"><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:revitapifeedback%40autodesk.com?Subject=Revit%202025%20API">Autodesk</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>
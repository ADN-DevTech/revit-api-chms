<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>TessellatedShapeBuilder Class</title><meta name="Title" content="TessellatedShapeBuilder Class" /><meta name="Microsoft.Help.Id" content="T:Autodesk.Revit.DB.TessellatedShapeBuilder" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="Autodesk.Revit.DB.TessellatedShapeBuilder class" /><meta name="System.Keywords" content="TessellatedShapeBuilder class" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.TessellatedShapeBuilder" /><meta name="Microsoft.Help.F1" content="TessellatedShapeBuilder" /><meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="a144b0e3-c997-eac1-5c00-51c56d9e66f2" /><meta name="guid" content="a144b0e3-c997-eac1-5c00-51c56d9e66f2" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="VB" /><meta name="Description" content="A class that permits structured building of geometry or a mesh from a collection of connected faces. Contains all closed face sets and custom precisions." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" /></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">Revit 2025 API</div><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Tessellated<wbr />Shape<wbr />Builder Class</h1></td></tr></table><div class="summary">
   A class that permits structured building of geometry or
   a mesh from a collection of connected faces.
   Contains all closed face sets and custom precisions.
</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDA')" onkeypress="SectionExpandCollapse_CheckKey('IDDA', event)" tabindex="0"><img id="IDDAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="IDDASection" class="collapsibleSection"><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">System<span id="LSTDD7548E_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Object</a><br />  <a href="66c1678c-2e01-e0de-1386-5a0e1eb3ccff.htm">Autodesk.Revit.DB<span id="LSTDD7548E_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>ShapeBuilder</a><br />    <span class="selflink">Autodesk.Revit.DB<span id="LSTDD7548E_2" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>TessellatedShapeBuilder</span><br /></div><br /><strong>Namespace:</strong> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><strong>Assembly:</strong> RevitAPI (in RevitAPI.dll) Version: 25.0.0.0 (25.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">TessellatedShapeBuilder</span> : <span class="identifier">ShapeBuilder</span></pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">TessellatedShapeBuilder</span>
	<span class="keyword">Inherits</span> <span class="identifier">ShapeBuilder</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">TessellatedShapeBuilder</span> : <span class="keyword">public</span> <span class="identifier">ShapeBuilder</span></pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">type</span> <span class="identifier">TessellatedShapeBuilder</span> = 
    <span class="keyword">class</span>
        <span class="keyword">inherit</span> <span class="identifier">ShapeBuilder</span>
    <span class="keyword">end</span></pre></div></div></div></div><p>The <span class="selflink">TessellatedShapeBuilder</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBEA')" onkeypress="SectionExpandCollapse_CheckKey('IDBEA', event)" tabindex="0"><img id="IDBEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="IDBEASection" class="collapsibleSection"><table id="ConstructorList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="2018769c-6575-1926-7978-539291b3ff8b.htm">TessellatedShapeBuilder</a></td><td>
   Constructs a new instance of a TessellatedShapeBuilder.
</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDQEA')" onkeypress="SectionExpandCollapse_CheckKey('IDQEA', event)" tabindex="0"><img id="IDQEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="IDQEASection" class="collapsibleSection"><table id="PropertyList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="59acf1d0-742a-45eb-df1c-edbb136279a4.htm">Fallback</a></td><td>
   Defines acceptable fallback if the desired type of geometry can't be built.
</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="b52fe304-95a0-77c8-4b4c-e3c18c16677d.htm">GraphicsStyleId</a></td><td>
   Optional - if set, the built geometry will use that graphics style.
</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="0da2193e-aebc-5eb4-353e-ea72a12868bc.htm">IsFaceSetOpen</a></td><td>
   Flag whether the current set of connected faces is open and
   additional tessellation faces can be added to it.
</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="6a5c7474-6ea6-4886-d356-204405406596.htm">IsValidObject</a></td><td>
   Specifies whether the .NET object represents a valid Revit entity.
<br />(Inherited from <a href="66c1678c-2e01-e0de-1386-5a0e1eb3ccff.htm">ShapeBuilder</a>)</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="c6a84d2a-824d-07e9-4559-79bb80d25e8e.htm">LogInteger</a></td><td>
   Integer value used for logging, if it is performed. Usually
   the number of the face set(s) in the IFC file, from which they
   are imported. Any value is acceptable.
</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="dbfa746b-807f-d58a-cd1c-67ff07f4b968.htm">LogString</a></td><td>
   String used for logging, if any. Usually the name of the file from which
   face sets were imported.
</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="aacc351c-0e65-7d1d-c177-627de5e9974a.htm">NumberOfCompletedFaceSets</a></td><td>
   Number of completed face sets.
</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="5c2c3e95-ae6e-f303-a770-662acf186181.htm">OwnerInfo</a></td><td>
   String used for logging, if any. Usually describes the element or object, which
   either defined or will own the geoemtrical objects to be built.
</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="2e6f38a0-cabd-5fac-34dc-40af993135c7.htm">Target</a></td><td>
   Requests the type of geometry to be built.
</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDAEA')" onkeypress="SectionExpandCollapse_CheckKey('IDAEA', event)" tabindex="0"><img id="IDAEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="IDAEASection" class="collapsibleSection"><table id="MethodList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="401c4066-4ec1-be8c-53ae-daea44f3244d.htm">AddFace</a></td><td>
   Adds a face to the currently open connected face set.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="fc565805-bda1-2cd3-6bf0-e0defa4edfc9.htm">AreTargetAndFallbackCompatible</a></td><td>
   Checks whether this combination of fallback and target parameters
   can be used as a valid combination of inputs.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="3b67078d-f8fd-83f4-ee2e-b83e8ec23a23.htm">Build</a></td><td>
   Builds the designated geometrical objects from the stored face sets. Stores the result in this TessellatedShapeBuilder object.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="11a71aab-1685-27ad-10c4-328e4a02b4fb.htm">CancelConnectedFaceSet</a></td><td>
   Cancels the current face set - i.e., all data from it will be lost
   and the builder will have no open connected face set anymore.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="8c2cd942-f8c3-3288-bac6-8d4d1f064714.htm">Clear</a></td><td>
   Erases all face set and clears the logs, if any.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="0bebb71c-317e-3dbc-1304-169561e22214.htm">CloseConnectedFaceSet</a></td><td>
   Closes the currently open connected face set.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="16bfff9e-b581-94b8-4797-cb880d79e793.htm">CreateMeshByExtrusion</a></td><td>
   Builds a mesh by extruding curve loop(s) along extrusion distance.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="efbfadf8-519d-7f66-8553-e887ed3058f1.htm">Dispose</a></td><td><br />(Inherited from <a href="66c1678c-2e01-e0de-1386-5a0e1eb3ccff.htm">ShapeBuilder</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="894594d4-e75a-843e-ed5f-c9554feec2f4.htm">DoesFaceHaveEnoughLoopsAndVertices</a></td><td>
   Checks whether 'face' has enough loops and vertcies to be valid.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noopener noreferrer">Equals</a></td><td>Determines whether the specified object is equal to the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="136e8763-4156-4ffe-0fcc-45af9dbb6c14.htm">GetBuildResult</a></td><td>
   Get the built geometry, build status and other data stored in TessellatedShapeBuilderResult. Clears the stored data.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode#system-object-gethashcode" target="_blank" rel="noopener noreferrer">GetHashCode</a></td><td>Serves as the default hash function.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gettype#system-object-gettype" target="_blank" rel="noopener noreferrer">GetType</a></td><td>Gets the <a href="https://learn.microsoft.com/dotnet/api/system.type" target="_blank" rel="noopener noreferrer">Type</a> of the current instance.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="186da29a-caa2-99ea-1b2a-722c1656c44a.htm">OpenConnectedFaceSet</a></td><td>
   Opens a new connected face set.
</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.tostring#system-object-tostring" target="_blank" rel="noopener noreferrer">ToString</a></td><td>Returns a string that represents the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection">
   Creates a geometry populated with faces defined by TessellatedFace objects
   stored in the input connected face sets.
   The faces defined by each connected face set may form an open shell or
   the boundary of a solid 3D region.
   All faces are planar and have polyline boundaries, defined
   as sequences of 3d coordinates.
   Faces are added to the builder as a part of connected face sets,
   representing faces which share edges.
   Order of faces in the sets is irrelevant. Faces can only
   be added to the builder when a face set has been opened and is available
   to take in faces (use <a href="186da29a-caa2-99ea-1b2a-722c1656c44a.htm">OpenConnectedFaceSet(Boolean)</a> to open a new face set).
   Before attempting to build Revit geometry from the builder
   the current face set should be closed
   (<a href="0bebb71c-317e-3dbc-1304-169561e22214.htm">CloseConnectedFaceSet<span id="LSTDD7548E_3" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>).
   The builder allows for the possibility of multiple face sets.
   The builder will try to create a geometry valid in Revit despite
   inconsistencies or omissions in the input data.
   <ul><li> For each connected face set, it will check the face orientations and
   change them wherever needed so that the orientations of the faces
   in that set are consistent. </li><li> If a connected face set is closed, it will check if the face normals
   point outward. If not, it will reverse the orientations of all faces.
   That means, each closed connected face set will represent a solid. </li></ul>
   Limitations in the current implementation:
   <ul><li> It does not support the definition of a "void", even if the user had
   set the orientations of the faces to define a "void". </li><li> If there is more than one connected face set, it does not check if they
   intersect or overlap each other. </li></ul></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDC')" onkeypress="SectionExpandCollapse_CheckKey('IDDC', event)" tabindex="0"><img id="IDDCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDDCSection" class="collapsibleSection"><div id="IDADC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDADC_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDADC','cs','1','4');return false;">C#</a></div><div id="IDADC_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDADC','vb','2','4');return false;">VB</a></div><div id="IDADC_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDADC','cpp','3','4');return false;">C++</a></div><div id="IDADC_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="ChangeTab('IDADC','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDADC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDADC');return false;" title="Copy">Copy</a></div></div><div id="IDADC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Create a pyramid-shaped DirectShape using given material for the faces</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> CreateTessellatedShape(Document doc, ElementId materialId)
{
    List&lt;XYZ&gt; loopVertices = <span class="highlight-keyword">new</span> List&lt;XYZ&gt;(<span class="highlight-number">4</span>);

    TessellatedShapeBuilder builder = <span class="highlight-keyword">new</span> TessellatedShapeBuilder();

    builder.OpenConnectedFaceSet(<span class="highlight-keyword">true</span>);
    <span class="highlight-comment">// create a pyramid with a square base 4' x 4' and 5' high</span>
    <span class="highlight-keyword">double</span> length = <span class="highlight-number">4.0</span>;
    <span class="highlight-keyword">double</span> height = <span class="highlight-number">5.0</span>;

    XYZ basePt1 = XYZ.Zero;
    XYZ basePt2 = <span class="highlight-keyword">new</span> XYZ(length, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>);
    XYZ basePt3 = <span class="highlight-keyword">new</span> XYZ(length, length, <span class="highlight-number">0</span>);
    XYZ basePt4 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, length, <span class="highlight-number">0</span>);
    XYZ apex = <span class="highlight-keyword">new</span> XYZ(length / <span class="highlight-number">2</span>, length / <span class="highlight-number">2</span>, height);

    loopVertices.Add(basePt1);
    loopVertices.Add(basePt2);
    loopVertices.Add(basePt3);
    loopVertices.Add(basePt4);
    builder.AddFace(<span class="highlight-keyword">new</span> TessellatedFace(loopVertices, materialId));

    loopVertices.Clear();
    loopVertices.Add(basePt1);
    loopVertices.Add(apex);
    loopVertices.Add(basePt2);
    builder.AddFace(<span class="highlight-keyword">new</span> TessellatedFace(loopVertices, materialId));

    loopVertices.Clear();
    loopVertices.Add(basePt2);
    loopVertices.Add(apex);
    loopVertices.Add(basePt3);
    builder.AddFace(<span class="highlight-keyword">new</span> TessellatedFace(loopVertices, materialId));

    loopVertices.Clear();
    loopVertices.Add(basePt3);
    loopVertices.Add(apex);
    loopVertices.Add(basePt4);
    builder.AddFace(<span class="highlight-keyword">new</span> TessellatedFace(loopVertices, materialId));

    loopVertices.Clear();
    loopVertices.Add(basePt4);
    loopVertices.Add(apex);
    loopVertices.Add(basePt1);
    builder.AddFace(<span class="highlight-keyword">new</span> TessellatedFace(loopVertices, materialId));

    builder.CloseConnectedFaceSet();
    builder.Target = TessellatedShapeBuilderTarget.Solid;
    builder.Fallback = TessellatedShapeBuilderFallback.Abort;
    builder.Build();

    TessellatedShapeBuilderResult result = builder.GetBuildResult();

    <span class="highlight-keyword">using</span> (Transaction t = <span class="highlight-keyword">new</span> Transaction(doc, <span class="highlight-literal">"Create tessellated direct shape"</span>))
    {
        t.Start();

        DirectShape ds = DirectShape.CreateElement(doc, <span class="highlight-keyword">new</span> ElementId(BuiltInCategory.OST_GenericModel));
       ds.ApplicationId = <span class="highlight-literal">"Application id"</span>;
       ds.ApplicationDataId = <span class="highlight-literal">"Geometry object id"</span>;

        ds.SetShape(result.GetGeometricalObjects());
        t.Commit();
    }
}</pre></div><div id="IDADC_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-comment">' Create a pyramid-shaped DirectShape using given material for the faces</span>
<span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> CreateTessellatedShape(doc <span class="highlight-keyword">As</span> Document, materialId <span class="highlight-keyword">As</span> ElementId)
    <span class="highlight-keyword">Dim</span> loopVertices <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> XYZ)(<span class="highlight-number">4</span>)

    <span class="highlight-keyword">Dim</span> builder <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> TessellatedShapeBuilder()

    builder.OpenConnectedFaceSet(<span class="highlight-keyword">True</span>)
    <span class="highlight-comment">' create a pyramid with a square base 4' x 4' and 5' high</span>
    <span class="highlight-keyword">Dim</span> length <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = <span class="highlight-number">4.0</span>
    <span class="highlight-keyword">Dim</span> height <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = <span class="highlight-number">5.0</span>

    <span class="highlight-keyword">Dim</span> basePt1 <span class="highlight-keyword">As</span> XYZ = XYZ.Zero
    <span class="highlight-keyword">Dim</span> basePt2 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(length, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>)
    <span class="highlight-keyword">Dim</span> basePt3 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(length, length, <span class="highlight-number">0</span>)
    <span class="highlight-keyword">Dim</span> basePt4 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, length, <span class="highlight-number">0</span>)
    <span class="highlight-keyword">Dim</span> apex <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(length / <span class="highlight-number">2</span>, length / <span class="highlight-number">2</span>, height)

    loopVertices.Add(basePt1)
    loopVertices.Add(basePt2)
    loopVertices.Add(basePt3)
    loopVertices.Add(basePt4)
    builder.AddFace(<span class="highlight-keyword">New</span> TessellatedFace(loopVertices, materialId))

    loopVertices.Clear()
    loopVertices.Add(basePt1)
    loopVertices.Add(apex)
    loopVertices.Add(basePt2)
    builder.AddFace(<span class="highlight-keyword">New</span> TessellatedFace(loopVertices, materialId))

    loopVertices.Clear()
    loopVertices.Add(basePt2)
    loopVertices.Add(apex)
    loopVertices.Add(basePt3)
    builder.AddFace(<span class="highlight-keyword">New</span> TessellatedFace(loopVertices, materialId))

    loopVertices.Clear()
    loopVertices.Add(basePt3)
    loopVertices.Add(apex)
    loopVertices.Add(basePt4)
    builder.AddFace(<span class="highlight-keyword">New</span> TessellatedFace(loopVertices, materialId))

    loopVertices.Clear()
    loopVertices.Add(basePt4)
    loopVertices.Add(apex)
    loopVertices.Add(basePt1)
    builder.AddFace(<span class="highlight-keyword">New</span> TessellatedFace(loopVertices, materialId))

    builder.CloseConnectedFaceSet()
    builder.Target = TessellatedShapeBuilderTarget.Solid
    builder.Fallback = TessellatedShapeBuilderFallback.Abort
    builder.Build()

    <span class="highlight-keyword">Dim</span> result <span class="highlight-keyword">As</span> TessellatedShapeBuilderResult = builder.GetBuildResult()

    <span class="highlight-keyword">Using</span> t <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Transaction(doc, <span class="highlight-literal">"Create tessellated direct shape"</span>)
        t.Start()

        <span class="highlight-keyword">Dim</span> ds <span class="highlight-keyword">As</span> DirectShape = DirectShape.CreateElement(doc, <span class="highlight-keyword">New</span> ElementId(BuiltInCategory.OST_GenericModel))
        ds.ApplicationId = <span class="highlight-literal">"Application id"</span>
        ds.ApplicationDataId = <span class="highlight-literal">"Geometry object id"</span>

        ds.SetShape(result.GetGeometricalObjects())
        t.Commit()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div><div id="IDADC_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="IDADC_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter"><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:revitapifeedback%40autodesk.com?Subject=Revit%202025%20API">Autodesk</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>
<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>Idling Event</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Idling event" /><meta name="System.Keywords" content="UIApplication.Idling event" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.UI.UIApplication.Idling" /><meta name="Microsoft.Help.Id" content="E:Autodesk.Revit.UI.UIApplication.Idling" /><meta name="Description" content="Subscribe to the Idling event to be notified when Revit is not in an active tool or transaction." /><meta name="Microsoft.Help.ContentType" content="Reference" /><link rel="stylesheet" type="text/css" href="../styles/Presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/Dropdown.js"> </script><script type="text/javascript" src="../scripts/script_manifold.js"> </script><script type="text/javascript" src="../scripts/script_feedBack.js"> </script><script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script><script type="text/javascript" src="../scripts/CommonUtilities.js"> </script><meta name="container" content="Autodesk.Revit.UI" /><meta name="file" content="56145d84-e948-730a-dc72-2a7b88a50a99" /><meta name="guid" content="56145d84-e948-730a-dc72-2a7b88a50a99" /><xml><MSHelp:Attr Name="AssetID" Value="E:Autodesk.Revit.UI.UIApplication.Idling" /><MSHelp:TOCTitle Title="Idling Event" /><MSHelp:RLTitle Title="UIApplication.Idling Event (Autodesk.Revit.UI)" /><MSHelp:Keyword Index="A" Term="E:Autodesk.Revit.UI.UIApplication.Idling" /><MSHelp:Keyword Index="A" Term="frlrfAutodeskRevitUIUIApplicationClassIdlingTopic" /><MSHelp:Keyword Index="K" Term="Idling event" /><MSHelp:Keyword Index="K" Term="UIApplication.Idling event" /><MSHelp:Keyword Index="F" Term="Autodesk.Revit.UI.UIApplication.Idling" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="RevitAPIUI.dll" /><MSHelp:Attr Name="APIName" Value="Autodesk.Revit.UI.UIApplication.Idling" /><MSHelp:Attr Name="APIName" Value="Autodesk.Revit.UI.UIApplication.add_Idling" /><MSHelp:Attr Name="APIName" Value="Autodesk.Revit.UI.UIApplication.remove_Idling" /><MSHelp:Attr Name="DevLang" Value="CSharp" /><MSHelp:Attr Name="DevLang" Value="VB" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="Abstract" Value="Subscribe to the Idling event to be notified when Revit is not in an active tool or transaction." /><MSHelp:Attr Name="AssemblyVersion" Value="24.0.0.0" /></xml><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script></head><body><input type="hidden" id="userDataCache" class="userDataStyle" /><input type="hidden" id="hiddenScrollOffset" /><img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" /><img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" /><img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" /><img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" /><img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" /><img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" /><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" /><div id="header"><table id="topTable" cellspacing="0" cellpadding="0"><tr><td><span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0"><img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span><span>    </span><span id="devlangsDropdown" class="filter" tabindex="0"><img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: All </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Multiple </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: C# </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual Basic </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual C++ </nobr></label></span></td></tr></table><div id="devlangsMenu"><input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="CSharpCheckbox">C#</label><br /><input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label><br /><input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label><br /></div><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2024 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">UIApplication<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Idling Event</span></td></tr><tr id="headerTableRow3"><td align="left"><a href="51ca80e2-3e5f-7dd2-9d95-f210950c72ae.htm">UIApplication Class</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2024 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" /><span style="color: DarkGray"></span><div class="summary">
   Subscribe to the Idling event to be notified when Revit is not in an active tool or transaction.
</div><p /><b>Namespace:</b> <a href="e86fd90a-8957-02a6-da7f-ced248966e3e.htm">Autodesk.Revit.UI</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPIUI</span> (in RevitAPIUI.dll) Version: 24.0.0.0 (24.0.0.0)<br /><b>Since:</b> 
   2010
<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> event <span class="nolink">EventHandler</span>&lt;<a href="92e2300b-b4b1-af35-221a-cfbeb22c8705.htm">IdlingEventArgs</a>&gt; <span class="identifier">Idling</span></pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> Event <span class="identifier">Idling</span> <span class="keyword">As</span> <span class="nolink">EventHandler</span>(<span class="keyword">Of</span> <a href="92e2300b-b4b1-af35-221a-cfbeb22c8705.htm">IdlingEventArgs</a>)</pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span>:
 <span class="keyword">event</span> <span class="nolink">EventHandler</span>&lt;<a href="92e2300b-b4b1-af35-221a-cfbeb22c8705.htm">IdlingEventArgs</a>^&gt;^ <span class="identifier">Idling</span> {
	<span class="keyword">void</span> <span class="keyword">add</span> (<span class="nolink">EventHandler</span>&lt;<a href="92e2300b-b4b1-af35-221a-cfbeb22c8705.htm">IdlingEventArgs</a>^&gt;^ <span class="parameter">value</span>);
	<span class="keyword">void</span> <span class="keyword">remove</span> (<span class="nolink">EventHandler</span>&lt;<a href="92e2300b-b4b1-af35-221a-cfbeb22c8705.htm">IdlingEventArgs</a>^&gt;^ <span class="parameter">value</span>);
}</pre></td></tr></table></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle, event)" tabindex="0"><img id="remarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style=""><p>This event is raised when it is safe for the API application to access the active
   document between user interactions. The event is raised only when the Revit UI is
   in a state where the user could successfully click on an API command button.</p><p>
   Handlers of this event are permitted to make modifications to any document (including the active document),
   except for documents that are currently in read-only mode.
   </p><p>In order to change a document, you must begin a new transaction for that document.
   This transaction will appear in the Revit undo stack and may be undone by the Revit user.</p><p>This event is invoked between user actions in the Revit UI. If the handler for
   this event requires a significant amount of processing time, users will perceive a slowdown
   in the responsiveness of Revit. If the execution for updates can be safely split across
   multiple calls to this event, the user perception of Revit responsiveness will be improved. </p><p> There are two ways to use this event.  In the default mode, a single raise of the event
   will be made each time Revit begins an idle session.  Note that when the user is active in the Revit
   user interface, idle sessions begin whenever the mouse stops moving for a moment or when a
   command completes.  However, if the user is not active in the user interface at all, Revit may not invoke
   additional idling sessions for quite some time; this means that your application may not be able to take advantage
   of time when the user leaves the machine completely for a period of time.  </p><p> In the non-default mode, your application forces Revit to keep the idling session open and to make
   repeated calls to your event subscriber.  In this mode even if the user is totally inactive the Revit
   session will continue to make Idling calls to your application.  However, this can result in performance
   degradation for the system on which Revit is running because the CPU remains fully engaged in serving Idling
   events during the Revit application's downtime.</p><p> You can indicate the preference for the non-default Idling frequency by calling
   <a href="6ead2453-9221-9044-0d93-84cc7db00b0d.htm">SetRaiseWithoutDelay<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>
   each time the Idling event callback is made.  Revit will revert to the default Idling frequency
   if this method is not called every time in your callback.</p><p>Event is not cancellable. </p></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-comment">// Create a text note and update it once per second while Revit is idle</span>
TextNote textNote = <span class="highlight-keyword">null</span>;
String oldDateTime = <span class="highlight-keyword">null</span>;
<span class="highlight-keyword">public</span> Result Execute(ExternalCommandData commandData, <span class="highlight-keyword">ref</span> <span class="highlight-keyword">string</span> message, ElementSet elements)
{
    UIApplication uiApp = <span class="highlight-keyword">new</span> UIApplication(commandData.Application.Application);
    Document doc = commandData.Application.ActiveUIDocument.Document;
    <span class="highlight-keyword">using</span> (Transaction t = <span class="highlight-keyword">new</span> Transaction(doc, <span class="highlight-literal">"Text Note Creation"</span>))
    {
       t.Start();
       oldDateTime = DateTime.Now.ToString();
       ElementId defaultTextTypeId = doc.GetDefaultElementTypeId(ElementTypeGroup.TextNoteType);
       textNote = TextNote.Create(doc, doc.ActiveView.Id, XYZ.Zero, oldDateTime, defaultTextTypeId);
       t.Commit();
    }
    uiApp.Idling += <span class="highlight-keyword">new</span> EventHandler&lt;IdlingEventArgs&gt;(idleUpdate);
    <span class="highlight-keyword">return</span> Result.Succeeded;
}
<span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> idleUpdate(<span class="highlight-keyword">object</span> sender, IdlingEventArgs e)
{
    UIApplication uiApp = sender <span class="highlight-keyword">as</span> UIApplication;
    Document doc = uiApp.ActiveUIDocument.Document;
    <span class="highlight-keyword">if</span> (oldDateTime != DateTime.Now.ToString())
    {
        <span class="highlight-keyword">using</span> (Transaction transaction = <span class="highlight-keyword">new</span> Transaction(doc, <span class="highlight-literal">"Text Note Update"</span>))
        {
           transaction.Start();
           textNote.Text = DateTime.Now.ToString();
           transaction.Commit();
        }
        oldDateTime = DateTime.Now.ToString();
    }
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-comment">' Create a text note and update it once per second while Revit is idle</span>
<span class="highlight-keyword">Private</span> textNote <span class="highlight-keyword">As</span> TextNote = <span class="highlight-keyword">Nothing</span>
<span class="highlight-keyword">Private</span> oldDateTime <span class="highlight-keyword">As</span> [<span class="highlight-keyword">String</span>] = <span class="highlight-keyword">Nothing</span>
<span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> Execute(commandData <span class="highlight-keyword">As</span> ExternalCommandData, <span class="highlight-keyword">ByRef</span> message <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>, elements <span class="highlight-keyword">As</span> ElementSet) <span class="highlight-keyword">As</span> Autodesk.Revit.UI.Result <span class="highlight-keyword">Implements</span> IExternalCommand.Execute
    <span class="highlight-keyword">Dim</span> uiApp <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> UIApplication(commandData.Application.Application)
    <span class="highlight-keyword">Dim</span> doc <span class="highlight-keyword">As</span> Document = commandData.Application.ActiveUIDocument.Document
    <span class="highlight-keyword">Using</span> t <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Transaction(doc, <span class="highlight-literal">"Text Note Creation"</span>)
        t.Start()
        oldDateTime = DateTime.Now.ToString()
        <span class="highlight-keyword">Dim</span> defaultTextTypeId <span class="highlight-keyword">As</span> ElementId = doc.GetDefaultElementTypeId(ElementTypeGroup.TextNoteType)
        textNote = textNote.Create(doc, doc.ActiveView.Id, XYZ.Zero, oldDateTime, defaultTextTypeId)
        t.Commit()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>
    <span class="highlight-keyword">AddHandler</span> uiApp.Idling, <span class="highlight-keyword">AddressOf</span> idleUpdate
    <span class="highlight-keyword">Return</span> Result.Succeeded
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
<span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> idleUpdate(sender <span class="highlight-keyword">As</span> <span class="highlight-keyword">Object</span>, e <span class="highlight-keyword">As</span> IdlingEventArgs)
    <span class="highlight-keyword">Dim</span> uiApp <span class="highlight-keyword">As</span> UIApplication = <span class="highlight-keyword">TryCast</span>(sender, UIApplication)
    <span class="highlight-keyword">Dim</span> doc <span class="highlight-keyword">As</span> Document = uiApp.ActiveUIDocument.Document
    <span class="highlight-keyword">If</span> oldDateTime &lt;&gt; DateTime.Now.ToString() <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Using</span> transaction <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Transaction(doc, <span class="highlight-literal">"Text Note Update"</span>)
            transaction.Start()
            textNote.Text = DateTime.Now.ToString()
            transaction.Commit()
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>
        oldDateTime = DateTime.Now.ToString()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="51ca80e2-3e5f-7dd2-9d95-f210950c72ae.htm">UIApplication Class</a></div><div class="seeAlsoStyle"><a href="e86fd90a-8957-02a6-da7f-ced248966e3e.htm">Autodesk.Revit.UI Namespace</a></div></div></div><div id="footer"><div class="footerLine"><img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" /></div><A NAME="feedback"></A><span id="fb" class="feedbackcss"></span><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:revitapifeedback%40autodesk.com?Subject=Revit 2024 API">Autodesk</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></div></body></html>
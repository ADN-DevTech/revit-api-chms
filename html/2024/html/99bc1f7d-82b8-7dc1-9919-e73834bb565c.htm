<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>LabelDimension Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="LabelDimension method" /><meta name="System.Keywords" content="GlobalParameter.LabelDimension method" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.GlobalParameter.LabelDimension" /><meta name="Microsoft.Help.Id" content="M:Autodesk.Revit.DB.GlobalParameter.LabelDimension(Autodesk.Revit.DB.ElementId)" /><meta name="Description" content="Labels a dimension with this global parameter." /><meta name="Microsoft.Help.ContentType" content="Reference" /><link rel="stylesheet" type="text/css" href="../styles/Presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/Dropdown.js"> </script><script type="text/javascript" src="../scripts/script_manifold.js"> </script><script type="text/javascript" src="../scripts/script_feedBack.js"> </script><script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script><script type="text/javascript" src="../scripts/CommonUtilities.js"> </script><meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="99bc1f7d-82b8-7dc1-9919-e73834bb565c" /><meta name="guid" content="99bc1f7d-82b8-7dc1-9919-e73834bb565c" /><xml><MSHelp:Attr Name="AssetID" Value="M:Autodesk.Revit.DB.GlobalParameter.LabelDimension(Autodesk.Revit.DB.ElementId)" /><MSHelp:TOCTitle Title="LabelDimension Method " /><MSHelp:RLTitle Title="GlobalParameter.LabelDimension Method  (Autodesk.Revit.DB)" /><MSHelp:Keyword Index="A" Term="M:Autodesk.Revit.DB.GlobalParameter.LabelDimension(Autodesk.Revit.DB.ElementId)" /><MSHelp:Keyword Index="A" Term="frlrfAutodeskRevitDBGlobalParameterClassLabelDimensionTopic" /><MSHelp:Keyword Index="K" Term="LabelDimension method" /><MSHelp:Keyword Index="K" Term="GlobalParameter.LabelDimension method" /><MSHelp:Keyword Index="F" Term="Autodesk.Revit.DB.GlobalParameter.LabelDimension" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="RevitAPI.dll" /><MSHelp:Attr Name="APIName" Value="Autodesk.Revit.DB.GlobalParameter.LabelDimension" /><MSHelp:Attr Name="DevLang" Value="CSharp" /><MSHelp:Attr Name="DevLang" Value="VB" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="Abstract" Value="Labels a dimension with this global parameter." /><MSHelp:Attr Name="AssemblyVersion" Value="24.0.0.0" /></xml><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script></head><body><input type="hidden" id="userDataCache" class="userDataStyle" /><input type="hidden" id="hiddenScrollOffset" /><img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" /><img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" /><img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" /><img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" /><img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" /><img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" /><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" /><div id="header"><table id="topTable" cellspacing="0" cellpadding="0"><tr><td><span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0"><img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span><span>    </span><span id="devlangsDropdown" class="filter" tabindex="0"><img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: All </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Multiple </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: C# </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual Basic </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual C++ </nobr></label></span></td></tr></table><div id="devlangsMenu"><input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="CSharpCheckbox">C#</label><br /><input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label><br /><input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label><br /></div><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2024 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">GlobalParameter<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>LabelDimension Method </span></td></tr><tr id="headerTableRow3"><td align="left"><a href="b0e53a4a-84ad-abb4-358d-9797870f101b.htm">GlobalParameter Class</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2024 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" /><span style="color: DarkGray"></span><div class="summary">
   Labels a dimension with this global parameter.
</div><p /><b>Namespace:</b> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 24.0.0.0 (24.0.0.0)<br /><b>Since:</b> 
   2016 Subscription Update
<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">void</span> <span class="identifier">LabelDimension</span>(
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a> <span class="parameter">dimensionId</span>
)</pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Sub</span> <span class="identifier">LabelDimension</span> ( _
	<span class="parameter">dimensionId</span> <span class="keyword">As</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a> _
)</pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">void</span> <span class="identifier">LabelDimension</span>(
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^ <span class="parameter">dimensionId</span>
)</pre></td></tr></table></span></div><div id="parameters"><h4 class="subHeading">Parameters</h4><dl paramName="dimensionId"><dt><span class="parameter">dimensionId</span></dt><dd>Type: <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ElementId</a><br />
   Id of a dimension element.
</dd></dl></div></div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle, event)" tabindex="0"><img id="remarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style=""><p>When a dimension is labeled by a global parameters, then its value is either
   controlled by the parameter (non-reporting), or drives the value of the
   parameter (reporting). It is important to note that a reporting parameter
   can label at most one dimension object - meaning, a parameter can be driven
   by one dimension only. If the dimension has several segments and is labeled by a non-reprting parameter,
   the value of each segment will be driven by this parameter.  Multi-segmented dimensions
   cannot be labeled by reporting parameters.</p><p>If the dimension is already labeled by another global parameter,
   labeling it again will automatically detach it from that parameter.</p><p>Presently, not just any kind of dimensions may be labeled by a global parameter.
   Typically only single <b>Linear</b> and <b>Angular</b> dimensions can be labeled,
   but there are other restrictions in effect too. Also, for the value of the parameter
   and dimension labeled by it depend on each other, the data type of the global parameters
   must be either <b>Length</b> or <b>Angle</b>, since those are the only units a dimension
   can represent. Refer to the <span class="nolink">[!:CanLabelDimension(Autodesk::Revit::DB::ElementId)]</span>
   method to find out whether a particular dimension element may be labeled or not.</p></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// Creates a global parameter and uses it to label the set of given dimension elements </span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-comment">/// &lt;param name="document"&gt;Revit project document that contains the dimension.&lt;/param&gt;</span>
<span class="highlight-comment">/// &lt;param name="gpname"&gt;A name of the global parameter to create.&lt;/param&gt;</span>
<span class="highlight-comment">/// &lt;param name="value"&gt;Initial value of the global parameter&lt;/param&gt;</span>
<span class="highlight-comment">/// &lt;param name="dimset"&gt;A collection of dimension elements to drive by a global parameter&lt;/param&gt;</span>
<span class="highlight-comment">/// &lt;returns&gt;Number of actually labeled dimension&lt;/returns&gt;</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">int</span> DriveSelectedDimensions(Document document, <span class="highlight-keyword">string</span> name, <span class="highlight-keyword">double</span> value, ISet&lt;ElementId&gt; dimset)
{
    <span class="highlight-keyword">if</span> (!GlobalParametersManager.AreGlobalParametersAllowed(document))
        <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> System.InvalidOperationException(<span class="highlight-literal">"Global parameters are not permitted in the given document"</span>);

    <span class="highlight-keyword">if</span> (!GlobalParametersManager.IsUniqueName(document, name))
        <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> System.ArgumentException(<span class="highlight-literal">"Global parameter with such name already exists in the document"</span>, <span class="highlight-literal">"name"</span>);

    <span class="highlight-keyword">if</span> (value &lt;= <span class="highlight-number">0.0</span>)
        <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> System.ArgumentException(<span class="highlight-literal">"Value of a global parameter that drives dimension must be a positive number"</span>, <span class="highlight-literal">"value"</span>);

    <span class="highlight-keyword">int</span> nLabeledDims = <span class="highlight-number">0</span>;   <span class="highlight-comment">// number of labeled dimensions (for testing)</span>

    <span class="highlight-comment">// creation of any element must be in a transaction</span>
    <span class="highlight-keyword">using</span> (Transaction trans = <span class="highlight-keyword">new</span> Transaction(document, <span class="highlight-literal">"Create Global Parameter"</span>))
    {
        trans.Start();

        <span class="highlight-comment">// create a GP with the given name and type Length</span>
        <span class="highlight-comment">// Note: Length (or Angle) is required type of global parameters that are to label a dimension</span>
        GlobalParameter newgp = GlobalParameter.Create(document, name, SpecTypeId.Length);
        <span class="highlight-keyword">if</span> (newgp != <span class="highlight-keyword">null</span>)
        {
            newgp.SetValue(<span class="highlight-keyword">new</span> DoubleParameterValue(value));

            <span class="highlight-comment">// use the parameter to label the given dimensions</span>
            <span class="highlight-keyword">foreach</span> (ElementId elemid <span class="highlight-keyword">in</span> dimset)
            {
                <span class="highlight-comment">// not just any dimension is allowed to be labeled</span>
                <span class="highlight-comment">// check first to avoid exceptions</span>
                <span class="highlight-keyword">if</span> (newgp.CanLabelDimension(elemid))
                {
                    newgp.LabelDimension(elemid);
                    nLabeledDims += <span class="highlight-number">1</span>;
                }
            }

            trans.Commit();
        }
    }

    <span class="highlight-comment">// for illustration purposes only, we'll test the results of our modifications </span>

    <span class="highlight-comment">// 1.) Check the new parameter can be found</span>

    ElementId gpid = GlobalParametersManager.FindByName(document,name);
    <span class="highlight-keyword">if</span> (gpid == ElementId.InvalidElementId)
    {
        TaskDialog.Show(<span class="highlight-literal">"Error"</span>, <span class="highlight-literal">"Failed to find a newly created global parameter"</span>);
    }

    GlobalParameter gp = document.GetElement(gpid) <span class="highlight-keyword">as</span> GlobalParameter;

    <span class="highlight-comment">// 2. Check the number of labeled dimension is as expected</span>

    ISet&lt;ElementId&gt; labeledSet = gp.GetLabeledDimensions();
    <span class="highlight-keyword">if</span> (labeledSet.Count != nLabeledDims)
    {
        TaskDialog.Show(<span class="highlight-literal">"Error"</span>, <span class="highlight-literal">"Have not found all the dimension that were labeled."</span>);
    }

    <span class="highlight-keyword">return</span> labeledSet.Count;
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-comment">' &lt;summary&gt;</span>
<span class="highlight-comment">' Creates a global parameter and uses it to label the set of given dimension elements </span>
<span class="highlight-comment">' &lt;/summary&gt;</span>
<span class="highlight-comment">' &lt;param name="document"&gt;Revit project document that contains the dimension.&lt;/param&gt;</span>
<span class="highlight-comment">' &lt;param name="gpname"&gt;A name of the global parameter to create.&lt;/param&gt;</span>
<span class="highlight-comment">' &lt;param name="value"&gt;Initial value of the global parameter&lt;/param&gt;</span>
<span class="highlight-comment">' &lt;param name="dimset"&gt;A collection of dimension elements to drive by a global parameter&lt;/param&gt;</span>
<span class="highlight-comment">' &lt;returns&gt;Number of actually labeled dimension&lt;/returns&gt;</span>
<span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> DriveSelectedDimensions(document <span class="highlight-keyword">As</span> Document, name <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>, value <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>, dimset <span class="highlight-keyword">As</span> ISet(<span class="highlight-keyword">Of</span> ElementId)) <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span>
    <span class="highlight-keyword">If</span> <span class="highlight-keyword">Not</span> GlobalParametersManager.AreGlobalParametersAllowed(document) <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Throw</span> <span class="highlight-keyword">New</span> System.InvalidOperationException(<span class="highlight-literal">"Global parameters are not permitted in the given document"</span>)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">If</span> <span class="highlight-keyword">Not</span> GlobalParametersManager.IsUniqueName(document, name) <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Throw</span> <span class="highlight-keyword">New</span> System.ArgumentException(<span class="highlight-literal">"Global parameter with such name already exists in the document"</span>, <span class="highlight-literal">"name"</span>)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">If</span> value &lt;= <span class="highlight-number">0.0</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Throw</span> <span class="highlight-keyword">New</span> System.ArgumentException(<span class="highlight-literal">"Value of a global parameter that drives dimension must be a positive number"</span>, <span class="highlight-literal">"value"</span>)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Dim</span> nLabeledDims <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span>
    <span class="highlight-comment">' number of labeled dimensions (for testing)</span>
    <span class="highlight-comment">' creation of any element must be in a transaction</span>
    <span class="highlight-keyword">Using</span> trans <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Transaction(document, <span class="highlight-literal">"Create Global Parameter"</span>)
        trans.Start()

    <span class="highlight-comment">' create a GP with the given name and type Length</span>
    <span class="highlight-comment">' Note: Length (or Angle) is required type of global parameters that are to label a dimension</span>
    <span class="highlight-keyword">Dim</span> newgp <span class="highlight-keyword">As</span> GlobalParameter = GlobalParameter.Create(document, name, SpecTypeId.Length)
    <span class="highlight-keyword">If</span> newgp <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
            newgp.SetValue(<span class="highlight-keyword">New</span> DoubleParameterValue(value))

            <span class="highlight-comment">' use the parameter to label the given dimensions</span>
            <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> elemid <span class="highlight-keyword">As</span> ElementId <span class="highlight-keyword">In</span> dimset
                <span class="highlight-comment">' not just any dimension is allowed to be labeled</span>
                <span class="highlight-comment">' check first to avoid exceptions</span>
                <span class="highlight-keyword">If</span> newgp.CanLabelDimension(elemid) <span class="highlight-keyword">Then</span>
                    newgp.LabelDimension(elemid)
                    nLabeledDims += <span class="highlight-number">1</span>
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
            <span class="highlight-keyword">Next</span>

            trans.Commit()
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>

    <span class="highlight-comment">' for illustration purposes only, we'll test the results of our modifications </span>


    <span class="highlight-comment">' 1.) Check the new parameter can be found</span>


    <span class="highlight-keyword">Dim</span> gpid <span class="highlight-keyword">As</span> ElementId = GlobalParametersManager.FindByName(document, name)
    <span class="highlight-keyword">If</span> gpid = ElementId.InvalidElementId <span class="highlight-keyword">Then</span>
        TaskDialog.Show(<span class="highlight-literal">"Error"</span>, <span class="highlight-literal">"Failed to find a newly created global parameter"</span>)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Dim</span> gp <span class="highlight-keyword">As</span> GlobalParameter = <span class="highlight-keyword">TryCast</span>(document.GetElement(gpid), GlobalParameter)

    <span class="highlight-comment">' 2. Check the number of labeled dimension is as expected</span>


    <span class="highlight-keyword">Dim</span> labeledSet <span class="highlight-keyword">As</span> ISet(<span class="highlight-keyword">Of</span> ElementId) = gp.GetLabeledDimensions()
    <span class="highlight-keyword">If</span> labeledSet.Count &lt;&gt; nLabeledDims <span class="highlight-keyword">Then</span>
        TaskDialog.Show(<span class="highlight-literal">"Error"</span>, <span class="highlight-literal">"Have not found all the dimension that were labeled."</span>)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Return</span> labeledSet.Count
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(exceptionsToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exceptionsToggle, event)" tabindex="0"><img id="exceptionsToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Exceptions</span></h1><div id="exceptionsSection" class="section" name="collapseableSection" style=""><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th class="exceptionNameColumn">Exception</th><th class="exceptionConditionColumn">Condition</th></tr><tr><td><a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">Autodesk.Revit.Exceptions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ArgumentException</a></td><td>
   Given element Id is not of a valid dimension element.
   -or-
   Dimension with the Id of dimensionId cannot be labeled by this global parameter.
   Possible causes include the dimension cannot be labeled at all, or it is a dimension
   of other than Linear or Angular type, or the Dimension object does not have the
   appropriate labeling parameter, or the dimension has more than one segment and the parameter
   is reporting.
</td></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">Autodesk.Revit.Exceptions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ArgumentNullException</a></td><td>
   A non-optional argument was null
</td></tr></table></div></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="b0e53a4a-84ad-abb4-358d-9797870f101b.htm">GlobalParameter Class</a></div><div class="seeAlsoStyle"><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div><div id="footer"><div class="footerLine"><img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" /></div><A NAME="feedback"></A><span id="fb" class="feedbackcss"></span><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:revitapifeedback%40autodesk.com?Subject=Revit 2024 API">Autodesk</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></div></body></html>
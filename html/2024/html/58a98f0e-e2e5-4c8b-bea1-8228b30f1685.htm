<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>BoundaryConditions Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="BoundaryConditions class" /><meta name="System.Keywords" content="Autodesk.Revit.DB.Structure.BoundaryConditions class" /><meta name="System.Keywords" content="BoundaryConditions class, about BoundaryConditions class" /><meta name="Microsoft.Help.F1" content="Autodesk.Revit.DB.Structure.BoundaryConditions" /><meta name="Microsoft.Help.Id" content="T:Autodesk.Revit.DB.Structure.BoundaryConditions" /><meta name="Description" content="An object that represents a force applied across an area." /><meta name="Microsoft.Help.ContentType" content="Reference" /><link rel="stylesheet" type="text/css" href="../styles/Presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/Dropdown.js"> </script><script type="text/javascript" src="../scripts/script_manifold.js"> </script><script type="text/javascript" src="../scripts/script_feedBack.js"> </script><script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script><script type="text/javascript" src="../scripts/CommonUtilities.js"> </script><meta name="container" content="Autodesk.Revit.DB.Structure" /><meta name="file" content="58a98f0e-e2e5-4c8b-bea1-8228b30f1685" /><meta name="guid" content="58a98f0e-e2e5-4c8b-bea1-8228b30f1685" /><xml><MSHelp:Attr Name="AssetID" Value="T:Autodesk.Revit.DB.Structure.BoundaryConditions" /><MSHelp:TOCTitle Title="BoundaryConditions Class" /><MSHelp:RLTitle Title="BoundaryConditions Class (Autodesk.Revit.DB.Structure)" /><MSHelp:Keyword Index="A" Term="T:Autodesk.Revit.DB.Structure.BoundaryConditions" /><MSHelp:Keyword Index="A" Term="frlrfAutodeskRevitDBStructureBoundaryConditionsClassTopic" /><MSHelp:Keyword Index="K" Term="BoundaryConditions class" /><MSHelp:Keyword Index="K" Term="Autodesk.Revit.DB.Structure.BoundaryConditions class" /><MSHelp:Keyword Index="K" Term="BoundaryConditions class, about BoundaryConditions class" /><MSHelp:Keyword Index="F" Term="Autodesk.Revit.DB.Structure.BoundaryConditions" /><MSHelp:Attr Name="HelpPriority" Value="2" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="RevitAPI.dll" /><MSHelp:Attr Name="APIName" Value="Autodesk.Revit.DB.Structure.BoundaryConditions" /><MSHelp:Attr Name="DevLang" Value="CSharp" /><MSHelp:Attr Name="DevLang" Value="VB" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="Abstract" Value="An object that represents a force applied across an area." /><MSHelp:Attr Name="AssemblyVersion" Value="24.0.0.0" /></xml><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script></head><body><input type="hidden" id="userDataCache" class="userDataStyle" /><input type="hidden" id="hiddenScrollOffset" /><img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" /><img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" /><img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" /><img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" /><img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" /><img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" /><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" /><div id="header"><table id="topTable" cellspacing="0" cellpadding="0"><tr><td><span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0"><img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span><span>    </span><span id="devlangsDropdown" class="filter" tabindex="0"><img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: All </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Multiple </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: C# </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual Basic </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual C++ </nobr></label></span></td></tr></table><div id="devlangsMenu"><input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="CSharpCheckbox">C#</label><br /><input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label><br /><input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label><br /></div><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2024 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">BoundaryConditions Class</span></td></tr><tr id="headerTableRow3"><td align="left"><a href="8c24b5f4-c86e-9d2f-07bb-fdff4161246c.htm">Members</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2024 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" /><span style="color: DarkGray"></span><div class="summary">
   An object that represents a force applied across an area.
</div><p /><b>Namespace:</b> <a href="d586b341-f687-9d90-e96d-255806b7d4fc.htm">Autodesk.Revit.DB.Structure</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 24.0.0.0 (24.0.0.0)<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">BoundaryConditions</span> : <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a></pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">BoundaryConditions</span> _
	<span class="keyword">Inherits</span> <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a></pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">BoundaryConditions</span> : <span class="keyword">public</span> <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a></pre></td></tr></table></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> GetInfo_BoundaryConditions(BoundaryConditions boundaryConditions)
{
    <span class="highlight-keyword">string</span> message = <span class="highlight-literal">"BoundaryConditions : "</span>;

    boundaryConditions.GetBoundaryConditionsType();
    <span class="highlight-keyword">switch</span> (boundaryConditions.GetBoundaryConditionsType())
    {
        <span class="highlight-keyword">case</span> BoundaryConditionsType.Point:
            XYZ point = boundaryConditions.Point;
            message += <span class="highlight-literal">"\nThis BoundaryConditions is a Point Boundary Conditions."</span>;
            message += <span class="highlight-literal">"\nLocation point: ("</span> + point.X + <span class="highlight-literal">", "</span>
                        + point.Y + <span class="highlight-literal">", "</span> + point.Z + <span class="highlight-literal">")"</span>;
            <span class="highlight-keyword">break</span>;
        <span class="highlight-keyword">case</span> BoundaryConditionsType.Line:
            message += <span class="highlight-literal">"\nThis BoundaryConditions is a Line Boundary Conditions."</span>;
            Curve curve = boundaryConditions.GetCurve();
            <span class="highlight-comment">// Get curve start point</span>
            message += <span class="highlight-literal">"\nLocation Line: start point: ("</span> + curve.GetEndPoint(<span class="highlight-number">0</span>).X + <span class="highlight-literal">", "</span>
                    + curve.GetEndPoint(<span class="highlight-number">0</span>).Y + <span class="highlight-literal">", "</span> + curve.GetEndPoint(<span class="highlight-number">0</span>).Z + <span class="highlight-literal">")"</span>;
            <span class="highlight-comment">// Get curve end point</span>
            message += <span class="highlight-literal">";  end point:("</span> + curve.GetEndPoint(<span class="highlight-number">1</span>).X + <span class="highlight-literal">", "</span>
                    + curve.GetEndPoint(<span class="highlight-number">1</span>).Y + <span class="highlight-literal">", "</span> + curve.GetEndPoint(<span class="highlight-number">1</span>).Z + <span class="highlight-literal">")"</span>;
            <span class="highlight-keyword">break</span>;
        <span class="highlight-keyword">case</span> BoundaryConditionsType.Area:
            message += <span class="highlight-literal">"\nThis BoundaryConditions is an Area Boundary Conditions."</span>;
            IList&lt;CurveLoop&gt; loops = boundaryConditions.GetLoops();
            <span class="highlight-keyword">foreach</span> (CurveLoop curveLoop <span class="highlight-keyword">in</span> loops)
            {
                <span class="highlight-keyword">foreach</span> (Curve areaCurve <span class="highlight-keyword">in</span> curveLoop)
                {
                    <span class="highlight-comment">// Get curve start point</span>
                    message += <span class="highlight-literal">"\nCurve start point:("</span> + areaCurve.GetEndPoint(<span class="highlight-number">0</span>).X + <span class="highlight-literal">", "</span>
                            + areaCurve.GetEndPoint(<span class="highlight-number">0</span>).Y + <span class="highlight-literal">", "</span> + areaCurve.GetEndPoint(<span class="highlight-number">0</span>).Z + <span class="highlight-literal">")"</span>;
                    <span class="highlight-comment">// Get curve end point</span>
                    message += <span class="highlight-literal">"; Curve end point:("</span> + areaCurve.GetEndPoint(<span class="highlight-number">1</span>).X + <span class="highlight-literal">", "</span>
                            + areaCurve.GetEndPoint(<span class="highlight-number">1</span>).Y + <span class="highlight-literal">", "</span> + areaCurve.GetEndPoint(<span class="highlight-number">1</span>).Z + <span class="highlight-literal">")"</span>;
                }
            }
            <span class="highlight-keyword">break</span>;
        <span class="highlight-keyword">default</span>:
            <span class="highlight-keyword">break</span>;
    }

    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>,message);
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> GetInfo_BoundaryConditions(boundaryConditions <span class="highlight-keyword">As</span> BoundaryConditions)
    <span class="highlight-keyword">Dim</span> message <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">"BoundaryConditions : "</span>

    boundaryConditions.GetBoundaryConditionsType()
    <span class="highlight-keyword">Select</span> <span class="highlight-keyword">Case</span> boundaryConditions.GetBoundaryConditionsType()
        <span class="highlight-keyword">Case</span> BoundaryConditionsType.Point
            <span class="highlight-keyword">Dim</span> point <span class="highlight-keyword">As</span> XYZ = boundaryConditions.Point
            message += vbLf &amp; <span class="highlight-literal">"This BoundaryConditions is a Point Boundary Conditions."</span>
            message += vbLf &amp; <span class="highlight-literal">"Location point: ("</span> + point.X + <span class="highlight-literal">", "</span> + point.Y + <span class="highlight-literal">", "</span> + point.Z + <span class="highlight-literal">")"</span>
            <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
        <span class="highlight-keyword">Case</span> BoundaryConditionsType.Line
            message += vbLf &amp; <span class="highlight-literal">"This BoundaryConditions is a Line Boundary Conditions."</span>
            <span class="highlight-keyword">Dim</span> curve <span class="highlight-keyword">As</span> Curve = boundaryConditions.GetCurve()
            <span class="highlight-comment">' Get curve start point</span>
            message += vbLf &amp; <span class="highlight-literal">"Location Line: start point: ("</span> + curve.GetEndPoint(<span class="highlight-number">0</span>).X + <span class="highlight-literal">", "</span> + curve.GetEndPoint(<span class="highlight-number">0</span>).Y + <span class="highlight-literal">", "</span> + curve.GetEndPoint(<span class="highlight-number">0</span>).Z + <span class="highlight-literal">")"</span>
            <span class="highlight-comment">' Get curve end point</span>
            message += <span class="highlight-literal">";  end point:("</span> + curve.GetEndPoint(<span class="highlight-number">1</span>).X + <span class="highlight-literal">", "</span> + curve.GetEndPoint(<span class="highlight-number">1</span>).Y + <span class="highlight-literal">", "</span> + curve.GetEndPoint(<span class="highlight-number">1</span>).Z + <span class="highlight-literal">")"</span>
            <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
        <span class="highlight-keyword">Case</span> BoundaryConditionsType.Area
            message += vbLf &amp; <span class="highlight-literal">"This BoundaryConditions is an Area Boundary Conditions."</span>
            <span class="highlight-keyword">Dim</span> loops <span class="highlight-keyword">As</span> IList(<span class="highlight-keyword">Of</span> CurveLoop) = boundaryConditions.GetLoops()
            <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> curveLoop <span class="highlight-keyword">As</span> CurveLoop <span class="highlight-keyword">In</span> loops
                <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> areaCurve <span class="highlight-keyword">As</span> Curve <span class="highlight-keyword">In</span> curveLoop
                    <span class="highlight-comment">' Get curve start point</span>
                    message += vbLf &amp; <span class="highlight-literal">"Curve start point:("</span> + areaCurve.GetEndPoint(<span class="highlight-number">0</span>).X + <span class="highlight-literal">", "</span> + areaCurve.GetEndPoint(<span class="highlight-number">0</span>).Y + <span class="highlight-literal">", "</span> + areaCurve.GetEndPoint(<span class="highlight-number">0</span>).Z + <span class="highlight-literal">")"</span>
                    <span class="highlight-comment">' Get curve end point</span>
                    message += <span class="highlight-literal">"; Curve end point:("</span> + areaCurve.GetEndPoint(<span class="highlight-number">1</span>).X + <span class="highlight-literal">", "</span> + areaCurve.GetEndPoint(<span class="highlight-number">1</span>).Y + <span class="highlight-literal">", "</span> + areaCurve.GetEndPoint(<span class="highlight-number">1</span>).Z + <span class="highlight-literal">")"</span>
                <span class="highlight-keyword">Next</span>
            <span class="highlight-keyword">Next</span>
            <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
        <span class="highlight-keyword">Case</span> <span class="highlight-keyword">Else</span>
            <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Select</span>

    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, message)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(familyToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(familyToggle, event)" tabindex="0"><img id="familyToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Inheritance Hierarchy</span></h1><div id="familySection" class="section" name="collapseableSection" style=""><span class="nolink">System<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Object</span><br />  <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Element</a><br />    <span class="selflink">Autodesk.Revit.DB.Structure<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>BoundaryConditions</span><br /></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="8c24b5f4-c86e-9d2f-07bb-fdff4161246c.htm">BoundaryConditions Members</a></div><div class="seeAlsoStyle"><a href="d586b341-f687-9d90-e96d-255806b7d4fc.htm">Autodesk.Revit.DB.Structure Namespace</a></div></div></div><div id="footer"><div class="footerLine"><img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" /></div><A NAME="feedback"></A><span id="fb" class="feedbackcss"></span><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:revitapifeedback%40autodesk.com?Subject=Revit 2024 API">Autodesk</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></div></body></html>